/*
 * Automatically Generated from Mathematica.
 * Tue 10 Jul 2018 11:14:22 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;


#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t43049;
  double t43544;
  double t43285;
  double t43822;
  double t43295;
  double t43141;
  double t42926;
  double t42793;
  double t43303;
  double t44122;
  double t44220;
  double t44646;
  double t44458;
  double t44538;
  double t44551;
  double t44436;
  double t44663;
  double t46143;
  double t65844;
  double t42729;
  double t44574;
  double t66062;
  double t66136;
  double t43133;
  double t44227;
  double t44337;
  double t66247;
  double t33917;
  double t66925;
  double t66928;
  double t66945;
  double t66518;
  double t66538;
  double t66980;
  double t66986;
  double t67193;
  double t67230;
  double t67239;
  double t67242;
  double t66611;
  double t67219;
  double t67247;
  double t67255;
  double t66876;
  double t66947;
  double t66952;
  double t44348;
  double t66249;
  double t66252;
  double t66542;
  double t66544;
  double t66545;
  double t66588;
  double t66624;
  double t66665;
  double t66785;
  double t66799;
  double t66833;
  double t66959;
  double t67260;
  double t67264;
  double t67269;
  double t67270;
  double t67271;
  double t67274;
  double t67275;
  double t67276;
  double t67283;
  double t67290;
  double t67296;
  double t70633;
  double t72079;
  double t72104;
  double t72214;
  double t72254;
  double t72259;
  double t72558;
  double t72560;
  double t72562;
  double t72551;
  double t72566;
  double t72568;
  double t72571;
  double t72600;
  double t72658;
  double t72666;
  double t72667;
  double t72776;
  double t72797;
  double t72798;
  double t72810;
  double t72844;
  double t72845;
  double t72851;
  double t73425;
  double t73441;
  double t73601;
  double t73607;
  double t73687;
  double t73697;
  double t73742;
  double t73746;
  double t73762;
  double t73776;
  double t73832;
  double t73841;
  double t73866;
  double t73873;
  double t73889;
  double t73901;
  double t73908;
  double t73911;
  double t73409;
  double t73472;
  double t73555;
  double t73568;
  double t73750;
  double t73752;
  double t73759;
  double t73810;
  double t73828;
  double t73882;
  double t73924;
  double t73928;
  double t73936;
  double t73937;
  double t73941;
  double t73942;
  double t73955;
  double t73956;
  double t73957;
  double t73295;
  double t73308;
  double t73352;
  double t73940;
  double t73959;
  double t73960;
  double t73963;
  double t73968;
  double t73969;
  double t73988;
  double t73990;
  double t73991;
  double t73992;
  double t73993;
  double t73994;
  double t73995;
  double t73997;
  double t74010;
  double t74011;
  double t74043;
  double t74059;
  double t74060;
  double t74073;
  double t74091;
  double t74096;
  double t74016;
  double t74017;
  double t74022;
  double t73165;
  double t73231;
  double t73274;
  double t73961;
  double t74012;
  double t74013;
  double t74121;
  double t74125;
  double t74129;
  double t74027;
  double t74031;
  double t74033;
  double t74113;
  double t74114;
  double t74118;
  double t74169;
  double t74171;
  double t74172;
  double t74476;
  double t74483;
  double t74488;
  double t74543;
  double t74602;
  double t74612;
  double t74130;
  double t74142;
  double t74944;
  double t74970;
  double t74977;
  double t74188;
  double t74992;
  double t75000;
  double t75020;
  double t74219;
  double t74986;
  double t75039;
  double t74131;
  double t74132;
  double t74134;
  double t75129;
  double t75151;
  double t74143;
  double t74145;
  double t74160;
  double t75229;
  double t75236;
  double t74189;
  double t74190;
  double t74194;
  double t75292;
  double t75297;
  double t74223;
  double t74258;
  double t74294;
  double t74925;
  double t75451;
  double t75452;
  double t75454;
  double t75443;
  double t75446;
  double t75449;
  double t75051;
  double t75513;
  double t75519;
  double t75523;
  double t75524;
  double t75532;
  double t75542;
  double t75188;
  double t75461;
  double t75466;
  double t75467;
  double t75270;
  double t75761;
  double t75763;
  double t75765;
  double t75815;
  double t75824;
  double t75842;
  double t75512;
  double t75544;
  double t74927;
  double t74930;
  double t75564;
  double t75566;
  double t75056;
  double t75068;
  double t75638;
  double t75658;
  double t75200;
  double t75222;
  double t75695;
  double t75697;
  double t75271;
  double t75282;
  double t75734;
  double t75735;
  double t75737;
  double t75747;
  double t75748;
  double t75756;
  double t76084;
  double t76089;
  double t76237;
  double t76238;
  double t76239;
  double t76117;
  double t76130;
  double t76268;
  double t76269;
  double t76282;
  double t76312;
  double t76357;
  double t76362;
  double t76142;
  double t76145;
  double t76406;
  double t76408;
  double t76409;
  double t76166;
  double t76190;
  double t75487;
  double t76612;
  double t76615;
  double t76621;
  double t76628;
  double t75551;
  double t76632;
  double t76641;
  double t76642;
  double t75607;
  double t75671;
  double t76688;
  double t76689;
  double t76690;
  double t76803;
  double t76804;
  double t76811;
  double t75482;
  double t75488;
  double t76631;
  double t76650;
  double t75555;
  double t75559;
  double t76701;
  double t76711;
  double t75604;
  double t75620;
  double t76761;
  double t76773;
  double t75685;
  double t75689;
  double t76816;
  double t76823;
  double t77002;
  double t77006;
  double t77010;
  double t77015;
  double t77016;
  double t77017;
  double t77029;
  double t77030;
  double t77031;
  double t77033;
  double t77034;
  double t77036;
  double t77045;
  double t77046;
  double t77047;
  double t77049;
  double t77050;
  double t77051;
  double t76907;
  double t76921;
  double t77078;
  double t77083;
  double t77101;
  double t76942;
  double t76957;
  double t77251;
  double t77252;
  double t77253;
  double t77211;
  double t77212;
  double t77243;
  double t76967;
  double t76972;
  double t77245;
  double t77246;
  double t77247;
  double t76978;
  double t76989;
  double t77001;
  double t77011;
  double t77012;
  double t77014;
  double t77021;
  double t77025;
  double t77162;
  double t77244;
  double t77372;
  double t77381;
  double t77384;
  double t77293;
  double t77299;
  double t77411;
  double t77414;
  double t77416;
  double t77421;
  double t77431;
  double t77432;
  double t77309;
  double t77314;
  double t77404;
  double t77408;
  double t77409;
  double t77334;
  double t77343;
  double t76783;
  double t77596;
  double t77597;
  double t77584;
  double t77586;
  double t77587;
  double t77588;
  double t77589;
  double t76829;
  double t76659;
  double t76725;
  double t77652;
  double t77653;
  double t77656;
  double t77784;
  double t77790;
  double t77791;
  double t76658;
  double t76667;
  double t77718;
  double t77727;
  double t76732;
  double t76734;
  double t77772;
  double t77779;
  double t76781;
  double t76787;
  double t77591;
  double t77607;
  double t76842;
  double t76848;
  double t77661;
  double t77669;
  double t78235;
  double t78239;
  double t78243;
  double t78204;
  double t78213;
  double t78222;
  double t77925;
  double t77988;
  double t78067;
  double t78110;
  double t78372;
  double t78375;
  double t78380;
  double t78364;
  double t78365;
  double t78370;
  double t78225;
  double t78226;
  double t78230;
  double t78330;
  double t78354;
  double t78355;
  double t78155;
  double t78157;
  double t78173;
  double t78179;
  double t78515;
  double t78516;
  double t78517;
  double t78402;
  double t78405;
  double t78409;
  double t78544;
  double t78546;
  double t78547;
  double t78558;
  double t78561;
  double t78562;
  double t78585;
  double t78594;
  double t78607;
  double t78612;
  double t78616;
  double t78617;
  double t78632;
  double t78634;
  double t78638;
  double t78644;
  double t78650;
  double t78651;
  double t78329;
  double t78371;
  double t78673;
  double t78674;
  double t78675;
  double t78420;
  double t78448;
  double t78713;
  double t78716;
  double t78719;
  double t78700;
  double t78701;
  double t78710;
  double t78482;
  double t78490;
  double t78693;
  double t78697;
  double t78698;
  double t78501;
  double t78527;
  double t78542;
  double t78552;
  double t78553;
  double t78557;
  double t78563;
  double t78565;
  double t78692;
  double t78712;
  double t78764;
  double t78765;
  double t78766;
  double t78737;
  double t78738;
  double t78779;
  double t78781;
  double t78783;
  double t78786;
  double t78789;
  double t78791;
  double t78744;
  double t78746;
  double t78774;
  double t78775;
  double t78777;
  double t78754;
  double t78755;
  double t77697;
  double t78884;
  double t78886;
  double t78890;
  double t78893;
  double t78897;
  double t78898;
  double t77750;
  double t77618;
  double t77676;
  double t77622;
  double t77646;
  double t78968;
  double t78975;
  double t78950;
  double t78964;
  double t77677;
  double t77678;
  double t77702;
  double t77703;
  double t78895;
  double t79019;
  double t79026;
  double t78902;
  double t78906;
  double t78914;
  double t77753;
  double t77756;
  double t79154;
  double t79155;
  double t79161;
  double t79147;
  double t79149;
  double t79152;
  double t79079;
  double t79081;
  double t79089;
  double t79103;
  double t79202;
  double t79203;
  double t79206;
  double t79221;
  double t79223;
  double t79226;
  double t79140;
  double t79141;
  double t79144;
  double t79237;
  double t79239;
  double t79249;
  double t79028;
  double t79031;
  double t79054;
  double t79061;
  double t79339;
  double t79340;
  double t79342;
  double t79278;
  double t79299;
  double t79301;
  double t79373;
  double t79378;
  double t79379;
  double t79209;
  double t79363;
  double t79364;
  double t79366;
  double t79234;
  double t79263;
  double t79304;
  double t79398;
  double t79400;
  double t79405;
  double t79385;
  double t79386;
  double t79388;
  double t79368;
  double t79369;
  double t79370;
  double t79324;
  double t79411;
  double t79415;
  double t79420;
  double t79327;
  double t79333;
  double t79344;
  double t79506;
  double t79511;
  double t79513;
  double t79426;
  double t79429;
  double t79433;
  double t79548;
  double t79551;
  double t79563;
  double t79586;
  double t79595;
  double t79596;
  double t79603;
  double t79604;
  double t79606;
  double t79610;
  double t79611;
  double t79612;
  double t79624;
  double t79625;
  double t79626;
  double t79628;
  double t79629;
  double t79632;
  double t79393;
  double t79408;
  double t79690;
  double t79691;
  double t79710;
  double t79458;
  double t79462;
  double t79768;
  double t79797;
  double t79798;
  double t79821;
  double t79825;
  double t79842;
  double t79479;
  double t79482;
  double t79870;
  double t79874;
  double t79879;
  double t79505;
  double t79524;
  double t79547;
  double t79567;
  double t79571;
  double t79581;
  double t79598;
  double t79599;
  double t79859;
  double t79862;
  double t79970;
  double t79972;
  double t79973;
  double t79901;
  double t79903;
  double t79982;
  double t79983;
  double t79984;
  double t79999;
  double t80003;
  double t80013;
  double t79929;
  double t79935;
  double t80039;
  double t80040;
  double t80041;
  double t79943;
  double t79947;
  double t78942;
  double t78944;
  double t80167;
  double t80176;
  double t80178;
  double t78878;
  double t78882;
  double t78984;
  double t80196;
  double t80199;
  double t80163;
  double t80189;
  double t78985;
  double t80225;
  double t80241;
  double t80243;
  double t80255;
  double t80262;
  double t80263;
  double t80264;
  double t80190;
  double t80194;
  double t80277;
  double t80279;
  double t80280;
  double t80310;
  double t80353;
  double t80358;
  double t80395;
  double t80397;
  double t80398;
  double t80389;
  double t80390;
  double t80391;
  double t80265;
  double t80372;
  double t80385;
  double t80271;
  double t80290;
  double t80466;
  double t80467;
  double t80469;
  double t80399;
  double t80423;
  double t80425;
  double t80499;
  double t80500;
  double t80504;
  double t80508;
  double t80509;
  double t80511;
  double t80442;
  double t80488;
  double t80489;
  double t80491;
  double t80459;
  double t80465;
  double t80573;
  double t80575;
  double t80576;
  double t80603;
  double t80605;
  double t80608;
  double t67365;
  double t67395;
  double t67396;
  double t80638;
  double t80640;
  double t80644;
  double t80649;
  double t80653;
  double t80654;
  double t80513;
  double t80517;
  double t80519;
  double t80701;
  double t80703;
  double t80704;
  double t80697;
  double t80698;
  double t80699;
  double t80538;
  double t80568;
  double t80579;
  double t80601;
  double t80612;
  double t80615;
  double t80700;
  double t80714;
  double t80717;
  double t80751;
  double t80754;
  double t80755;
  double t80758;
  double t80760;
  double t80761;
  double t80727;
  double t80737;
  double t80739;
  t43049 = Sin(var1[17]);
  t43544 = Cos(var1[15]);
  t43285 = Cos(var1[17]);
  t43822 = Cos(var1[16]);
  t43295 = Sin(var1[15]);
  t43141 = Cos(var1[14]);
  t42926 = Sin(var1[16]);
  t42793 = Sin(var1[14]);
  t43303 = -1.*t43285*t43295;
  t44122 = -1.*t43544*t43822*t43049;
  t44220 = t43303 + t44122;
  t44646 = Cos(var1[13]);
  t44458 = t43544*t43285;
  t44538 = -1.*t43822*t43295*t43049;
  t44551 = t44458 + t44538;
  t44436 = Sin(var1[13]);
  t44663 = t43141*t42926*t43049;
  t46143 = -1.*t42793*t44220;
  t65844 = t44663 + t46143;
  t42729 = Cos(var1[5]);
  t44574 = t44436*t44551;
  t66062 = t44646*t65844;
  t66136 = t44574 + t66062;
  t43133 = t42793*t42926*t43049;
  t44227 = t43141*t44220;
  t44337 = t43133 + t44227;
  t66247 = Sin(var1[5]);
  t33917 = Sin(var1[3]);
  t66925 = t43544*t43822*t43285;
  t66928 = -1.*t43295*t43049;
  t66945 = t66925 + t66928;
  t66518 = Cos(var1[3]);
  t66538 = Cos(var1[4]);
  t66980 = t43822*t43285*t43295;
  t66986 = t43544*t43049;
  t67193 = t66980 + t66986;
  t67230 = -1.*t43141*t43285*t42926;
  t67239 = -1.*t42793*t66945;
  t67242 = t67230 + t67239;
  t66611 = Sin(var1[4]);
  t67219 = t44436*t67193;
  t67247 = t44646*t67242;
  t67255 = t67219 + t67247;
  t66876 = -1.*t43285*t42793*t42926;
  t66947 = t43141*t66945;
  t66952 = t66876 + t66947;
  t44348 = t42729*t44337;
  t66249 = t66136*t66247;
  t66252 = t44348 + t66249;
  t66542 = t44646*t44551;
  t66544 = -1.*t44436*t65844;
  t66545 = t66542 + t66544;
  t66588 = t66538*t66545;
  t66624 = t42729*t66136;
  t66665 = -1.*t44337*t66247;
  t66785 = t66624 + t66665;
  t66799 = -1.*t66611*t66785;
  t66833 = t66588 + t66799;
  t66959 = t42729*t66952;
  t67260 = t67255*t66247;
  t67264 = t66959 + t67260;
  t67269 = t44646*t67193;
  t67270 = -1.*t44436*t67242;
  t67271 = t67269 + t67270;
  t67274 = t66538*t67271;
  t67275 = t42729*t67255;
  t67276 = -1.*t66952*t66247;
  t67283 = t67275 + t67276;
  t67290 = -1.*t66611*t67283;
  t67296 = t67274 + t67290;
  t70633 = -1.*t66545*t66611;
  t72079 = -1.*t66538*t66785;
  t72104 = t70633 + t72079;
  t72214 = -1.*t67271*t66611;
  t72254 = -1.*t66538*t67283;
  t72259 = t72214 + t72254;
  t72558 = t43141*t43822;
  t72560 = -1.*t43544*t42793*t42926;
  t72562 = t72558 + t72560;
  t72551 = t44646*t43295*t42926;
  t72566 = -1.*t44436*t72562;
  t72568 = t72551 + t72566;
  t72571 = t66538*t72568;
  t72600 = t44436*t43295*t42926;
  t72658 = t44646*t72562;
  t72666 = t72600 + t72658;
  t72667 = t42729*t72666;
  t72776 = t43822*t42793;
  t72797 = t43141*t43544*t42926;
  t72798 = t72776 + t72797;
  t72810 = -1.*t72798*t66247;
  t72844 = t72667 + t72810;
  t72845 = -1.*t66611*t72844;
  t72851 = t72571 + t72845;
  t73425 = -1.*t43822;
  t73441 = 1. + t73425;
  t73601 = -1.*t43285;
  t73607 = 1. + t73601;
  t73687 = -0.113*t73607;
  t73697 = -0.11212*t43285;
  t73742 = -0.00308*t43049;
  t73746 = t73687 + t73697 + t73742;
  t73762 = -1.*t43544;
  t73776 = 1. + t73762;
  t73832 = -0.113*t73441;
  t73841 = 0.09029*t42926;
  t73866 = t43822*t73746;
  t73873 = t73832 + t73841 + t73866;
  t73889 = 0.1*t73607;
  t73901 = 0.10308*t43285;
  t73908 = 0.00088*t43049;
  t73911 = t73889 + t73901 + t73908;
  t73409 = -0.098*t42793;
  t73472 = 0.105*t73441;
  t73555 = 0.19529*t43822;
  t73568 = -0.113*t42926;
  t73750 = -1.*t42926*t73746;
  t73752 = t73472 + t73555 + t73568 + t73750;
  t73759 = t43141*t73752;
  t73810 = -0.113*t73776;
  t73828 = 0.1*t43295;
  t73882 = t43544*t73873;
  t73924 = -1.*t43295*t73911;
  t73928 = t73810 + t73828 + t73882 + t73924;
  t73936 = -1.*t42793*t73928;
  t73937 = t73409 + t73759 + t73936;
  t73941 = 0.1*t73776;
  t73942 = 0.113*t43295;
  t73955 = t43295*t73873;
  t73956 = t43544*t73911;
  t73957 = t73941 + t73942 + t73955 + t73956;
  t73295 = -1.*t44646;
  t73308 = 1. + t73295;
  t73352 = 0.1*t73308;
  t73940 = -1.*t44436*t73937;
  t73959 = t44646*t73957;
  t73960 = t73352 + t73940 + t73959;
  t73963 = -0.1*t44436;
  t73968 = t44646*t73937;
  t73969 = t44436*t73957;
  t73988 = t73963 + t73968 + t73969;
  t73990 = t42729*t73988;
  t73991 = -1.*t43141;
  t73992 = 1. + t73991;
  t73993 = -0.098*t73992;
  t73994 = t42793*t73752;
  t73995 = t43141*t73928;
  t73997 = t73993 + t73994 + t73995;
  t74010 = -1.*t73997*t66247;
  t74011 = t73990 + t74010;
  t74043 = t66538*t73960;
  t74059 = -1.*t66611*t74011;
  t74060 = t74043 + t74059;
  t74073 = t72568*t66611;
  t74091 = t66538*t72844;
  t74096 = t74073 + t74091;
  t74016 = t73960*t66611;
  t74017 = t66538*t74011;
  t74022 = t74016 + t74017;
  t73165 = t66545*t66611;
  t73231 = t66538*t66785;
  t73274 = t73165 + t73231;
  t73961 = -1.*t73960*t66611;
  t74012 = -1.*t66538*t74011;
  t74013 = t73961 + t74012;
  t74121 = t42729*t73997;
  t74125 = t73988*t66247;
  t74129 = t74121 + t74125;
  t74027 = -1.*t72568*t66611;
  t74031 = -1.*t66538*t72844;
  t74033 = t74027 + t74031;
  t74113 = t42729*t72798;
  t74114 = t72666*t66247;
  t74118 = t74113 + t74114;
  t74169 = t67271*t66611;
  t74171 = t66538*t67283;
  t74172 = t74169 + t74171;
  t74476 = -1.*t42729*t44337;
  t74483 = -1.*t66136*t66247;
  t74488 = t74476 + t74483;
  t74543 = -1.*t42729*t66952;
  t74602 = -1.*t67255*t66247;
  t74612 = t74543 + t74602;
  t74130 = t74118*t74129;
  t74142 = -1.*t74129*t66252;
  t74944 = -1.*t42729*t73997;
  t74970 = -1.*t73988*t66247;
  t74977 = t74944 + t74970;
  t74188 = -1.*t74118*t74129;
  t74992 = -1.*t42729*t72798;
  t75000 = -1.*t72666*t66247;
  t75020 = t74992 + t75000;
  t74219 = t74129*t67264;
  t74986 = t72844*t74129;
  t75039 = t74118*t74011;
  t74131 = t74096*t74022;
  t74132 = t72851*t74060;
  t74134 = t74130 + t74131 + t74132;
  t75129 = -1.*t74129*t66785;
  t75151 = -1.*t74011*t66252;
  t74143 = -1.*t74022*t73274;
  t74145 = -1.*t74060*t66833;
  t74160 = t74142 + t74143 + t74145;
  t75229 = -1.*t72844*t74129;
  t75236 = -1.*t74118*t74011;
  t74189 = -1.*t74096*t74022;
  t74190 = -1.*t72851*t74060;
  t74194 = t74188 + t74189 + t74190;
  t75292 = t74129*t67283;
  t75297 = t74011*t67264;
  t74223 = t74022*t74172;
  t74258 = t74060*t67296;
  t74294 = t74219 + t74223 + t74258;
  t74925 = t72568*t73960;
  t75451 = -1.*t44436*t44551;
  t75452 = -1.*t44646*t65844;
  t75454 = t75451 + t75452;
  t75443 = -1.*t44436*t43295*t42926;
  t75446 = -1.*t44646*t72562;
  t75449 = t75443 + t75446;
  t75051 = -1.*t73960*t66545;
  t75513 = -0.1*t44646;
  t75519 = t75513 + t73940 + t73959;
  t75523 = 0.1*t44436;
  t75524 = -1.*t44646*t73937;
  t75532 = -1.*t44436*t73957;
  t75542 = t75523 + t75524 + t75532;
  t75188 = -1.*t72568*t73960;
  t75461 = -1.*t44436*t67193;
  t75466 = -1.*t44646*t67242;
  t75467 = t75461 + t75466;
  t75270 = t73960*t67271;
  t75761 = t66538*t75454;
  t75763 = -1.*t42729*t66545*t66611;
  t75765 = t75761 + t75763;
  t75815 = t66538*t75467;
  t75824 = -1.*t42729*t67271*t66611;
  t75842 = t75815 + t75824;
  t75512 = t75449*t73960;
  t75544 = t72568*t75542;
  t74927 = t72844*t74011;
  t74930 = t74925 + t74130 + t74927;
  t75564 = -1.*t73960*t75454;
  t75566 = -1.*t75542*t66545;
  t75056 = -1.*t74011*t66785;
  t75068 = t75051 + t75056 + t74142;
  t75638 = -1.*t75449*t73960;
  t75658 = -1.*t72568*t75542;
  t75200 = -1.*t72844*t74011;
  t75222 = t75188 + t74188 + t75200;
  t75695 = t73960*t75467;
  t75697 = t75542*t67271;
  t75271 = t74011*t67283;
  t75282 = t75270 + t75271 + t74219;
  t75734 = t66538*t42729*t66545;
  t75735 = t75454*t66611;
  t75737 = t75734 + t75735;
  t75747 = t66538*t42729*t67271;
  t75748 = t75467*t66611;
  t75756 = t75747 + t75748;
  t76084 = t75519*t66247*t74118;
  t76089 = t72568*t66247*t74129;
  t76237 = t66538*t42729*t72568;
  t76238 = t75449*t66611;
  t76239 = t76237 + t76238;
  t76117 = -1.*t66545*t66247*t74129;
  t76130 = -1.*t75519*t66247*t66252;
  t76268 = t66538*t42729*t75519;
  t76269 = t75542*t66611;
  t76282 = t76268 + t76269;
  t76312 = t66538*t75542;
  t76357 = -1.*t42729*t75519*t66611;
  t76362 = t76312 + t76357;
  t76142 = -1.*t75519*t66247*t74118;
  t76145 = -1.*t72568*t66247*t74129;
  t76406 = t66538*t75449;
  t76408 = -1.*t42729*t72568*t66611;
  t76409 = t76406 + t76408;
  t76166 = t67271*t66247*t74129;
  t76190 = t75519*t66247*t67264;
  t75487 = t72798*t73997;
  t76612 = -0.098*t43141;
  t76615 = -1.*t42793*t73752;
  t76621 = -1.*t43141*t73928;
  t76628 = t76612 + t76615 + t76621;
  t75551 = -1.*t73997*t44337;
  t76632 = -1.*t43822*t42793;
  t76641 = -1.*t43141*t43544*t42926;
  t76642 = t76632 + t76641;
  t75607 = -1.*t72798*t73997;
  t75671 = t73997*t66952;
  t76688 = -1.*t42793*t42926*t43049;
  t76689 = -1.*t43141*t44220;
  t76690 = t76688 + t76689;
  t76803 = t43285*t42793*t42926;
  t76804 = -1.*t43141*t66945;
  t76811 = t76803 + t76804;
  t75482 = t72666*t73988;
  t75488 = t74925 + t75482 + t75487;
  t76631 = t72562*t73997;
  t76650 = t72798*t73937;
  t75555 = -1.*t73988*t66136;
  t75559 = t75551 + t75555 + t75051;
  t76701 = -1.*t73937*t44337;
  t76711 = -1.*t73997*t65844;
  t75604 = -1.*t72666*t73988;
  t75620 = t75188 + t75604 + t75607;
  t76761 = -1.*t72562*t73997;
  t76773 = -1.*t72798*t73937;
  t75685 = t73988*t67255;
  t75689 = t75671 + t75685 + t75270;
  t76816 = t73937*t66952;
  t76823 = t73997*t67242;
  t77002 = t44646*t42729*t76690;
  t77006 = -1.*t65844*t66247;
  t77010 = t77002 + t77006;
  t77015 = t44646*t42729*t76811;
  t77016 = -1.*t67242*t66247;
  t77017 = t77015 + t77016;
  t77029 = t42729*t65844;
  t77030 = t44646*t76690*t66247;
  t77031 = t77029 + t77030;
  t77033 = -1.*t66538*t44436*t76690;
  t77034 = -1.*t66611*t77010;
  t77036 = t77033 + t77034;
  t77045 = t42729*t67242;
  t77046 = t44646*t76811*t66247;
  t77047 = t77045 + t77046;
  t77049 = -1.*t66538*t44436*t76811;
  t77050 = -1.*t66611*t77017;
  t77051 = t77049 + t77050;
  t76907 = -1.*t44436*t76642*t73960;
  t76921 = -1.*t44436*t72568*t76628;
  t77078 = t42729*t72562;
  t77083 = t44646*t76642*t66247;
  t77101 = t77078 + t77083;
  t76942 = t44436*t73960*t76690;
  t76957 = t44436*t76628*t66545;
  t77251 = t44646*t42729*t76628;
  t77252 = -1.*t73937*t66247;
  t77253 = t77251 + t77252;
  t77211 = t42729*t73937;
  t77212 = t44646*t76628*t66247;
  t77243 = t77211 + t77212;
  t76967 = t44436*t76642*t73960;
  t76972 = t44436*t72568*t76628;
  t77245 = t44646*t42729*t76642;
  t77246 = -1.*t72562*t66247;
  t77247 = t77245 + t77246;
  t76978 = -1.*t44436*t73960*t76811;
  t76989 = -1.*t44436*t76628*t67271;
  t77001 = -1.*t44436*t76690*t66611;
  t77011 = t66538*t77010;
  t77012 = t77001 + t77011;
  t77014 = -1.*t44436*t76811*t66611;
  t77021 = t66538*t77017;
  t77025 = t77014 + t77021;
  t77162 = t77101*t74129;
  t77244 = t74118*t77243;
  t77372 = -1.*t44436*t76642*t66611;
  t77381 = t66538*t77247;
  t77384 = t77372 + t77381;
  t77293 = -1.*t74129*t77031;
  t77299 = -1.*t77243*t66252;
  t77411 = -1.*t44436*t76628*t66611;
  t77414 = t66538*t77253;
  t77416 = t77411 + t77414;
  t77421 = -1.*t66538*t44436*t76628;
  t77431 = -1.*t66611*t77253;
  t77432 = t77421 + t77431;
  t77309 = -1.*t77101*t74129;
  t77314 = -1.*t74118*t77243;
  t77404 = -1.*t66538*t44436*t76642;
  t77408 = -1.*t66611*t77247;
  t77409 = t77404 + t77408;
  t77334 = t74129*t77047;
  t77343 = t77243*t67264;
  t76783 = -1.*t43295*t42926*t73957;
  t77596 = 0.113*t43544;
  t77597 = t77596 + t73828 + t73882 + t73924;
  t77584 = 0.1*t43544;
  t77586 = -0.113*t43295;
  t77587 = -1.*t43295*t73873;
  t77588 = -1.*t43544*t73911;
  t77589 = t77584 + t77586 + t77587 + t77588;
  t76829 = t73957*t67193;
  t76659 = t43295*t42926*t73957;
  t76725 = -1.*t73957*t44551;
  t77652 = -1.*t43822*t43285*t43295;
  t77653 = -1.*t43544*t43049;
  t77656 = t77652 + t77653;
  t77784 = -1.*t43544*t43285;
  t77790 = t43822*t43295*t43049;
  t77791 = t77784 + t77790;
  t76658 = t72562*t73937;
  t76667 = t75487 + t76658 + t76659;
  t77718 = t43544*t42926*t73957;
  t77727 = t43295*t42926*t77597;
  t76732 = -1.*t73937*t65844;
  t76734 = t76725 + t75551 + t76732;
  t77772 = -1.*t73957*t44220;
  t77779 = -1.*t77597*t44551;
  t76781 = -1.*t72562*t73937;
  t76787 = t75607 + t76781 + t76783;
  t77591 = -1.*t43544*t42926*t73957;
  t77607 = -1.*t43295*t42926*t77597;
  t76842 = t73937*t67242;
  t76848 = t76829 + t75671 + t76842;
  t77661 = t77597*t67193;
  t77669 = t73957*t66945;
  t78235 = t44646*t44220;
  t78239 = t44436*t42793*t77791;
  t78243 = t78235 + t78239;
  t78204 = t44646*t43544*t42926;
  t78213 = -1.*t44436*t42793*t43295*t42926;
  t78222 = t78204 + t78213;
  t77925 = -1.*t43141*t43295*t42926*t73997;
  t77988 = t43141*t72798*t77589;
  t78067 = -1.*t43141*t73997*t77791;
  t78110 = -1.*t43141*t77589*t44337;
  t78372 = -1.*t44646*t42793*t77589;
  t78375 = t44436*t77597;
  t78380 = t78372 + t78375;
  t78364 = t44436*t42793*t77589;
  t78365 = t44646*t77597;
  t78370 = t78364 + t78365;
  t78225 = t44436*t42793*t77656;
  t78226 = t44646*t66945;
  t78230 = t78225 + t78226;
  t78330 = t43544*t44436*t42926;
  t78354 = t44646*t42793*t43295*t42926;
  t78355 = t78330 + t78354;
  t78155 = t43141*t43295*t42926*t73997;
  t78157 = -1.*t43141*t72798*t77589;
  t78173 = t43141*t73997*t77656;
  t78179 = t43141*t77589*t66952;
  t78515 = -1.*t44646*t42793*t77656;
  t78516 = t44436*t66945;
  t78517 = t78515 + t78516;
  t78402 = t44436*t44220;
  t78405 = -1.*t44646*t42793*t77791;
  t78409 = t78402 + t78405;
  t78544 = t42729*t78517;
  t78546 = -1.*t43141*t77656*t66247;
  t78547 = t78544 + t78546;
  t78558 = t42729*t78409;
  t78561 = -1.*t43141*t77791*t66247;
  t78562 = t78558 + t78561;
  t78585 = t43141*t42729*t77656;
  t78594 = t78517*t66247;
  t78607 = t78585 + t78594;
  t78612 = t66538*t78230;
  t78616 = -1.*t66611*t78547;
  t78617 = t78612 + t78616;
  t78632 = t43141*t42729*t77791;
  t78634 = t78409*t66247;
  t78638 = t78632 + t78634;
  t78644 = t66538*t78243;
  t78650 = -1.*t66611*t78562;
  t78651 = t78644 + t78650;
  t78329 = t78222*t73960;
  t78371 = t72568*t78370;
  t78673 = -1.*t43141*t42729*t43295*t42926;
  t78674 = t78355*t66247;
  t78675 = t78673 + t78674;
  t78420 = -1.*t73960*t78243;
  t78448 = -1.*t78370*t66545;
  t78713 = t42729*t78380;
  t78716 = -1.*t43141*t77589*t66247;
  t78719 = t78713 + t78716;
  t78700 = t43141*t42729*t77589;
  t78701 = t78380*t66247;
  t78710 = t78700 + t78701;
  t78482 = -1.*t78222*t73960;
  t78490 = -1.*t72568*t78370;
  t78693 = t42729*t78355;
  t78697 = t43141*t43295*t42926*t66247;
  t78698 = t78693 + t78697;
  t78501 = t73960*t78230;
  t78527 = t78370*t67271;
  t78542 = t78230*t66611;
  t78552 = t66538*t78547;
  t78553 = t78542 + t78552;
  t78557 = t78243*t66611;
  t78563 = t66538*t78562;
  t78565 = t78557 + t78563;
  t78692 = t78675*t74129;
  t78712 = t74118*t78710;
  t78764 = t78222*t66611;
  t78765 = t66538*t78698;
  t78766 = t78764 + t78765;
  t78737 = -1.*t74129*t78638;
  t78738 = -1.*t78710*t66252;
  t78779 = t78370*t66611;
  t78781 = t66538*t78719;
  t78783 = t78779 + t78781;
  t78786 = t66538*t78370;
  t78789 = -1.*t66611*t78719;
  t78791 = t78786 + t78789;
  t78744 = -1.*t78675*t74129;
  t78746 = -1.*t74118*t78710;
  t78774 = t66538*t78222;
  t78775 = -1.*t66611*t78698;
  t78777 = t78774 + t78775;
  t78754 = t74129*t78607;
  t78755 = t78710*t67264;
  t77697 = t43822*t73752;
  t78884 = -0.113*t43822;
  t78886 = -0.09029*t42926;
  t78890 = -1.*t43822*t73746;
  t78893 = t78884 + t78886 + t78890;
  t78897 = 0.09029*t43822;
  t78898 = t78897 + t73568 + t73750;
  t77750 = -1.*t42926*t73752*t43049;
  t77618 = -1.*t43822*t73752;
  t77676 = -1.*t43285*t42926*t73752;
  t77622 = -1.*t43544*t42926*t73928;
  t77646 = t77618 + t76783 + t77622;
  t78968 = -1.*t43822*t78893;
  t78975 = t42926*t73752;
  t78950 = -1.*t43285*t42926*t78893;
  t78964 = -1.*t43822*t43285*t73752;
  t77677 = t73928*t66945;
  t77678 = t77676 + t76829 + t77677;
  t77702 = t43544*t42926*t73928;
  t77703 = t77697 + t76659 + t77702;
  t78895 = t43822*t78893;
  t79019 = Power(t43544,2);
  t79026 = Power(t43295,2);
  t78902 = -1.*t42926*t73752;
  t78906 = -1.*t42926*t78893*t43049;
  t78914 = -1.*t43822*t73752*t43049;
  t77753 = -1.*t73928*t44220;
  t77756 = t77750 + t77753 + t76725;
  t79154 = t43822*t42793*t43049;
  t79155 = t43141*t43544*t42926*t43049;
  t79161 = t79154 + t79155;
  t79147 = t43141*t43544*t43822;
  t79149 = -1.*t42793*t42926;
  t79152 = t79147 + t79149;
  t79079 = t79026*t42926*t78898;
  t79081 = t43822*t43295*t73957;
  t79089 = -1.*t43295*t42926*t73957*t43049;
  t79103 = -1.*t43295*t78898*t44551;
  t79202 = t42793*t78893;
  t79203 = t43141*t43544*t78898;
  t79206 = t79202 + t79203;
  t79221 = t43141*t78893;
  t79223 = -1.*t43544*t42793*t78898;
  t79226 = t79221 + t79223;
  t79140 = -1.*t43822*t43285*t42793;
  t79141 = -1.*t43141*t43544*t43285*t42926;
  t79144 = t79140 + t79141;
  t79237 = -1.*t43544*t43822*t42793;
  t79239 = -1.*t43141*t42926;
  t79249 = t79237 + t79239;
  t79028 = -1.*t79026*t42926*t78898;
  t79031 = -1.*t43822*t43295*t73957;
  t79054 = -1.*t43285*t43295*t42926*t73957;
  t79061 = t43295*t78898*t67193;
  t79339 = -1.*t43141*t43822*t43285;
  t79340 = t43544*t43285*t42793*t42926;
  t79342 = t79339 + t79340;
  t79278 = t43141*t43822*t43049;
  t79299 = -1.*t43544*t42793*t42926*t43049;
  t79301 = t79278 + t79299;
  t79373 = t44646*t43295*t42926*t43049;
  t79378 = -1.*t44436*t79301;
  t79379 = t79373 + t79378;
  t79209 = t72798*t79206;
  t79363 = t44646*t43822*t43295;
  t79364 = -1.*t44436*t79249;
  t79366 = t79363 + t79364;
  t79234 = t79152*t73997;
  t79263 = -1.*t73997*t79161;
  t79304 = -1.*t79206*t44337;
  t79398 = t44646*t79226;
  t79400 = t44436*t43295*t78898;
  t79405 = t79398 + t79400;
  t79385 = -1.*t44436*t79226;
  t79386 = t44646*t43295*t78898;
  t79388 = t79385 + t79386;
  t79368 = -1.*t44646*t43285*t43295*t42926;
  t79369 = -1.*t44436*t79342;
  t79370 = t79368 + t79369;
  t79324 = -1.*t72798*t79206;
  t79411 = t43822*t44436*t43295;
  t79415 = t44646*t79249;
  t79420 = t79411 + t79415;
  t79327 = -1.*t79152*t73997;
  t79333 = t79144*t73997;
  t79344 = t79206*t66952;
  t79506 = -1.*t43285*t44436*t43295*t42926;
  t79511 = t44646*t79342;
  t79513 = t79506 + t79511;
  t79426 = t44436*t43295*t42926*t43049;
  t79429 = t44646*t79301;
  t79433 = t79426 + t79429;
  t79548 = t42729*t79513;
  t79551 = -1.*t79144*t66247;
  t79563 = t79548 + t79551;
  t79586 = t42729*t79433;
  t79595 = -1.*t79161*t66247;
  t79596 = t79586 + t79595;
  t79603 = t42729*t79144;
  t79604 = t79513*t66247;
  t79606 = t79603 + t79604;
  t79610 = t66538*t79370;
  t79611 = -1.*t66611*t79563;
  t79612 = t79610 + t79611;
  t79624 = t42729*t79161;
  t79625 = t79433*t66247;
  t79626 = t79624 + t79625;
  t79628 = t66538*t79379;
  t79629 = -1.*t66611*t79596;
  t79632 = t79628 + t79629;
  t79393 = t72568*t79388;
  t79408 = t79366*t73960;
  t79690 = t42729*t79152;
  t79691 = t79420*t66247;
  t79710 = t79690 + t79691;
  t79458 = -1.*t73960*t79379;
  t79462 = -1.*t79388*t66545;
  t79768 = t42729*t79405;
  t79797 = -1.*t79206*t66247;
  t79798 = t79768 + t79797;
  t79821 = t42729*t79206;
  t79825 = t79405*t66247;
  t79842 = t79821 + t79825;
  t79479 = -1.*t72568*t79388;
  t79482 = -1.*t79366*t73960;
  t79870 = t42729*t79420;
  t79874 = -1.*t79152*t66247;
  t79879 = t79870 + t79874;
  t79505 = t79370*t73960;
  t79524 = t79388*t67271;
  t79547 = t79370*t66611;
  t79567 = t66538*t79563;
  t79571 = t79547 + t79567;
  t79581 = t79379*t66611;
  t79598 = t66538*t79596;
  t79599 = t79581 + t79598;
  t79859 = t74118*t79842;
  t79862 = t79710*t74129;
  t79970 = t79366*t66611;
  t79972 = t66538*t79879;
  t79973 = t79970 + t79972;
  t79901 = -1.*t74129*t79626;
  t79903 = -1.*t79842*t66252;
  t79982 = t79388*t66611;
  t79983 = t66538*t79798;
  t79984 = t79982 + t79983;
  t79999 = t66538*t79388;
  t80003 = -1.*t66611*t79798;
  t80013 = t79999 + t80003;
  t79929 = -1.*t74118*t79842;
  t79935 = -1.*t79710*t74129;
  t80039 = t66538*t79366;
  t80040 = -1.*t66611*t79879;
  t80041 = t80039 + t80040;
  t79943 = t79606*t74129;
  t79947 = t79842*t67264;
  t78942 = -1.*t42926*t73873;
  t78944 = t78942 + t77618;
  t80167 = -0.00308*t43285;
  t80176 = -0.00088*t43049;
  t80178 = t80167 + t80176;
  t78878 = t42926*t73873;
  t78882 = t78878 + t77697;
  t78984 = t43822*t43285*t73873;
  t80196 = 0.00088*t43285;
  t80199 = t80196 + t73742;
  t80163 = Power(t43822,2);
  t80189 = Power(t42926,2);
  t78985 = t73911*t43049;
  t80225 = t80189*t80178*t43049;
  t80241 = -1.*t43295*t80199;
  t80243 = t43544*t43822*t80178;
  t80255 = t80241 + t80243;
  t80262 = t43544*t80199;
  t80263 = t43822*t43295*t80178;
  t80264 = t80262 + t80263;
  t80190 = t43285*t80189*t80178;
  t80194 = t42926*t73752*t43049;
  t80277 = -1.*t43544*t43822*t43285;
  t80279 = t43295*t43049;
  t80280 = t80277 + t80279;
  t80310 = -1.*t43295*t42926*t80264;
  t80353 = t80264*t67193;
  t80358 = t73957*t44551;
  t80395 = t43141*t80255;
  t80397 = -1.*t42793*t42926*t80178;
  t80398 = t80395 + t80397;
  t80389 = -1.*t42793*t80255;
  t80390 = -1.*t43141*t42926*t80178;
  t80391 = t80389 + t80390;
  t80265 = t43295*t42926*t80264;
  t80372 = t43141*t80280;
  t80385 = t76803 + t80372;
  t80271 = -1.*t73957*t77656;
  t80290 = -1.*t80264*t44551;
  t80466 = t43141*t43285*t42926;
  t80467 = -1.*t42793*t80280;
  t80469 = t80466 + t80467;
  t80399 = -1.*t72798*t80398;
  t80423 = t73997*t44337;
  t80425 = t80398*t66952;
  t80499 = t44436*t80264;
  t80500 = t44646*t80391;
  t80504 = t80499 + t80500;
  t80508 = t44646*t80264;
  t80509 = -1.*t44436*t80391;
  t80511 = t80508 + t80509;
  t80442 = t72798*t80398;
  t80488 = t44646*t77656;
  t80489 = -1.*t44436*t80469;
  t80491 = t80488 + t80489;
  t80459 = -1.*t80398*t44337;
  t80465 = -1.*t73997*t80385;
  t80573 = t44436*t77656;
  t80575 = t44646*t80469;
  t80576 = t80573 + t80575;
  t80603 = t42729*t80576;
  t80605 = -1.*t80385*t66247;
  t80608 = t80603 + t80605;
  t67365 = t66518*t66252;
  t67395 = -1.*t33917*t66833;
  t67396 = t67365 + t67395;
  t80638 = t42729*t80385;
  t80640 = t80576*t66247;
  t80644 = t80638 + t80640;
  t80649 = t66538*t80491;
  t80653 = -1.*t66611*t80608;
  t80654 = t80649 + t80653;
  t80513 = -1.*t72568*t80511;
  t80517 = t73960*t66545;
  t80519 = t80511*t67271;
  t80701 = t42729*t80504;
  t80703 = -1.*t80398*t66247;
  t80704 = t80701 + t80703;
  t80697 = t42729*t80398;
  t80698 = t80504*t66247;
  t80699 = t80697 + t80698;
  t80538 = t72568*t80511;
  t80568 = -1.*t80511*t66545;
  t80579 = -1.*t73960*t80491;
  t80601 = t80491*t66611;
  t80612 = t66538*t80608;
  t80615 = t80601 + t80612;
  t80700 = -1.*t74118*t80699;
  t80714 = t74129*t66252;
  t80717 = t80699*t67264;
  t80751 = t80511*t66611;
  t80754 = t66538*t80704;
  t80755 = t80751 + t80754;
  t80758 = t66538*t80511;
  t80760 = -1.*t66611*t80704;
  t80761 = t80758 + t80760;
  t80727 = t74118*t80699;
  t80737 = -1.*t80699*t66252;
  t80739 = -1.*t74129*t80644;
  p_output1[0]=0;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=(-0.5*(-0.0001630904*(-1.*t33917*t66252 - 1.*t66518*t66833) + 0.0005708164*(-1.*t33917*t67264 - 1.*t66518*t67296))*var2[1] - 0.5*(0.0005708164*(t66518*t67264 - 1.*t33917*t67296) - 0.0001630904*t67396)*var2[2])*var2[17];
  p_output1[4]=(-0.5*(-0.0001630904*t66833 + 0.0005708164*t67296)*var2[0] - 0.5*(0.0001630904*t33917*t72104 - 0.0005708164*t33917*t72259)*var2[1] - 0.5*(-0.0001630904*t66518*t72104 + 0.0005708164*t66518*t72259)*var2[2] - 0.5*(3.e-6*t66833 - 0.000011*t67296 - 0.000069*t72851 + 0.0005708164*((-1.*t66833*t74013 - 1.*t66833*t74022 - 1.*t72104*t74060 - 1.*t73274*t74060)*t74096 + t73274*(t72851*t74013 + t72851*t74022 + t74033*t74060 + t74060*t74096) + t66833*t74134 + t72851*t74160) - 0.0001630904*((-1.*t72851*t74013 - 1.*t72851*t74022 - 1.*t74033*t74060 - 1.*t74060*t74096)*t74172 + t74096*(t67296*t74013 + t67296*t74022 + t72259*t74060 + t74060*t74172) + t67296*t74194 + t72851*t74294))*var2[3])*var2[17];
  p_output1[5]=(-0.5*(-0.0001630904*t66538*t74488 + 0.0005708164*t66538*t74612)*var2[0] - 0.5*(-0.0001630904*(t66518*t66785 + t33917*t66611*t74488) + 0.0005708164*(t66518*t67283 + t33917*t66611*t74612))*var2[1] - 0.5*(-0.0001630904*(t33917*t66785 - 1.*t66518*t66611*t74488) + 0.0005708164*(t33917*t67283 - 1.*t66518*t66611*t74612))*var2[2] - 0.5*(3.e-6*t66538*t74488 - 0.000011*t66538*t74612 - 0.000069*t66538*t75020 + 0.0005708164*(t66538*t74134*t74488 + t66538*t74160*t75020 + t73274*(-1.*t66611*t72851*t74977 + t66538*t74096*t74977 + t74986 + t66538*t74022*t75020 - 1.*t66611*t74060*t75020 + t75039) + t74096*(-1.*t66538*t74022*t74488 + t66611*t74060*t74488 + t66611*t66833*t74977 - 1.*t66538*t73274*t74977 + t75129 + t75151)) - 0.0001630904*(t66538*t74194*t74612 + t66538*t74294*t75020 + t74172*(t66611*t72851*t74977 - 1.*t66538*t74096*t74977 - 1.*t66538*t74022*t75020 + t66611*t74060*t75020 + t75229 + t75236) + t74096*(t66538*t74022*t74612 - 1.*t66611*t74060*t74612 - 1.*t66611*t67296*t74977 + t66538*t74172*t74977 + t75292 + t75297)))*var2[3] - 0.5*(3.e-6*t66785 - 0.000011*t67283 - 0.000069*t72844 + 0.0005708164*(t66785*t74930 + t66252*(t72844*t74977 + t74986 + t74011*t75020 + t75039) + t72844*t75068 + t74118*(-1.*t74011*t74488 - 1.*t66785*t74977 + t75129 + t75151)) - 0.0001630904*(t67283*t75222 + t67264*(-1.*t72844*t74977 - 1.*t74011*t75020 + t75229 + t75236) + t72844*t75282 + t74118*(t74011*t74612 + t67283*t74977 + t75292 + t75297)))*var2[4])*var2[17];
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=0;
  p_output1[13]=(-0.5*(-0.0001630904*t75737 + 0.0005708164*t75756)*var2[0] - 0.5*(-0.0001630904*(t66247*t66518*t66545 - 1.*t33917*t75765) + 0.0005708164*(t66247*t66518*t67271 - 1.*t33917*t75842))*var2[1] - 0.5*(-0.0001630904*(t33917*t66247*t66545 + t66518*t75765) + 0.0005708164*(t33917*t66247*t67271 + t66518*t75842))*var2[2] - 0.5*(3.e-6*t75737 - 0.000011*t75756 - 0.000069*t76239 - 0.0001630904*(t74194*t75756 + t74294*t76239 + t74096*(t74022*t75756 + t74060*t75842 + t76166 + t76190 + t74172*t76282 + t67296*t76362) + t74172*(t76142 + t76145 - 1.*t74022*t76239 - 1.*t74096*t76282 - 1.*t72851*t76362 - 1.*t74060*t76409)) + 0.0005708164*(t74134*t75737 + t74160*t76239 + t74096*(-1.*t74022*t75737 - 1.*t74060*t75765 + t76117 + t76130 - 1.*t73274*t76282 - 1.*t66833*t76362) + t73274*(t76084 + t76089 + t74022*t76239 + t74096*t76282 + t72851*t76362 + t74060*t76409)))*var2[3] - 0.5*(3.e-6*t66247*t66545 - 0.000011*t66247*t67271 - 0.000069*t66247*t72568 + 0.0005708164*(t66247*t66545*t74930 + t66247*t72568*t75068 + t66252*(t42729*t72568*t74011 + t75512 + t42729*t72844*t75519 + t75544 + t76084 + t76089) + t74118*(-1.*t42729*t66545*t74011 - 1.*t42729*t66785*t75519 + t75564 + t75566 + t76117 + t76130)) - 0.0001630904*(t66247*t67271*t75222 + t66247*t72568*t75282 + t67264*(-1.*t42729*t72568*t74011 - 1.*t42729*t72844*t75519 + t75638 + t75658 + t76142 + t76145) + t74118*(t42729*t67271*t74011 + t42729*t67283*t75519 + t75695 + t75697 + t76166 + t76190)))*var2[4] - 0.5*(-0.000069*t75449 + 3.e-6*t75454 - 0.000011*t75467 + 0.0005708164*(t75454*t75488 + t66545*(t72568*t73988 + t75512 + t72666*t75519 + t75544) + t75449*t75559 + t72568*(-1.*t66545*t73988 - 1.*t66136*t75519 + t75564 + t75566)) - 0.0001630904*(t75467*t75620 + t67271*(-1.*t72568*t73988 - 1.*t72666*t75519 + t75638 + t75658) + t75449*t75689 + t72568*(t67271*t73988 + t67255*t75519 + t75695 + t75697)))*var2[5])*var2[17];
  p_output1[14]=(-0.5*(-0.0001630904*t77012 + 0.0005708164*t77025)*var2[0] - 0.5*(-0.0001630904*(t66518*t77031 - 1.*t33917*t77036) + 0.0005708164*(t66518*t77047 - 1.*t33917*t77051))*var2[1] - 0.5*(-0.0001630904*(t33917*t77031 + t66518*t77036) + 0.0005708164*(t33917*t77047 + t66518*t77051))*var2[2] - 0.5*(3.e-6*t77012 - 0.000011*t77025 - 0.000069*t77384 - 0.0001630904*(t74194*t77025 + t74294*t77384 + t74096*(t74022*t77025 + t74060*t77051 + t77334 + t77343 + t74172*t77416 + t67296*t77432) + t74172*(t77309 + t77314 - 1.*t74022*t77384 - 1.*t74060*t77409 - 1.*t74096*t77416 - 1.*t72851*t77432)) + 0.0005708164*(t74134*t77012 + t74160*t77384 + t74096*(-1.*t74022*t77012 - 1.*t74060*t77036 + t77293 + t77299 - 1.*t73274*t77416 - 1.*t66833*t77432) + t73274*(t77162 + t77244 + t74022*t77384 + t74060*t77409 + t74096*t77416 + t72851*t77432)))*var2[3] - 0.5*(3.e-6*t77031 - 0.000011*t77047 - 0.000069*t77101 + 0.0005708164*(t74930*t77031 + t75068*t77101 + t66252*(t76907 + t76921 + t77162 + t77244 + t74011*t77247 + t72844*t77253) + t74118*(t76942 + t76957 - 1.*t74011*t77010 - 1.*t66785*t77253 + t77293 + t77299)) - 0.0001630904*(t75222*t77047 + t75282*t77101 + t67264*(t76967 + t76972 - 1.*t74011*t77247 - 1.*t72844*t77253 + t77309 + t77314) + t74118*(t76978 + t76989 + t74011*t77017 + t67283*t77253 + t77334 + t77343)))*var2[4] - 0.5*(0.000069*t44436*t76642 - 3.e-6*t44436*t76690 + 0.000011*t44436*t76811 + 0.0005708164*(-1.*t44436*t75559*t76642 - 1.*t44436*t75488*t76690 + t66545*(t44646*t72666*t76628 + t76631 + t44646*t73988*t76642 + t76650 + t76907 + t76921) + t72568*(-1.*t44646*t66136*t76628 - 1.*t44646*t73988*t76690 + t76701 + t76711 + t76942 + t76957)) - 0.0001630904*(-1.*t44436*t75689*t76642 - 1.*t44436*t75620*t76811 + t67271*(-1.*t44646*t72666*t76628 - 1.*t44646*t73988*t76642 + t76761 + t76773 + t76967 + t76972) + t72568*(t44646*t67255*t76628 + t44646*t73988*t76811 + t76816 + t76823 + t76978 + t76989)))*var2[5] - 0.5*(3.e-6*t65844 - 0.000011*t67242 - 0.000069*t72562 + 0.0005708164*(0.1*t66952 + t44337*(t72562*t76628 + t76631 + t73937*t76642 + t76650) + t65844*t76667 + t72798*(-1.*t65844*t76628 - 1.*t73937*t76690 + t76701 + t76711) + t72562*t76734) - 0.0001630904*(0.1*t44337 + t66952*(-1.*t72562*t76628 - 1.*t73937*t76642 + t76761 + t76773) + t67242*t76787 + t72798*(t67242*t76628 + t73937*t76811 + t76816 + t76823) + t72562*t76848))*var2[13])*var2[17];
  p_output1[15]=(-0.5*(0.0005708164*t78553 - 0.0001630904*t78565)*var2[0] - 0.5*(0.0005708164*(t66518*t78607 - 1.*t33917*t78617) - 0.0001630904*(t66518*t78638 - 1.*t33917*t78651))*var2[1] - 0.5*(0.0005708164*(t33917*t78607 + t66518*t78617) - 0.0001630904*(t33917*t78638 + t66518*t78651))*var2[2] - 0.5*(-0.000011*t78553 + 3.e-6*t78565 - 0.000069*t78766 - 0.0001630904*(t74194*t78553 + t74294*t78766 + t74096*(t74022*t78553 + t74060*t78617 + t78754 + t78755 + t74172*t78783 + t67296*t78791) + t74172*(t78744 + t78746 - 1.*t74022*t78766 - 1.*t74060*t78777 - 1.*t74096*t78783 - 1.*t72851*t78791)) + 0.0005708164*(t74134*t78565 + t74160*t78766 + t74096*(-1.*t74022*t78565 - 1.*t74060*t78651 + t78737 + t78738 - 1.*t73274*t78783 - 1.*t66833*t78791) + t73274*(t78692 + t78712 + t74022*t78766 + t74060*t78777 + t74096*t78783 + t72851*t78791)))*var2[3] - 0.5*(-0.000011*t78607 + 3.e-6*t78638 - 0.000069*t78675 + 0.0005708164*(t74930*t78638 + t75068*t78675 + t66252*(t78329 + t78371 + t78692 + t74011*t78698 + t78712 + t72844*t78719) + t74118*(t78420 + t78448 - 1.*t74011*t78562 - 1.*t66785*t78719 + t78737 + t78738)) - 0.0001630904*(t75222*t78607 + t75282*t78675 + t67264*(t78482 + t78490 - 1.*t74011*t78698 - 1.*t72844*t78719 + t78744 + t78746) + t74118*(t78501 + t78527 + t74011*t78547 + t67283*t78719 + t78754 + t78755)))*var2[4] - 0.5*(-0.000069*t78222 - 0.000011*t78230 + 3.e-6*t78243 + 0.0005708164*(t75559*t78222 + t75488*t78243 + t66545*(t77925 + t77988 + t78329 + t73988*t78355 + t78371 + t72666*t78380) + t72568*(t78067 + t78110 - 1.*t66136*t78380 - 1.*t73988*t78409 + t78420 + t78448)) - 0.0001630904*(t75689*t78222 + t75620*t78230 + t67271*(t78155 + t78157 - 1.*t73988*t78355 - 1.*t72666*t78380 + t78482 + t78490) + t72568*(t78173 + t78179 + t67255*t78380 + t78501 + t73988*t78517 + t78527)))*var2[5] - 0.5*(0.000069*t42926*t43141*t43295 - 0.000011*t43141*t77656 + 3.e-6*t43141*t77791 + 0.0005708164*(-1.*t42926*t43141*t43295*t76734 + 0.1*t42793*t77656 + t43141*t76667*t77791 + t44337*(t42793*t42926*t43295*t73937 - 1.*t42793*t72562*t77589 + t77718 + t77727 + t77925 + t77988) + t72798*(t42793*t65844*t77589 + t77772 + t77779 + t42793*t73937*t77791 + t78067 + t78110)) - 0.0001630904*(-1.*t42926*t43141*t43295*t76848 + t43141*t76787*t77656 + 0.1*t42793*t77791 + t66952*(-1.*t42793*t42926*t43295*t73937 + t42793*t72562*t77589 + t77591 + t77607 + t78155 + t78157) + t72798*(-1.*t42793*t67242*t77589 - 1.*t42793*t73937*t77656 + t77661 + t77669 + t78173 + t78179)))*var2[13] - 0.5*(-0.000069*t42926*t43544 + 3.e-6*t44220 - 0.000011*t66945 - 0.0001630904*(t67193*(t42926*t43295*t73928 - 1.*t42926*t43544*t77589 + t77591 + t77607) + t66945*t77646 + t42926*t43295*(t66945*t77589 + t73928*t77656 + t77661 + t77669) + t42926*t43544*t77678) + 0.0005708164*(t44220*t77703 + t44551*(-1.*t42926*t43295*t73928 + t42926*t43544*t77589 + t77718 + t77727) + t42926*t43544*t77756 + t42926*t43295*(-1.*t44220*t77589 + t77772 + t77779 - 1.*t73928*t77791)))*var2[14])*var2[17];
  p_output1[16]=(-0.5*(0.0005708164*t79571 - 0.0001630904*t79599)*var2[0] - 0.5*(0.0005708164*(t66518*t79606 - 1.*t33917*t79612) - 0.0001630904*(t66518*t79626 - 1.*t33917*t79632))*var2[1] - 0.5*(0.0005708164*(t33917*t79606 + t66518*t79612) - 0.0001630904*(t33917*t79626 + t66518*t79632))*var2[2] - 0.5*(-0.000011*t79571 + 3.e-6*t79599 - 0.000069*t79973 - 0.0001630904*(t74194*t79571 + t74294*t79973 + t74096*(t74022*t79571 + t74060*t79612 + t79943 + t79947 + t74172*t79984 + t67296*t80013) + t74172*(t79929 + t79935 - 1.*t74022*t79973 - 1.*t74096*t79984 - 1.*t72851*t80013 - 1.*t74060*t80041)) + 0.0005708164*(t74134*t79599 + t74160*t79973 + t74096*(-1.*t74022*t79599 - 1.*t74060*t79632 + t79901 + t79903 - 1.*t73274*t79984 - 1.*t66833*t80013) + t73274*(t79859 + t79862 + t74022*t79973 + t74096*t79984 + t72851*t80013 + t74060*t80041)))*var2[3] - 0.5*(-0.000011*t79606 + 3.e-6*t79626 - 0.000069*t79710 + 0.0005708164*(t74930*t79626 + t75068*t79710 + t66252*(t79393 + t79408 + t72844*t79798 + t79859 + t79862 + t74011*t79879) + t74118*(t79458 + t79462 - 1.*t74011*t79596 - 1.*t66785*t79798 + t79901 + t79903)) - 0.0001630904*(t75222*t79606 + t75282*t79710 + t67264*(t79479 + t79482 - 1.*t72844*t79798 - 1.*t74011*t79879 + t79929 + t79935) + t74118*(t79505 + t79524 + t74011*t79563 + t67283*t79798 + t79943 + t79947)))*var2[4] - 0.5*(-0.000069*t79366 - 0.000011*t79370 + 3.e-6*t79379 + 0.0005708164*(t75559*t79366 + t75488*t79379 + t66545*(t79209 + t79234 + t79393 + t72666*t79405 + t79408 + t73988*t79420) + t72568*(t79263 + t79304 - 1.*t66136*t79405 - 1.*t73988*t79433 + t79458 + t79462)) - 0.0001630904*(t75689*t79366 + t75620*t79370 + t67271*(t79324 + t79327 - 1.*t72666*t79405 - 1.*t73988*t79420 + t79479 + t79482) + t72568*(t79333 + t79344 + t67255*t79405 + t79505 + t73988*t79513 + t79524)))*var2[5] - 0.5*(-0.000011*t79144 - 0.000069*t79152 + 3.e-6*t79161 + 0.0005708164*(0.1*(-1.*t42793*t42926*t43285*t43544 + t43141*t43285*t43822) + t76734*t79152 + t76667*t79161 + t44337*(t79079 + t79081 + t79209 + t72562*t79226 + t79234 + t73937*t79249) + t72798*(t79089 + t79103 - 1.*t65844*t79226 + t79263 - 1.*t73937*t79301 + t79304)) - 0.0001630904*(0.1*(t42793*t42926*t43049*t43544 - 1.*t43049*t43141*t43822) + t76787*t79144 + t76848*t79152 + t66952*(t79028 + t79031 - 1.*t72562*t79226 - 1.*t73937*t79249 + t79324 + t79327) + t72798*(t79054 + t79061 + t67242*t79226 + t79333 + t73937*t79342 + t79344)))*var2[13] - 0.5*(3.e-6*t42926*t43049*t43295 + 0.000011*t42926*t43285*t43295 - 0.000069*t43295*t43822 - 0.0001630904*(-0.098*t43049*t43822 - 1.*t42926*t43285*t43295*t77646 + t43295*t43822*t77678 + t67193*(-1.*t43544*t43822*t73928 + t78968 + t78975 - 1.*t42926*t78898*t79019 + t79028 + t79031) + t42926*t43295*(-1.*t42926*t43285*t43544*t73928 + t43544*t66945*t78898 + t78950 + t78964 + t79054 + t79061)) + 0.0005708164*(0.098*t43285*t43822 + t42926*t43049*t43295*t77703 + t43295*t43822*t77756 + t44551*(t43544*t43822*t73928 + t78895 + t78902 + t42926*t78898*t79019 + t79079 + t79081) + t42926*t43295*(-1.*t42926*t43049*t43544*t73928 - 1.*t43544*t44220*t78898 + t78906 + t78914 + t79089 + t79103)))*var2[14] - 0.5*(0.000069*t42926 + 3.e-6*t43049*t43822 + 0.000011*t43285*t43822 + 0.0005708164*(-0.1*t42926*t43285 - 1.*t42926*(t43049*t43822*t73873 - 1.*t43285*t73911 + t77750) + t43049*t43822*t78882 + t42926*t43049*(t43822*t73873 + t78895 + t42926*t78898 + t78902) + t43822*(-1.*t42926*t43049*t73873 + t43049*t43822*t78898 + t78906 + t78914)) - 0.0001630904*(0.1*t42926*t43049 - 1.*t43285*t43822*t78944 + t43822*(-1.*t42926*t43285*t73873 + t43285*t43822*t78898 + t78950 + t78964) - 1.*t42926*t43285*(-1.*t43822*t73873 - 1.*t42926*t78898 + t78968 + t78975) - 1.*t42926*(t77676 + t78984 + t78985)))*var2[15])*var2[17];
  p_output1[17]=(-0.5*(0.0005708164*t73274 - 0.0001630904*t80615)*var2[0] - 0.5*(0.0005708164*t67396 - 0.0001630904*(t66518*t80644 - 1.*t33917*t80654))*var2[1] - 0.5*(0.0005708164*(t33917*t66252 + t66518*t66833) - 0.0001630904*(t33917*t80644 + t66518*t80654))*var2[2] - 0.5*(-0.000011*t73274 + 3.e-6*t80615 - 0.0001630904*(t73274*t74194 + t74096*(t73274*t74022 + t66833*t74060 + t80714 + t80717 + t74172*t80755 + t67296*t80761) + t74172*(t80700 - 1.*t74096*t80755 - 1.*t72851*t80761)) + 0.0005708164*(t74134*t80615 + t74096*(-1.*t74022*t80615 - 1.*t74060*t80654 + t80737 + t80739 - 1.*t73274*t80755 - 1.*t66833*t80761) + t73274*(t80727 + t74096*t80755 + t72851*t80761)))*var2[3] - 0.5*(-0.000011*t66252 + 3.e-6*t80644 - 0.0001630904*(t66252*t75222 + t67264*(t80513 + t80700 - 1.*t72844*t80704) + t74118*(t66785*t74011 + t80517 + t80519 + t67283*t80704 + t80714 + t80717)) + 0.0005708164*(t74930*t80644 + t66252*(t80538 + t72844*t80704 + t80727) + t74118*(t80568 + t80579 - 1.*t74011*t80608 - 1.*t66785*t80704 + t80737 + t80739)))*var2[4] - 0.5*(-0.000011*t66545 + 3.e-6*t80491 - 0.0001630904*(t66545*t75620 + t67271*(t80399 - 1.*t72666*t80504 + t80513) + t72568*(t66136*t73988 + t80423 + t80425 + t67255*t80504 + t80517 + t80519)) + 0.0005708164*(t75488*t80491 + t66545*(t80442 + t72666*t80504 + t80538) + t72568*(t80459 + t80465 - 1.*t66136*t80504 + t80568 - 1.*t73988*t80576 + t80579)))*var2[5] - 0.5*(-0.000011*t44337 + 3.e-6*t80385 - 0.0001630904*(t44337*t76787 + 0.1*(t67230 + t42793*t80280) + t66952*(t80310 - 1.*t72562*t80391 + t80399) + t72798*(t65844*t73937 + t80353 + t80358 + t67242*t80391 + t80423 + t80425)) + 0.0005708164*(0.1*(-1.*t42926*t43049*t43141 + t42793*t44220) + t76667*t80385 + t44337*(t80265 + t72562*t80391 + t80442) + t72798*(t80271 + t80290 - 1.*t65844*t80391 + t80459 + t80465 - 1.*t73937*t80469)))*var2[13] - 0.5*(-0.000011*t44551 + 3.e-6*t77656 + 0.0005708164*(-0.098*t42926*t43049 + t77656*t77703 + t44551*(-1.*t42926*t43822*t80178 + t42926*t43544*t80255 + t80265) + t42926*t43295*(t77676 + t80225 - 1.*t44220*t80255 + t80271 - 1.*t73928*t80280 + t80290)) - 0.0001630904*(-0.098*t42926*t43285 + t44551*t77646 + t67193*(t42926*t43822*t80178 - 1.*t42926*t43544*t80255 + t80310) + t42926*t43295*(t44220*t73928 + t80190 + t80194 + t66945*t80255 + t80353 + t80358)))*var2[14] - 0.5*(-0.000011*t42926*t43049 + 3.e-6*t42926*t43285 - 0.0001630904*(-0.113*t43049 - 0.1*t43285*t43822 + t42926*t43049*t78944 + t43822*(-1.*t43049*t43822*t73873 + t43285*t73911 + t43285*t80163*t80178 + t80190 + t80194 + t43049*t80199)) + 0.0005708164*(0.113*t43285 - 0.1*t43049*t43822 + t42926*t43285*t78882 + t43822*(t77676 + t78984 + t78985 + t43049*t80163*t80178 - 1.*t43285*t80199 + t80225)))*var2[15] - 0.5*(-0.000054539012756*t43049 + 3.725432216e-6*t43285)*var2[16])*var2[17];
  p_output1[18]=0;
  p_output1[19]=0;
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=0;
  p_output1[24]=0;
  p_output1[25]=0;
  p_output1[26]=0;
  p_output1[27]=0;
  p_output1[28]=0;
  p_output1[29]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 30 && ncols == 1) && 
      !(mrows == 1 && ncols == 30))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 30 && ncols == 1) && 
      !(mrows == 1 && ncols == 30))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 30, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "Ce3_vec18_NaoH25V50.hh"

namespace SymFunction
{

void Ce3_vec18_NaoH25V50_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
