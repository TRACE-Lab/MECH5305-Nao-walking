/*
 * Automatically Generated from Mathematica.
 * Wed 13 Mar 2019 15:13:20 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;


#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t7;
  double t12;
  double t18;
  double t22;
  double t19;
  double t23;
  double t39;
  double t40;
  double t41;
  double t20;
  double t26;
  double t28;
  double t44;
  double t46;
  double t48;
  double t54;
  double t69;
  double t70;
  double t71;
  double t84;
  double t78;
  double t80;
  double t82;
  double t72;
  double t34;
  double t43;
  double t56;
  double t58;
  double t61;
  double t62;
  double t65;
  double t66;
  double t74;
  double t85;
  double t86;
  double t87;
  double t89;
  double t91;
  double t93;
  double t94;
  double t97;
  double t98;
  double t99;
  double t100;
  double t125;
  double t131;
  double t132;
  double t137;
  double t138;
  double t139;
  double t148;
  double t102;
  double t103;
  double t135;
  double t140;
  double t142;
  double t143;
  double t145;
  double t147;
  double t149;
  double t150;
  double t153;
  double t154;
  double t155;
  double t156;
  double t157;
  double t160;
  double t161;
  double t162;
  double t106;
  double t178;
  double t179;
  double t182;
  double t185;
  double t186;
  double t187;
  double t189;
  double t176;
  double t191;
  double t192;
  double t194;
  double t196;
  double t197;
  double t208;
  double t209;
  double t210;
  double t211;
  double t213;
  double t214;
  double t215;
  double t212;
  double t216;
  double t217;
  double t219;
  double t220;
  double t221;
  double t202;
  double t175;
  double t203;
  double t204;
  double t207;
  double t166;
  double t167;
  double t168;
  double t225;
  double t226;
  double t164;
  double t169;
  double t170;
  double t193;
  double t199;
  double t200;
  double t218;
  double t222;
  double t223;
  double t224;
  double t227;
  double t228;
  double t229;
  double t230;
  double t231;
  double t246;
  double t247;
  double t248;
  double t234;
  double t235;
  double t236;
  double t238;
  double t239;
  double t240;
  double t241;
  double t242;
  double t243;
  double t249;
  double t250;
  double t251;
  double t252;
  double t253;
  double t254;
  double t255;
  double t263;
  double t264;
  double t268;
  double t269;
  double t270;
  double t271;
  double t272;
  double t273;
  double t237;
  double t244;
  double t245;
  double t257;
  double t258;
  double t259;
  double t289;
  double t284;
  double t285;
  double t286;
  double t287;
  double t290;
  double t291;
  double t292;
  double t293;
  double t294;
  double t295;
  double t296;
  double t297;
  double t298;
  double t288;
  double t299;
  double t300;
  double t302;
  double t303;
  double t304;
  double t113;
  double t114;
  double t115;
  double t105;
  double t116;
  double t119;
  double t301;
  double t305;
  double t306;
  double t307;
  double t308;
  double t309;
  double t310;
  double t311;
  double t312;
  double t320;
  double t321;
  double t322;
  double t323;
  double t324;
  double t325;
  double t326;
  double t328;
  double t329;
  double t350;
  double t344;
  double t345;
  double t346;
  double t347;
  double t348;
  double t349;
  double t351;
  double t352;
  double t353;
  double t354;
  double t355;
  double t356;
  double t357;
  double t358;
  double t359;
  double t360;
  double t377;
  double t372;
  double t373;
  double t374;
  double t375;
  double t376;
  double t378;
  double t379;
  double t380;
  double t381;
  double t382;
  double t383;
  double t384;
  double t385;
  double t386;
  double t387;
  double t388;
  double t405;
  double t400;
  double t401;
  double t402;
  double t403;
  double t404;
  double t406;
  double t407;
  double t408;
  double t409;
  double t410;
  double t411;
  double t412;
  double t413;
  double t414;
  double t415;
  double t416;
  double t419;
  double t420;
  double t421;
  double t418;
  double t422;
  double t423;
  double t426;
  double t427;
  double t428;
  double t430;
  double t431;
  double t432;
  double t433;
  double t434;
  double t435;
  double t201;
  double t232;
  double t233;
  double t275;
  double t276;
  double t277;
  double t439;
  double t440;
  double t441;
  double t429;
  double t436;
  double t437;
  double t278;
  double t267;
  double t391;
  double t392;
  double t393;
  double t390;
  double t394;
  double t395;
  double t319;
  double t327;
  double t330;
  double t331;
  double t332;
  double t333;
  double t334;
  double t335;
  double t336;
  double t337;
  double t338;
  double t339;
  double t340;
  double t363;
  double t364;
  double t365;
  double t362;
  double t366;
  double t367;
  double t477;
  double t472;
  double t473;
  double t474;
  double t475;
  double t476;
  double t478;
  double t479;
  double t480;
  double t481;
  double t482;
  double t483;
  double t484;
  double t485;
  double t495;
  double t496;
  double t497;
  double t504;
  double t499;
  double t500;
  double t501;
  double t502;
  double t503;
  double t505;
  double t506;
  double t507;
  double t508;
  double t509;
  double t510;
  double t511;
  double t512;
  double t528;
  double t523;
  double t524;
  double t525;
  double t526;
  double t527;
  double t529;
  double t530;
  double t531;
  double t532;
  double t533;
  double t534;
  double t535;
  double t536;
  double t539;
  double t540;
  double t541;
  double t538;
  double t542;
  double t543;
  double t546;
  double t547;
  double t548;
  double t550;
  double t551;
  double t552;
  double t553;
  double t554;
  double t555;
  double t549;
  double t556;
  double t557;
  double t559;
  double t560;
  double t561;
  double t488;
  double t489;
  double t490;
  double t487;
  double t491;
  double t492;
  double t466;
  double t467;
  double t468;
  double t515;
  double t516;
  double t517;
  double t514;
  double t518;
  double t519;
  double t593;
  double t594;
  double t595;
  double t596;
  double t588;
  double t589;
  double t590;
  double t591;
  double t592;
  double t597;
  double t598;
  double t599;
  double t600;
  double t601;
  double t616;
  double t617;
  double t618;
  double t619;
  double t611;
  double t612;
  double t613;
  double t614;
  double t615;
  double t620;
  double t621;
  double t622;
  double t623;
  double t624;
  double t639;
  double t640;
  double t641;
  double t642;
  double t634;
  double t635;
  double t636;
  double t637;
  double t638;
  double t643;
  double t644;
  double t645;
  double t646;
  double t647;
  double t650;
  double t651;
  double t652;
  double t649;
  double t653;
  double t654;
  double t657;
  double t658;
  double t660;
  double t661;
  double t662;
  double t663;
  double t664;
  double t665;
  double t659;
  double t666;
  double t667;
  double t669;
  double t670;
  double t671;
  double t604;
  double t605;
  double t606;
  double t603;
  double t607;
  double t608;
  double t627;
  double t628;
  double t629;
  double t626;
  double t630;
  double t631;
  double t698;
  double t699;
  double t700;
  double t707;
  double t708;
  double t709;
  double t716;
  double t717;
  double t718;
  double t720;
  double t721;
  double t722;
  double t726;
  double t727;
  double t728;
  double t729;
  double t730;
  double t731;
  double t735;
  double t736;
  double t737;
  double t725;
  double t732;
  double t733;
  double t711;
  double t712;
  double t713;
  double t702;
  double t703;
  double t704;
  double t783;
  double t784;
  double t785;
  double t786;
  double t787;
  double t788;
  double t791;
  double t792;
  double t793;
  double t794;
  double t795;
  double t796;
  double t774;
  double t775;
  double t776;
  double t777;
  double t778;
  double t779;
  double t765;
  double t766;
  double t767;
  double t768;
  double t769;
  double t770;
  double t830;
  double t831;
  double t833;
  double t834;
  double t835;
  double t836;
  double t837;
  double t838;
  double t827;
  double t828;
  double t824;
  double t825;
  double t866;
  double t867;
  t7 = Cos(var1[3]);
  t12 = Cos(var1[4]);
  t18 = Cos(var1[5]);
  t22 = Sin(var1[4]);
  t19 = Sin(var1[3]);
  t23 = Sin(var1[5]);
  t39 = Sin(var1[18]);
  t40 = -0.707107*t39;
  t41 = 0. + t40;
  t20 = -1.*t18*t19;
  t26 = -1.*t7*t22*t23;
  t28 = t20 + t26;
  t44 = Cos(var1[18]);
  t46 = t7*t18*t22;
  t48 = -1.*t19*t23;
  t54 = t46 + t48;
  t69 = 0.707107*t44;
  t70 = 0. + t69;
  t71 = 0.707107*t70;
  t84 = -0.5000003094490001 + t71;
  t78 = 0.707107*t39;
  t80 = 0. + t78;
  t82 = t80*t54;
  t72 = 0.5000003094490001 + t71;
  t34 = Sin(var1[20]);
  t43 = -1.*t7*t12*t41;
  t56 = t44*t54;
  t58 = t41*t28;
  t61 = t43 + t56 + t58;
  t62 = t34*t61;
  t65 = Cos(var1[20]);
  t66 = Cos(var1[19]);
  t74 = -1.*t72*t7*t12;
  t85 = t84*t28;
  t86 = t74 + t82 + t85;
  t87 = t66*t86;
  t89 = Sin(var1[19]);
  t91 = -1.*t84*t7*t12;
  t93 = t72*t28;
  t94 = t91 + t82 + t93;
  t97 = -1.*t89*t94;
  t98 = t87 + t97;
  t99 = t65*t98;
  t100 = t62 + t99;
  t125 = t7*t18;
  t131 = -1.*t19*t22*t23;
  t132 = t125 + t131;
  t137 = t18*t19*t22;
  t138 = t7*t23;
  t139 = t137 + t138;
  t148 = t80*t139;
  t102 = Cos(var1[21]);
  t103 = 0. + t102;
  t135 = -1.*t12*t41*t19;
  t140 = t44*t139;
  t142 = t41*t132;
  t143 = t135 + t140 + t142;
  t145 = t34*t143;
  t147 = -1.*t72*t12*t19;
  t149 = t84*t132;
  t150 = t147 + t148 + t149;
  t153 = t66*t150;
  t154 = -1.*t84*t12*t19;
  t155 = t72*t132;
  t156 = t154 + t148 + t155;
  t157 = -1.*t89*t156;
  t160 = t153 + t157;
  t161 = t65*t160;
  t162 = t145 + t161;
  t106 = Sin(var1[21]);
  t178 = -1.*t7*t18*t22;
  t179 = t19*t23;
  t182 = t178 + t179;
  t185 = t80*t182;
  t186 = t18*t19;
  t187 = t7*t22*t23;
  t189 = t186 + t187;
  t176 = t72*t7*t12;
  t191 = t84*t189;
  t192 = 0. + t176 + t185 + t191;
  t194 = t84*t7*t12;
  t196 = t72*t189;
  t197 = 0. + t194 + t185 + t196;
  t208 = t7*t12*t41;
  t209 = t44*t182;
  t210 = t41*t189;
  t211 = t208 + t209 + t210;
  t213 = t66*t192;
  t214 = -1.*t89*t197;
  t215 = t213 + t214;
  t212 = t34*t211;
  t216 = t65*t215;
  t217 = t212 + t216;
  t219 = t65*t211;
  t220 = -1.*t34*t215;
  t221 = t219 + t220;
  t202 = Sin(var1[23]);
  t175 = Cos(var1[23]);
  t203 = Sin(var1[22]);
  t204 = -1.*t106;
  t207 = 0. + t204;
  t166 = t65*t143;
  t167 = -1.*t34*t160;
  t168 = t166 + t167;
  t225 = Cos(var1[22]);
  t226 = 0. + t225;
  t164 = t103*t162;
  t169 = t106*t168;
  t170 = t164 + t169;
  t193 = t89*t192;
  t199 = t66*t197;
  t200 = 0. + t193 + t199;
  t218 = t207*t217;
  t222 = t102*t221;
  t223 = t218 + t222;
  t224 = t203*t223;
  t227 = t103*t217;
  t228 = t106*t221;
  t229 = t227 + t228;
  t230 = t226*t229;
  t231 = t224 + t230;
  t246 = -1.*t202*t200;
  t247 = t175*t231;
  t248 = t246 + t247;
  t234 = t89*t150;
  t235 = t66*t156;
  t236 = t234 + t235;
  t238 = t207*t162;
  t239 = t102*t168;
  t240 = t238 + t239;
  t241 = t203*t240;
  t242 = t226*t170;
  t243 = t241 + t242;
  t249 = Power(t248,2);
  t250 = t175*t200;
  t251 = t202*t231;
  t252 = t250 + t251;
  t253 = Power(t252,2);
  t254 = t249 + t253;
  t255 = 1/t254;
  t263 = -1.*t203;
  t264 = 0. + t263;
  t268 = -1.*t225*t223;
  t269 = -1.*t264*t229;
  t270 = t268 + t269;
  t271 = Power(t270,2);
  t272 = t271 + t249 + t253;
  t273 = 1/t272;
  t237 = -1.*t202*t236;
  t244 = t175*t243;
  t245 = t237 + t244;
  t257 = t175*t236;
  t258 = t202*t243;
  t259 = t257 + t258;
  t289 = t12*t18*t80;
  t284 = t44*t12*t18;
  t285 = t41*t22;
  t286 = -1.*t12*t41*t23;
  t287 = t284 + t285 + t286;
  t290 = t72*t22;
  t291 = -1.*t84*t12*t23;
  t292 = 0. + t289 + t290 + t291;
  t293 = t66*t292;
  t294 = t84*t22;
  t295 = -1.*t72*t12*t23;
  t296 = 0. + t289 + t294 + t295;
  t297 = -1.*t89*t296;
  t298 = t293 + t297;
  t288 = t34*t287;
  t299 = t65*t298;
  t300 = t288 + t299;
  t302 = t65*t287;
  t303 = -1.*t34*t298;
  t304 = t302 + t303;
  t113 = t65*t61;
  t114 = -1.*t34*t98;
  t115 = t113 + t114;
  t105 = t103*t100;
  t116 = t106*t115;
  t119 = t105 + t116;
  t301 = t207*t300;
  t305 = t102*t304;
  t306 = t301 + t305;
  t307 = t225*t306;
  t308 = t103*t300;
  t309 = t106*t304;
  t310 = t308 + t309;
  t311 = t264*t310;
  t312 = t307 + t311;
  t320 = 0. + t147 + t148 + t149;
  t321 = t66*t320;
  t322 = 0. + t154 + t148 + t155;
  t323 = -1.*t89*t322;
  t324 = t321 + t323;
  t325 = t65*t324;
  t326 = t145 + t325;
  t328 = -1.*t34*t324;
  t329 = t166 + t328;
  t350 = -1.*t18*t80*t22;
  t344 = t12*t41;
  t345 = -1.*t44*t18*t22;
  t346 = t41*t22*t23;
  t347 = t344 + t345 + t346;
  t348 = t34*t347;
  t349 = t72*t12;
  t351 = t84*t22*t23;
  t352 = t349 + t350 + t351;
  t353 = t66*t352;
  t354 = t84*t12;
  t355 = t72*t22*t23;
  t356 = t354 + t350 + t355;
  t357 = -1.*t89*t356;
  t358 = t353 + t357;
  t359 = t65*t358;
  t360 = t348 + t359;
  t377 = t12*t18*t80*t19;
  t372 = t44*t12*t18*t19;
  t373 = t41*t19*t22;
  t374 = -1.*t12*t41*t19*t23;
  t375 = t372 + t373 + t374;
  t376 = t34*t375;
  t378 = t72*t19*t22;
  t379 = -1.*t84*t12*t19*t23;
  t380 = t377 + t378 + t379;
  t381 = t66*t380;
  t382 = t84*t19*t22;
  t383 = -1.*t72*t12*t19*t23;
  t384 = t377 + t382 + t383;
  t385 = -1.*t89*t384;
  t386 = t381 + t385;
  t387 = t65*t386;
  t388 = t376 + t387;
  t405 = -1.*t7*t12*t18*t80;
  t400 = -1.*t44*t7*t12*t18;
  t401 = -1.*t7*t41*t22;
  t402 = t7*t12*t41*t23;
  t403 = t400 + t401 + t402;
  t404 = t34*t403;
  t406 = -1.*t72*t7*t22;
  t407 = t84*t7*t12*t23;
  t408 = t405 + t406 + t407;
  t409 = t66*t408;
  t410 = -1.*t84*t7*t22;
  t411 = t72*t7*t12*t23;
  t412 = t405 + t410 + t411;
  t413 = -1.*t89*t412;
  t414 = t409 + t413;
  t415 = t65*t414;
  t416 = t404 + t415;
  t419 = t65*t403;
  t420 = -1.*t34*t414;
  t421 = t419 + t420;
  t418 = t103*t416;
  t422 = t106*t421;
  t423 = t418 + t422;
  t426 = t89*t408;
  t427 = t66*t412;
  t428 = t426 + t427;
  t430 = t207*t416;
  t431 = t102*t421;
  t432 = t430 + t431;
  t433 = t203*t432;
  t434 = t226*t423;
  t435 = t433 + t434;
  t201 = -1.*t175*t200;
  t232 = -1.*t202*t231;
  t233 = t201 + t232;
  t275 = t225*t223;
  t276 = t264*t229;
  t277 = t275 + t276;
  t439 = -1.*t202*t428;
  t440 = t175*t435;
  t441 = t439 + t440;
  t429 = t175*t428;
  t436 = t202*t435;
  t437 = t429 + t436;
  t278 = 1/Sqrt(t254);
  t267 = Sqrt(t254);
  t391 = t65*t375;
  t392 = -1.*t34*t386;
  t393 = t391 + t392;
  t390 = t103*t388;
  t394 = t106*t393;
  t395 = t390 + t394;
  t319 = Power(t312,2);
  t327 = t207*t326;
  t330 = t102*t329;
  t331 = t327 + t330;
  t332 = t225*t331;
  t333 = t103*t326;
  t334 = t106*t329;
  t335 = t333 + t334;
  t336 = t264*t335;
  t337 = t332 + t336;
  t338 = Power(t337,2);
  t339 = t319 + t338;
  t340 = 1/t339;
  t363 = t65*t347;
  t364 = -1.*t34*t358;
  t365 = t363 + t364;
  t362 = t103*t360;
  t366 = t106*t365;
  t367 = t362 + t366;
  t477 = -1.*t12*t80*t23;
  t472 = -1.*t12*t18*t41;
  t473 = -1.*t44*t12*t23;
  t474 = t472 + t473;
  t475 = t34*t474;
  t476 = -1.*t84*t12*t18;
  t478 = t476 + t477;
  t479 = t66*t478;
  t480 = -1.*t72*t12*t18;
  t481 = t480 + t477;
  t482 = -1.*t89*t481;
  t483 = t479 + t482;
  t484 = t65*t483;
  t485 = t475 + t484;
  t495 = -1.*t18*t19*t22;
  t496 = -1.*t7*t23;
  t497 = t495 + t496;
  t504 = t80*t132;
  t499 = t41*t497;
  t500 = t44*t132;
  t501 = t499 + t500;
  t502 = t34*t501;
  t503 = t84*t497;
  t505 = t503 + t504;
  t506 = t66*t505;
  t507 = t72*t497;
  t508 = t507 + t504;
  t509 = -1.*t89*t508;
  t510 = t506 + t509;
  t511 = t65*t510;
  t512 = t502 + t511;
  t528 = t80*t189;
  t523 = t41*t54;
  t524 = t44*t189;
  t525 = t523 + t524;
  t526 = t34*t525;
  t527 = t84*t54;
  t529 = t527 + t528;
  t530 = t66*t529;
  t531 = t72*t54;
  t532 = t531 + t528;
  t533 = -1.*t89*t532;
  t534 = t530 + t533;
  t535 = t65*t534;
  t536 = t526 + t535;
  t539 = t65*t525;
  t540 = -1.*t34*t534;
  t541 = t539 + t540;
  t538 = t103*t536;
  t542 = t106*t541;
  t543 = t538 + t542;
  t546 = t89*t529;
  t547 = t66*t532;
  t548 = t546 + t547;
  t550 = t207*t536;
  t551 = t102*t541;
  t552 = t550 + t551;
  t553 = t203*t552;
  t554 = t226*t543;
  t555 = t553 + t554;
  t549 = -1.*t202*t548;
  t556 = t175*t555;
  t557 = t549 + t556;
  t559 = t175*t548;
  t560 = t202*t555;
  t561 = t559 + t560;
  t488 = t65*t474;
  t489 = -1.*t34*t483;
  t490 = t488 + t489;
  t487 = t103*t485;
  t491 = t106*t490;
  t492 = t487 + t491;
  t466 = -1.*t225*t331;
  t467 = -1.*t264*t335;
  t468 = t466 + t467;
  t515 = t65*t501;
  t516 = -1.*t34*t510;
  t517 = t515 + t516;
  t514 = t103*t512;
  t518 = t106*t517;
  t519 = t514 + t518;
  t593 = 0.707107*t44*t12*t18;
  t594 = -0.5000003094490001*t39*t22;
  t595 = 0.5000003094490001*t12*t39*t23;
  t596 = t593 + t594 + t595;
  t588 = -1.*t12*t18*t39;
  t589 = -0.707107*t44*t22;
  t590 = 0.707107*t44*t12*t23;
  t591 = t588 + t589 + t590;
  t592 = t34*t591;
  t597 = t66*t596;
  t598 = -1.*t89*t596;
  t599 = t597 + t598;
  t600 = t65*t599;
  t601 = t592 + t600;
  t616 = 0.5000003094490001*t12*t39*t19;
  t617 = 0.707107*t44*t139;
  t618 = -0.5000003094490001*t39*t132;
  t619 = t616 + t617 + t618;
  t611 = 0.707107*t44*t12*t19;
  t612 = -1.*t39*t139;
  t613 = -0.707107*t44*t132;
  t614 = t611 + t612 + t613;
  t615 = t34*t614;
  t620 = t66*t619;
  t621 = -1.*t89*t619;
  t622 = t620 + t621;
  t623 = t65*t622;
  t624 = t615 + t623;
  t639 = -0.5000003094490001*t7*t12*t39;
  t640 = 0.707107*t44*t182;
  t641 = -0.5000003094490001*t39*t189;
  t642 = t639 + t640 + t641;
  t634 = -0.707107*t44*t7*t12;
  t635 = -1.*t39*t182;
  t636 = -0.707107*t44*t189;
  t637 = t634 + t635 + t636;
  t638 = t34*t637;
  t643 = t66*t642;
  t644 = -1.*t89*t642;
  t645 = t643 + t644;
  t646 = t65*t645;
  t647 = t638 + t646;
  t650 = t65*t637;
  t651 = -1.*t34*t645;
  t652 = t650 + t651;
  t649 = t103*t647;
  t653 = t106*t652;
  t654 = t649 + t653;
  t657 = t89*t642;
  t658 = t643 + t657;
  t660 = t207*t647;
  t661 = t102*t652;
  t662 = t660 + t661;
  t663 = t203*t662;
  t664 = t226*t654;
  t665 = t663 + t664;
  t659 = -1.*t202*t658;
  t666 = t175*t665;
  t667 = t659 + t666;
  t669 = t175*t658;
  t670 = t202*t665;
  t671 = t669 + t670;
  t604 = t65*t591;
  t605 = -1.*t34*t599;
  t606 = t604 + t605;
  t603 = t103*t601;
  t607 = t106*t606;
  t608 = t603 + t607;
  t627 = t65*t614;
  t628 = -1.*t34*t622;
  t629 = t627 + t628;
  t626 = t103*t624;
  t630 = t106*t629;
  t631 = t626 + t630;
  t698 = -1.*t89*t292;
  t699 = -1.*t66*t296;
  t700 = t698 + t699;
  t707 = -1.*t89*t320;
  t708 = -1.*t66*t322;
  t709 = t707 + t708;
  t716 = -1.*t89*t192;
  t717 = -1.*t66*t197;
  t718 = t716 + t717;
  t720 = t65*t103*t718;
  t721 = -1.*t34*t106*t718;
  t722 = t720 + t721;
  t726 = -1.*t102*t34*t718;
  t727 = t65*t207*t718;
  t728 = t726 + t727;
  t729 = t203*t728;
  t730 = t226*t722;
  t731 = t729 + t730;
  t735 = -1.*t202*t215;
  t736 = t175*t731;
  t737 = t735 + t736;
  t725 = t175*t215;
  t732 = t202*t731;
  t733 = t725 + t732;
  t711 = t65*t103*t709;
  t712 = -1.*t34*t106*t709;
  t713 = t711 + t712;
  t702 = t65*t103*t700;
  t703 = -1.*t34*t106*t700;
  t704 = t702 + t703;
  t783 = -1.*t34*t211;
  t784 = -1.*t65*t215;
  t785 = t783 + t784;
  t786 = t106*t785;
  t787 = t103*t221;
  t788 = t786 + t787;
  t791 = t226*t788;
  t792 = t102*t785;
  t793 = t207*t221;
  t794 = t792 + t793;
  t795 = t203*t794;
  t796 = t791 + t795;
  t774 = -1.*t34*t143;
  t775 = -1.*t65*t324;
  t776 = t774 + t775;
  t777 = t106*t776;
  t778 = t103*t329;
  t779 = t777 + t778;
  t765 = -1.*t34*t287;
  t766 = -1.*t65*t298;
  t767 = t765 + t766;
  t768 = t106*t767;
  t769 = t103*t304;
  t770 = t768 + t769;
  t830 = -1.*t106*t217;
  t831 = t830 + t222;
  t833 = t226*t831;
  t834 = -1.*t102*t217;
  t835 = -1.*t106*t221;
  t836 = t834 + t835;
  t837 = t203*t836;
  t838 = t833 + t837;
  t827 = -1.*t106*t326;
  t828 = t827 + t330;
  t824 = -1.*t106*t300;
  t825 = t824 + t305;
  t866 = -1.*t203*t229;
  t867 = t275 + t866;
  p_output1[0]=1.;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=0;
  p_output1[13]=0;
  p_output1[14]=0;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
  p_output1[18]=0;
  p_output1[19]=0;
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=0;
  p_output1[24]=1.;
  p_output1[25]=0;
  p_output1[26]=0;
  p_output1[27]=0;
  p_output1[28]=0;
  p_output1[29]=1.;
  p_output1[30]=0;
  p_output1[31]=0;
  p_output1[32]=0;
  p_output1[33]=0;
  p_output1[34]=0;
  p_output1[35]=0;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=1.;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=1.;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
  p_output1[60]=0;
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=0;
  p_output1[64]=0;
  p_output1[65]=0;
  p_output1[66]=0;
  p_output1[67]=0;
  p_output1[68]=0;
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=1.;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=-0.1*t100 - 0.1029*t119 + 0.05*t28 + 0.085*t12*t7;
  p_output1[76]=0.05*t132 - 0.1*t162 - 0.1029*t170 + 0.085*t12*t19;
  p_output1[77]=t233*t245*t255 + t248*t255*t259;
  p_output1[78]=(-1.*t225*t240 - 1.*t170*t264)*t267*t273 + 0.5*(2.*t245*t248 + 2.*t252*t259)*t273*t277*t278;
  p_output1[79]=((t102*t115 + t100*t207)*t225 + t119*t264)*t312*t340;
  p_output1[80]=0;
  p_output1[81]=0;
  p_output1[82]=0;
  p_output1[83]=0;
  p_output1[84]=0;
  p_output1[85]=0;
  p_output1[86]=0;
  p_output1[87]=0;
  p_output1[88]=0;
  p_output1[89]=0;
  p_output1[90]=0;
  p_output1[91]=0;
  p_output1[92]=0;
  p_output1[93]=0;
  p_output1[94]=0;
  p_output1[95]=0;
  p_output1[96]=1.;
  p_output1[97]=-0.085*t12 + 0.05*t22*t23 - 0.1*t360 - 0.1029*t367;
  p_output1[98]=-0.085*t19*t22 - 0.05*t12*t19*t23 - 0.1*t388 - 0.1029*t395;
  p_output1[99]=-0.1*t416 - 0.1029*t423 + 0.085*t22*t7 + 0.05*t12*t23*t7;
  p_output1[100]=t248*t255*t437 + t233*t255*t441;
  p_output1[101]=t267*t273*(-1.*t264*t423 - 1.*t225*t432) + 0.5*t273*t277*t278*(2.*t252*t437 + 2.*t248*t441);
  p_output1[102]=t312*t340*(t225*(t207*t388 + t102*t393) + t264*t395) + t340*(t225*(t207*t360 + t102*t365) + t264*t367)*t468;
  p_output1[103]=0;
  p_output1[104]=0;
  p_output1[105]=0;
  p_output1[106]=0;
  p_output1[107]=0;
  p_output1[108]=0;
  p_output1[109]=0;
  p_output1[110]=0;
  p_output1[111]=0;
  p_output1[112]=0;
  p_output1[113]=0;
  p_output1[114]=0;
  p_output1[115]=0;
  p_output1[116]=0;
  p_output1[117]=0;
  p_output1[118]=0;
  p_output1[119]=0;
  p_output1[120]=-0.05*t12*t18 - 0.1*t485 - 0.1029*t492;
  p_output1[121]=0.05*t497 - 0.1*t512 - 0.1029*t519;
  p_output1[122]=-0.1*t536 + 0.05*t54 - 0.1029*t543;
  p_output1[123]=t233*t255*t557 + t248*t255*t561;
  p_output1[124]=t267*t273*(-1.*t264*t543 - 1.*t225*t552) + 0.5*t273*t277*t278*(2.*t248*t557 + 2.*t252*t561);
  p_output1[125]=t340*t468*(t225*(t207*t485 + t102*t490) + t264*t492) + t312*t340*(t225*(t207*t512 + t102*t517) + t264*t519);
  p_output1[126]=0;
  p_output1[127]=0;
  p_output1[128]=0;
  p_output1[129]=0;
  p_output1[130]=0;
  p_output1[131]=0;
  p_output1[132]=0;
  p_output1[133]=0;
  p_output1[134]=0;
  p_output1[135]=0;
  p_output1[136]=0;
  p_output1[137]=0;
  p_output1[138]=0;
  p_output1[139]=0;
  p_output1[140]=0;
  p_output1[141]=0;
  p_output1[142]=0;
  p_output1[143]=0;
  p_output1[144]=0;
  p_output1[145]=0;
  p_output1[146]=0;
  p_output1[147]=0;
  p_output1[148]=0;
  p_output1[149]=1.;
  p_output1[150]=0;
  p_output1[151]=0;
  p_output1[152]=0;
  p_output1[153]=0;
  p_output1[154]=0;
  p_output1[155]=0;
  p_output1[156]=0;
  p_output1[157]=0;
  p_output1[158]=0;
  p_output1[159]=0;
  p_output1[160]=0;
  p_output1[161]=0;
  p_output1[162]=0;
  p_output1[163]=0;
  p_output1[164]=0;
  p_output1[165]=0;
  p_output1[166]=0;
  p_output1[167]=0;
  p_output1[168]=0;
  p_output1[169]=0;
  p_output1[170]=0;
  p_output1[171]=0;
  p_output1[172]=0;
  p_output1[173]=1.;
  p_output1[174]=0;
  p_output1[175]=0;
  p_output1[176]=0;
  p_output1[177]=0;
  p_output1[178]=0;
  p_output1[179]=0;
  p_output1[180]=0;
  p_output1[181]=0;
  p_output1[182]=0;
  p_output1[183]=0;
  p_output1[184]=0;
  p_output1[185]=0;
  p_output1[186]=0;
  p_output1[187]=0;
  p_output1[188]=0;
  p_output1[189]=0;
  p_output1[190]=0;
  p_output1[191]=0;
  p_output1[192]=0;
  p_output1[193]=0;
  p_output1[194]=0;
  p_output1[195]=0;
  p_output1[196]=0;
  p_output1[197]=1.;
  p_output1[198]=0;
  p_output1[199]=0;
  p_output1[200]=0;
  p_output1[201]=0;
  p_output1[202]=0;
  p_output1[203]=0;
  p_output1[204]=0;
  p_output1[205]=0;
  p_output1[206]=0;
  p_output1[207]=0;
  p_output1[208]=0;
  p_output1[209]=0;
  p_output1[210]=0;
  p_output1[211]=0;
  p_output1[212]=0;
  p_output1[213]=0;
  p_output1[214]=0;
  p_output1[215]=0;
  p_output1[216]=0;
  p_output1[217]=0;
  p_output1[218]=0;
  p_output1[219]=0;
  p_output1[220]=0;
  p_output1[221]=1.;
  p_output1[222]=0;
  p_output1[223]=0;
  p_output1[224]=0;
  p_output1[225]=0;
  p_output1[226]=0;
  p_output1[227]=0;
  p_output1[228]=0;
  p_output1[229]=0;
  p_output1[230]=0;
  p_output1[231]=0;
  p_output1[232]=0;
  p_output1[233]=0;
  p_output1[234]=0;
  p_output1[235]=0;
  p_output1[236]=0;
  p_output1[237]=0;
  p_output1[238]=0;
  p_output1[239]=0;
  p_output1[240]=0;
  p_output1[241]=0;
  p_output1[242]=0;
  p_output1[243]=0;
  p_output1[244]=0;
  p_output1[245]=1.;
  p_output1[246]=0;
  p_output1[247]=0;
  p_output1[248]=0;
  p_output1[249]=0;
  p_output1[250]=0;
  p_output1[251]=0;
  p_output1[252]=0;
  p_output1[253]=0;
  p_output1[254]=0;
  p_output1[255]=0;
  p_output1[256]=0;
  p_output1[257]=0;
  p_output1[258]=0;
  p_output1[259]=0;
  p_output1[260]=0;
  p_output1[261]=0;
  p_output1[262]=0;
  p_output1[263]=0;
  p_output1[264]=0;
  p_output1[265]=0;
  p_output1[266]=0;
  p_output1[267]=0;
  p_output1[268]=0;
  p_output1[269]=1.;
  p_output1[270]=0;
  p_output1[271]=0;
  p_output1[272]=0;
  p_output1[273]=0;
  p_output1[274]=0;
  p_output1[275]=0;
  p_output1[276]=0;
  p_output1[277]=0;
  p_output1[278]=0;
  p_output1[279]=0;
  p_output1[280]=0;
  p_output1[281]=0;
  p_output1[282]=0;
  p_output1[283]=0;
  p_output1[284]=0;
  p_output1[285]=0;
  p_output1[286]=0;
  p_output1[287]=0;
  p_output1[288]=0;
  p_output1[289]=0;
  p_output1[290]=0;
  p_output1[291]=0;
  p_output1[292]=0;
  p_output1[293]=1.;
  p_output1[294]=0;
  p_output1[295]=0;
  p_output1[296]=0;
  p_output1[297]=0;
  p_output1[298]=0;
  p_output1[299]=0;
  p_output1[300]=0;
  p_output1[301]=0;
  p_output1[302]=0;
  p_output1[303]=0;
  p_output1[304]=0;
  p_output1[305]=0;
  p_output1[306]=0;
  p_output1[307]=0;
  p_output1[308]=0;
  p_output1[309]=0;
  p_output1[310]=0;
  p_output1[311]=0;
  p_output1[312]=0;
  p_output1[313]=0;
  p_output1[314]=0;
  p_output1[315]=0;
  p_output1[316]=0;
  p_output1[317]=1.;
  p_output1[318]=0;
  p_output1[319]=0;
  p_output1[320]=0;
  p_output1[321]=0;
  p_output1[322]=0;
  p_output1[323]=0;
  p_output1[324]=0;
  p_output1[325]=0;
  p_output1[326]=0;
  p_output1[327]=0;
  p_output1[328]=0;
  p_output1[329]=0;
  p_output1[330]=0;
  p_output1[331]=0;
  p_output1[332]=0;
  p_output1[333]=0;
  p_output1[334]=0;
  p_output1[335]=0;
  p_output1[336]=0;
  p_output1[337]=0;
  p_output1[338]=0;
  p_output1[339]=0;
  p_output1[340]=0;
  p_output1[341]=1.;
  p_output1[342]=0;
  p_output1[343]=0;
  p_output1[344]=0;
  p_output1[345]=0;
  p_output1[346]=0;
  p_output1[347]=0;
  p_output1[348]=0;
  p_output1[349]=0;
  p_output1[350]=0;
  p_output1[351]=0;
  p_output1[352]=0;
  p_output1[353]=0;
  p_output1[354]=0;
  p_output1[355]=0;
  p_output1[356]=0;
  p_output1[357]=0;
  p_output1[358]=0;
  p_output1[359]=0;
  p_output1[360]=0;
  p_output1[361]=0;
  p_output1[362]=0;
  p_output1[363]=0;
  p_output1[364]=0;
  p_output1[365]=1.;
  p_output1[366]=0;
  p_output1[367]=0;
  p_output1[368]=0;
  p_output1[369]=0;
  p_output1[370]=0;
  p_output1[371]=0;
  p_output1[372]=0;
  p_output1[373]=0;
  p_output1[374]=0;
  p_output1[375]=0;
  p_output1[376]=0;
  p_output1[377]=0;
  p_output1[378]=0;
  p_output1[379]=0;
  p_output1[380]=0;
  p_output1[381]=0;
  p_output1[382]=0;
  p_output1[383]=0;
  p_output1[384]=0;
  p_output1[385]=0;
  p_output1[386]=0;
  p_output1[387]=0;
  p_output1[388]=0;
  p_output1[389]=1.;
  p_output1[390]=0;
  p_output1[391]=0;
  p_output1[392]=0;
  p_output1[393]=0;
  p_output1[394]=0;
  p_output1[395]=0;
  p_output1[396]=0;
  p_output1[397]=0;
  p_output1[398]=0;
  p_output1[399]=0;
  p_output1[400]=0;
  p_output1[401]=0;
  p_output1[402]=0;
  p_output1[403]=0;
  p_output1[404]=0;
  p_output1[405]=0;
  p_output1[406]=0;
  p_output1[407]=0;
  p_output1[408]=0;
  p_output1[409]=0;
  p_output1[410]=0;
  p_output1[411]=0;
  p_output1[412]=0;
  p_output1[413]=1.;
  p_output1[414]=0;
  p_output1[415]=0;
  p_output1[416]=0;
  p_output1[417]=0;
  p_output1[418]=0;
  p_output1[419]=-0.1*t601 - 0.1029*t608;
  p_output1[420]=-0.1*t624 - 0.1029*t631;
  p_output1[421]=-0.1*t647 - 0.1029*t654;
  p_output1[422]=t233*t255*t667 + t248*t255*t671;
  p_output1[423]=t267*t273*(-1.*t264*t654 - 1.*t225*t662) + 0.5*t273*t277*t278*(2.*t248*t667 + 2.*t252*t671);
  p_output1[424]=t340*t468*(t225*(t207*t601 + t102*t606) + t264*t608) + t312*t340*(t225*(t207*t624 + t102*t629) + t264*t631);
  p_output1[425]=0;
  p_output1[426]=0;
  p_output1[427]=0;
  p_output1[428]=0;
  p_output1[429]=0;
  p_output1[430]=0;
  p_output1[431]=0;
  p_output1[432]=0;
  p_output1[433]=0;
  p_output1[434]=0;
  p_output1[435]=0;
  p_output1[436]=0;
  p_output1[437]=0;
  p_output1[438]=0;
  p_output1[439]=0;
  p_output1[440]=0;
  p_output1[441]=0;
  p_output1[442]=-0.1*t65*t700 - 0.1029*t704;
  p_output1[443]=-0.1*t65*t709 - 0.1029*t713;
  p_output1[444]=-0.1*t65*t718 - 0.1029*t722;
  p_output1[445]=t248*t255*t733 + t233*t255*t737;
  p_output1[446]=t267*t273*(-1.*t264*t722 - 1.*t225*t728) + 0.5*t273*t277*t278*(2.*t252*t733 + 2.*t248*t737);
  p_output1[447]=t340*t468*(t225*(-1.*t102*t34*t700 + t207*t65*t700) + t264*t704) + t312*t340*(t225*(-1.*t102*t34*t709 + t207*t65*t709) + t264*t713);
  p_output1[448]=0;
  p_output1[449]=0;
  p_output1[450]=0;
  p_output1[451]=0;
  p_output1[452]=0;
  p_output1[453]=0;
  p_output1[454]=0;
  p_output1[455]=0;
  p_output1[456]=0;
  p_output1[457]=0;
  p_output1[458]=0;
  p_output1[459]=0;
  p_output1[460]=0;
  p_output1[461]=0;
  p_output1[462]=0;
  p_output1[463]=0;
  p_output1[464]=0;
  p_output1[465]=-0.1*t304 - 0.1029*t770;
  p_output1[466]=-0.1*t329 - 0.1029*t779;
  p_output1[467]=-0.1*t221 - 0.1029*t788;
  p_output1[468]=t175*t233*t255*t796 + t202*t248*t255*t796;
  p_output1[469]=t267*t273*(-1.*t264*t788 - 1.*t225*t794) + 0.5*t273*t277*t278*(2.*t175*t248*t796 + 2.*t202*t252*t796);
  p_output1[470]=t340*t468*(t225*(t207*t304 + t102*t767) + t264*t770) + t312*t340*(t225*(t207*t329 + t102*t776) + t264*t779);
  p_output1[471]=0;
  p_output1[472]=0;
  p_output1[473]=0;
  p_output1[474]=0;
  p_output1[475]=0;
  p_output1[476]=0;
  p_output1[477]=0;
  p_output1[478]=0;
  p_output1[479]=0;
  p_output1[480]=0;
  p_output1[481]=0;
  p_output1[482]=0;
  p_output1[483]=0;
  p_output1[484]=0;
  p_output1[485]=0;
  p_output1[486]=0;
  p_output1[487]=0;
  p_output1[488]=-0.1029*t825;
  p_output1[489]=-0.1029*t828;
  p_output1[490]=-0.1029*t831;
  p_output1[491]=t175*t233*t255*t838 + t202*t248*t255*t838;
  p_output1[492]=t267*t273*(-1.*t264*t831 - 1.*t225*t836) + 0.5*t273*t277*t278*(2.*t175*t248*t838 + 2.*t202*t252*t838);
  p_output1[493]=t340*t468*(t225*(-1.*t102*t300 - 1.*t106*t304) + t264*t825) + t312*t340*(t225*(-1.*t102*t326 - 1.*t106*t329) + t264*t828);
  p_output1[494]=0;
  p_output1[495]=0;
  p_output1[496]=0;
  p_output1[497]=0;
  p_output1[498]=0;
  p_output1[499]=0;
  p_output1[500]=0;
  p_output1[501]=0;
  p_output1[502]=0;
  p_output1[503]=0;
  p_output1[504]=0;
  p_output1[505]=0;
  p_output1[506]=0;
  p_output1[507]=0;
  p_output1[508]=0;
  p_output1[509]=0;
  p_output1[510]=0;
  p_output1[511]=0;
  p_output1[512]=0;
  p_output1[513]=0;
  p_output1[514]=t175*t233*t255*t867 + t202*t248*t255*t867;
  p_output1[515]=(t224 + t225*t229)*t267*t273 + 0.5*t273*t277*t278*(2.*t175*t248*t867 + 2.*t202*t252*t867);
  p_output1[516]=t312*(-1.*t203*t331 - 1.*t225*t335)*t340 + (-1.*t203*t306 - 1.*t225*t310)*t340*t468;
  p_output1[517]=0;
  p_output1[518]=0;
  p_output1[519]=0;
  p_output1[520]=0;
  p_output1[521]=0;
  p_output1[522]=0;
  p_output1[523]=0;
  p_output1[524]=0;
  p_output1[525]=0;
  p_output1[526]=0;
  p_output1[527]=0;
  p_output1[528]=0;
  p_output1[529]=0;
  p_output1[530]=0;
  p_output1[531]=0;
  p_output1[532]=0;
  p_output1[533]=0;
  p_output1[534]=0;
  p_output1[535]=0;
  p_output1[536]=0;
  p_output1[537]=Power(t233,2)*t255 + t249*t255;
  p_output1[538]=0.5*(2.*t233*t248 + 2.*t248*t252)*t273*t277*t278;
  p_output1[539]=0;
  p_output1[540]=0;
  p_output1[541]=0;
  p_output1[542]=0;
  p_output1[543]=0;
  p_output1[544]=0;
  p_output1[545]=0;
  p_output1[546]=0;
  p_output1[547]=0;
  p_output1[548]=0;
  p_output1[549]=0;
  p_output1[550]=0;
  p_output1[551]=0;
  p_output1[552]=0;
  p_output1[553]=0;
  p_output1[554]=0;
  p_output1[555]=0;
  p_output1[556]=0;
  p_output1[557]=0;
  p_output1[558]=0;
  p_output1[559]=0;
  p_output1[560]=0;
  p_output1[561]=0;
  p_output1[562]=0;
  p_output1[563]=0;
  p_output1[564]=0;
  p_output1[565]=0;
  p_output1[566]=0;
  p_output1[567]=0;
  p_output1[568]=0;
  p_output1[569]=0;
  p_output1[570]=0;
  p_output1[571]=0;
  p_output1[572]=0;
  p_output1[573]=0;
  p_output1[574]=0;
  p_output1[575]=0;
  p_output1[576]=0;
  p_output1[577]=0;
  p_output1[578]=0;
  p_output1[579]=0;
  p_output1[580]=0;
  p_output1[581]=0;
  p_output1[582]=0;
  p_output1[583]=0;
  p_output1[584]=0;
  p_output1[585]=0;
  p_output1[586]=0;
  p_output1[587]=0;
  p_output1[588]=0;
  p_output1[589]=0;
  p_output1[590]=0;
  p_output1[591]=0;
  p_output1[592]=0;
  p_output1[593]=0;
  p_output1[594]=0;
  p_output1[595]=0;
  p_output1[596]=0;
  p_output1[597]=0;
  p_output1[598]=0;
  p_output1[599]=0;
  p_output1[600]=0;
  p_output1[601]=0;
  p_output1[602]=0;
  p_output1[603]=0;
  p_output1[604]=0;
  p_output1[605]=0;
  p_output1[606]=0;
  p_output1[607]=0;
  p_output1[608]=0;
  p_output1[609]=0;
  p_output1[610]=0;
  p_output1[611]=0;
  p_output1[612]=0;
  p_output1[613]=0;
  p_output1[614]=0;
  p_output1[615]=0;
  p_output1[616]=0;
  p_output1[617]=0;
  p_output1[618]=0;
  p_output1[619]=0;
  p_output1[620]=0;
  p_output1[621]=0;
  p_output1[622]=0;
  p_output1[623]=0;
  p_output1[624]=0;
  p_output1[625]=0;
  p_output1[626]=0;
  p_output1[627]=0;
  p_output1[628]=0;
  p_output1[629]=0;
  p_output1[630]=0;
  p_output1[631]=0;
  p_output1[632]=0;
  p_output1[633]=0;
  p_output1[634]=0;
  p_output1[635]=0;
  p_output1[636]=0;
  p_output1[637]=0;
  p_output1[638]=0;
  p_output1[639]=0;
  p_output1[640]=0;
  p_output1[641]=0;
  p_output1[642]=0;
  p_output1[643]=0;
  p_output1[644]=0;
  p_output1[645]=0;
  p_output1[646]=0;
  p_output1[647]=0;
  p_output1[648]=0;
  p_output1[649]=0;
  p_output1[650]=0;
  p_output1[651]=0;
  p_output1[652]=0;
  p_output1[653]=0;
  p_output1[654]=0;
  p_output1[655]=0;
  p_output1[656]=0;
  p_output1[657]=0;
  p_output1[658]=0;
  p_output1[659]=0;
  p_output1[660]=0;
  p_output1[661]=0;
  p_output1[662]=0;
  p_output1[663]=0;
  p_output1[664]=0;
  p_output1[665]=0;
  p_output1[666]=0;
  p_output1[667]=0;
  p_output1[668]=0;
  p_output1[669]=0;
  p_output1[670]=0;
  p_output1[671]=0;
  p_output1[672]=0;
  p_output1[673]=0;
  p_output1[674]=0;
  p_output1[675]=0;
  p_output1[676]=0;
  p_output1[677]=0;
  p_output1[678]=0;
  p_output1[679]=0;
  p_output1[680]=0;
  p_output1[681]=0;
  p_output1[682]=0;
  p_output1[683]=0;
  p_output1[684]=0;
  p_output1[685]=0;
  p_output1[686]=0;
  p_output1[687]=0;
  p_output1[688]=0;
  p_output1[689]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 30 && ncols == 1) && 
      !(mrows == 1 && ncols == 30))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 23, (mwSize) 30, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "j_H_right_foot_stance_wrt_q1_func.hh"

namespace SymFunction
{

void j_H_right_foot_stance_wrt_q1_func_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
