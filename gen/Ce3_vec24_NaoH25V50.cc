/*
 * Automatically Generated from Mathematica.
 * Tue 10 Jul 2018 11:14:29 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;


#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t3863;
  double t4166;
  double t3862;
  double t3869;
  double t4660;
  double t5245;
  double t4116;
  double t4661;
  double t4662;
  double t3666;
  double t5250;
  double t5252;
  double t5302;
  double t5489;
  double t5512;
  double t5513;
  double t5657;
  double t5535;
  double t5536;
  double t5644;
  double t5527;
  double t5689;
  double t5140;
  double t5328;
  double t5394;
  double t3233;
  double t5656;
  double t5690;
  double t5835;
  double t6123;
  double t6185;
  double t6206;
  double t5430;
  double t5515;
  double t5525;
  double t2730;
  double t6248;
  double t6260;
  double t6263;
  double t6264;
  double t6272;
  double t6281;
  double t5871;
  double t6212;
  double t6235;
  double t6285;
  double t766;
  double t7574;
  double t7580;
  double t7581;
  double t7586;
  double t7587;
  double t7609;
  double t7635;
  double t7636;
  double t7639;
  double t7585;
  double t7610;
  double t7611;
  double t7629;
  double t7640;
  double t7657;
  double t7659;
  double t7660;
  double t7661;
  double t6362;
  double t6399;
  double t7619;
  double t6626;
  double t7670;
  double t7671;
  double t7783;
  double t7800;
  double t7658;
  double t7662;
  double t7663;
  double t6236;
  double t6286;
  double t6319;
  double t6406;
  double t6513;
  double t6567;
  double t6625;
  double t6991;
  double t7454;
  double t7475;
  double t7496;
  double t7515;
  double t7669;
  double t7832;
  double t7834;
  double t7845;
  double t7877;
  double t7878;
  double t7881;
  double t7882;
  double t7887;
  double t7888;
  double t7913;
  double t8115;
  double t9088;
  double t9132;
  double t9154;
  double t9204;
  double t9218;
  double t9265;
  double t9725;
  double t9761;
  double t9834;
  double t10212;
  double t10215;
  double t10255;
  double t10396;
  double t10509;
  double t10652;
  double t9972;
  double t10352;
  double t10385;
  double t10393;
  double t10658;
  double t10670;
  double t10676;
  double t10691;
  double t10694;
  double t10738;
  double t10750;
  double t10755;
  double t10773;
  double t10775;
  double t10779;
  double t10827;
  double t10829;
  double t10830;
  double t10877;
  double t10882;
  double t10949;
  double t10956;
  double t11086;
  double t11087;
  double t11162;
  double t11297;
  double t10922;
  double t10923;
  double t10926;
  double t10927;
  double t11468;
  double t11554;
  double t11744;
  double t11785;
  double t11786;
  double t11812;
  double t10907;
  double t11715;
  double t12001;
  double t12002;
  double t12018;
  double t12180;
  double t12216;
  double t12254;
  double t12275;
  double t12283;
  double t12395;
  double t12422;
  double t12431;
  double t12677;
  double t12935;
  double t12937;
  double t13027;
  double t13089;
  double t13311;
  double t13317;
  double t13406;
  double t13436;
  double t10902;
  double t12017;
  double t12322;
  double t12384;
  double t12429;
  double t12430;
  double t13117;
  double t13471;
  double t13475;
  double t13493;
  double t13527;
  double t13537;
  double t13538;
  double t13568;
  double t10900;
  double t12387;
  double t13485;
  double t13573;
  double t13578;
  double t13590;
  double t13597;
  double t13645;
  double t13784;
  double t13795;
  double t13809;
  double t13828;
  double t13861;
  double t16497;
  double t16802;
  double t16918;
  double t17285;
  double t17292;
  double t17488;
  double t17549;
  double t17564;
  double t17619;
  double t17084;
  double t17088;
  double t17117;
  double t10893;
  double t10896;
  double t10897;
  double t13589;
  double t17037;
  double t17071;
  double t17715;
  double t17718;
  double t17721;
  double t17140;
  double t17221;
  double t17284;
  double t17651;
  double t17657;
  double t17676;
  double t18136;
  double t18170;
  double t18212;
  double t18516;
  double t18518;
  double t18747;
  double t18789;
  double t18827;
  double t18861;
  double t17734;
  double t19500;
  double t19530;
  double t19535;
  double t18010;
  double t19442;
  double t19443;
  double t19484;
  double t18284;
  double t18363;
  double t19499;
  double t19540;
  double t17740;
  double t17751;
  double t17799;
  double t19723;
  double t19740;
  double t18018;
  double t18021;
  double t18024;
  double t20121;
  double t20135;
  double t18285;
  double t18290;
  double t18302;
  double t20397;
  double t20402;
  double t18374;
  double t18390;
  double t18427;
  double t21284;
  double t21285;
  double t21289;
  double t21310;
  double t21432;
  double t21520;
  double t21521;
  double t21523;
  double t21524;
  double t19695;
  double t21312;
  double t21326;
  double t21341;
  double t21358;
  double t21390;
  double t21394;
  double t21404;
  double t21406;
  double t21412;
  double t19968;
  double t21751;
  double t21755;
  double t21773;
  double t21789;
  double t20256;
  double t21990;
  double t21991;
  double t21993;
  double t21998;
  double t20458;
  double t21915;
  double t21916;
  double t21931;
  double t21940;
  double t22091;
  double t22092;
  double t22097;
  double t22100;
  double t22210;
  double t22218;
  double t22219;
  double t22237;
  double t22238;
  double t22239;
  double t22249;
  double t22252;
  double t22253;
  double t22260;
  double t22261;
  double t22266;
  double t22284;
  double t22285;
  double t22289;
  double t22297;
  double t22311;
  double t22312;
  double t21375;
  double t21569;
  double t22397;
  double t22416;
  double t22419;
  double t19701;
  double t19703;
  double t21898;
  double t21942;
  double t22459;
  double t22465;
  double t22473;
  double t22444;
  double t22445;
  double t22447;
  double t19980;
  double t19984;
  double t22010;
  double t22017;
  double t22439;
  double t22440;
  double t22442;
  double t20257;
  double t20278;
  double t22089;
  double t22115;
  double t20515;
  double t20525;
  double t22209;
  double t22220;
  double t22225;
  double t22235;
  double t22240;
  double t22242;
  double t22458;
  double t22482;
  double t22793;
  double t22796;
  double t22801;
  double t22516;
  double t22521;
  double t22850;
  double t22885;
  double t22898;
  double t22903;
  double t22907;
  double t22914;
  double t22585;
  double t22618;
  double t22825;
  double t22841;
  double t22846;
  double t22749;
  double t22758;
  double t23489;
  double t23491;
  double t23494;
  double t23495;
  double t23506;
  double t23508;
  double t23518;
  double t23415;
  double t23416;
  double t21827;
  double t21844;
  double t21866;
  double t23420;
  double t23447;
  double t23465;
  double t23466;
  double t23468;
  double t21973;
  double t21982;
  double t21983;
  double t23555;
  double t23557;
  double t23558;
  double t23493;
  double t23521;
  double t23524;
  double t23571;
  double t23659;
  double t23709;
  double t22057;
  double t22060;
  double t22061;
  double t24004;
  double t24032;
  double t24035;
  double t24036;
  double t24040;
  double t23725;
  double t23738;
  double t23748;
  double t23749;
  double t22139;
  double t22157;
  double t22188;
  double t24651;
  double t24670;
  double t24700;
  double t24703;
  double t24704;
  double t24602;
  double t24619;
  double t24638;
  double t24642;
  double t24783;
  double t24786;
  double t24819;
  double t24870;
  double t24888;
  double t24902;
  double t24935;
  double t24937;
  double t24938;
  double t25154;
  double t25156;
  double t25159;
  double t25160;
  double t25127;
  double t25140;
  double t25142;
  double t25144;
  double t25147;
  double t25165;
  double t25166;
  double t25182;
  double t25183;
  double t25213;
  double t25233;
  double t25248;
  double t25249;
  double t25252;
  double t23968;
  double t23969;
  double t23901;
  double t23902;
  double t24192;
  double t24193;
  double t24179;
  double t24186;
  double t25335;
  double t25336;
  double t25338;
  double t25374;
  double t25377;
  double t25379;
  double t25394;
  double t25395;
  double t25403;
  double t25412;
  double t25418;
  double t25426;
  double t25461;
  double t25463;
  double t25464;
  double t25468;
  double t25471;
  double t25473;
  double t23564;
  double t23724;
  double t25520;
  double t25541;
  double t25565;
  double t23864;
  double t23912;
  double t25607;
  double t25618;
  double t25638;
  double t25640;
  double t25643;
  double t25644;
  double t24155;
  double t24158;
  double t25654;
  double t25656;
  double t25657;
  double t24175;
  double t24190;
  double t25331;
  double t25340;
  double t25343;
  double t25362;
  double t25380;
  double t25387;
  double t25648;
  double t25661;
  double t25945;
  double t25947;
  double t26012;
  double t25685;
  double t25690;
  double t26049;
  double t26053;
  double t26056;
  double t26059;
  double t26061;
  double t26062;
  double t25791;
  double t25823;
  double t26090;
  double t26099;
  double t26110;
  double t25892;
  double t25906;
  double t26658;
  double t26661;
  double t26671;
  double t26738;
  double t26742;
  double t26748;
  double t26622;
  double t26626;
  double t26637;
  double t26803;
  double t26823;
  double t26861;
  double t27356;
  double t27357;
  double t27391;
  double t27705;
  double t27722;
  double t27723;
  double t27751;
  double t27866;
  double t27585;
  double t27596;
  double t27615;
  double t27685;
  double t27896;
  double t27902;
  double t27904;
  double t27873;
  double t27876;
  double t27877;
  double t27994;
  double t27998;
  double t28013;
  double t28014;
  double t27801;
  double t27802;
  double t27804;
  double t27817;
  double t28019;
  double t28024;
  double t28026;
  double t28061;
  double t28077;
  double t28079;
  double t28097;
  double t26662;
  double t26788;
  double t26893;
  double t26898;
  double t28769;
  double t28774;
  double t28778;
  double t28779;
  double t28780;
  double t28789;
  double t28790;
  double t28794;
  double t28795;
  double t28797;
  double t28798;
  double t28829;
  double t27268;
  double t27315;
  double t27326;
  double t27414;
  double t29035;
  double t29036;
  double t29077;
  double t29095;
  double t29129;
  double t29144;
  double t29171;
  double t29174;
  double t29225;
  double t29241;
  double t28195;
  double t28196;
  double t28201;
  double t28202;
  double t28159;
  double t28160;
  double t28164;
  double t28462;
  double t28471;
  double t28472;
  double t28473;
  double t28401;
  double t28406;
  double t28407;
  double t29443;
  double t29447;
  double t29450;
  double t29673;
  double t29677;
  double t29680;
  double t29695;
  double t29712;
  double t29771;
  double t29781;
  double t29807;
  double t29808;
  double t29829;
  double t29837;
  double t29845;
  double t29891;
  double t29892;
  double t29895;
  double t27940;
  double t28018;
  double t30304;
  double t30307;
  double t30341;
  double t28156;
  double t28208;
  double t30386;
  double t30391;
  double t30392;
  double t30402;
  double t30534;
  double t30566;
  double t28326;
  double t28391;
  double t30743;
  double t30745;
  double t30750;
  double t28435;
  double t28483;
  double t29442;
  double t29565;
  double t29665;
  double t29672;
  double t29682;
  double t29683;
  double t30731;
  double t30807;
  double t31241;
  double t31242;
  double t31246;
  double t30895;
  double t30901;
  double t31361;
  double t31366;
  double t31385;
  double t31739;
  double t31804;
  double t31837;
  double t31049;
  double t31098;
  double t31977;
  double t31999;
  double t32022;
  double t31158;
  double t31191;
  double t35292;
  double t35734;
  double t35804;
  double t35815;
  double t35853;
  double t35988;
  double t36010;
  double t36254;
  double t36501;
  double t37156;
  double t37202;
  double t37212;
  double t37277;
  double t37284;
  double t26599;
  double t26617;
  double t36989;
  double t36991;
  double t38201;
  double t38323;
  double t38535;
  double t38598;
  double t38907;
  double t39457;
  double t26926;
  double t26934;
  double t26939;
  double t37311;
  double t37351;
  double t37363;
  double t27239;
  double t27243;
  double t37365;
  double t37372;
  double t37879;
  double t37991;
  double t27464;
  double t27465;
  double t27487;
  double t39592;
  double t39593;
  double t41312;
  double t41510;
  double t44633;
  double t44646;
  double t44813;
  double t44818;
  double t49765;
  double t43295;
  double t43392;
  double t43508;
  double t43514;
  double t50048;
  double t50226;
  double t50233;
  double t49766;
  double t49843;
  double t49874;
  double t50299;
  double t50300;
  double t50301;
  double t50316;
  double t45026;
  double t45114;
  double t45735;
  double t46166;
  double t50335;
  double t50402;
  double t50403;
  double t50431;
  double t50455;
  double t50456;
  double t50459;
  double t38079;
  double t38571;
  double t39613;
  double t39678;
  double t51000;
  double t51009;
  double t51022;
  double t51026;
  double t51042;
  double t51052;
  double t51061;
  double t51066;
  double t51074;
  double t51078;
  double t40905;
  double t40906;
  double t41273;
  double t41804;
  double t51122;
  double t51123;
  double t51124;
  double t51125;
  double t51130;
  double t51132;
  double t51133;
  double t51134;
  double t51135;
  double t51138;
  double t50518;
  double t50570;
  double t50593;
  double t50596;
  double t50514;
  double t50515;
  double t50516;
  double t50728;
  double t50729;
  double t50742;
  double t50743;
  double t50720;
  double t50722;
  double t50723;
  double t51194;
  double t51198;
  double t51217;
  double t51236;
  double t51238;
  double t51239;
  double t51249;
  double t51251;
  double t51252;
  double t51254;
  double t51255;
  double t51257;
  double t51272;
  double t51273;
  double t51275;
  double t51278;
  double t51279;
  double t51280;
  double t50287;
  double t50330;
  double t51304;
  double t51306;
  double t51307;
  double t50512;
  double t50599;
  double t51324;
  double t51333;
  double t51334;
  double t51342;
  double t51345;
  double t51348;
  double t50644;
  double t50653;
  double t51352;
  double t51358;
  double t51363;
  double t50726;
  double t50940;
  double t51190;
  double t51222;
  double t51226;
  double t51235;
  double t51242;
  double t51243;
  double t51351;
  double t51368;
  double t51412;
  double t51413;
  double t51414;
  double t51380;
  double t51382;
  double t51428;
  double t51429;
  double t51430;
  double t51432;
  double t51434;
  double t51435;
  double t51396;
  double t51398;
  double t51440;
  double t51441;
  double t51446;
  double t51402;
  double t51404;
  double t51525;
  double t51527;
  double t51529;
  double t51530;
  double t51531;
  double t51535;
  double t35281;
  double t35827;
  double t36060;
  double t51564;
  double t51565;
  double t51566;
  double t51569;
  double t51576;
  double t51577;
  double t36713;
  double t36834;
  double t36917;
  double t37000;
  double t37310;
  double t37862;
  double t37863;
  double t38036;
  double t51604;
  double t51609;
  double t51614;
  double t51616;
  double t51617;
  double t51618;
  double t39600;
  double t40031;
  double t40088;
  double t40423;
  double t40545;
  double t40744;
  double t40747;
  double t40848;
  double t40866;
  double t40890;
  double t41756;
  double t41272;
  double t44574;
  double t44819;
  double t49762;
  double t49764;
  double t51668;
  double t50416;
  double t50463;
  double t50517;
  double t50597;
  double t51692;
  double t51698;
  double t51699;
  double t51670;
  double t51671;
  double t51672;
  double t51709;
  double t51710;
  double t51711;
  double t51712;
  double t50606;
  double t50641;
  double t50659;
  double t50664;
  double t50725;
  double t50745;
  double t50958;
  double t50966;
  double t50968;
  double t50971;
  double t50975;
  double t50976;
  double t50977;
  double t50978;
  double t50983;
  double t50990;
  double t50991;
  double t50994;
  double t50996;
  double t50997;
  double t50999;
  double t51615;
  double t51623;
  double t51088;
  double t51099;
  double t51788;
  double t51804;
  double t51805;
  double t51809;
  double t51810;
  double t51811;
  double t51102;
  double t51120;
  double t51121;
  double t51638;
  double t51653;
  double t51140;
  double t51150;
  double t51868;
  double t51869;
  double t51870;
  double t51879;
  double t51880;
  double t51881;
  double t51157;
  double t51233;
  double t51246;
  double t51247;
  double t51248;
  double t51253;
  double t51261;
  double t51262;
  double t51264;
  double t51277;
  double t51281;
  double t51282;
  double t51283;
  double t51284;
  double t51288;
  double t51293;
  double t51294;
  double t51295;
  double t51297;
  double t51298;
  double t51299;
  double t51300;
  double t51301;
  double t51302;
  double t51303;
  double t51308;
  double t51309;
  double t51310;
  double t51317;
  double t51708;
  double t51367;
  double t51729;
  double t51378;
  double t51929;
  double t51931;
  double t51932;
  double t51935;
  double t51936;
  double t51937;
  double t51385;
  double t51394;
  double t51762;
  double t51397;
  double t51768;
  double t51401;
  double t51407;
  double t51415;
  double t51424;
  double t51425;
  double t51426;
  double t51939;
  double t51437;
  double t51450;
  double t51949;
  double t51457;
  double t51458;
  double t52020;
  double t52021;
  double t52022;
  double t52025;
  double t52027;
  double t52105;
  double t51464;
  double t51481;
  double t51975;
  double t51489;
  double t51490;
  double t52011;
  double t51494;
  double t51495;
  double t51502;
  double t52286;
  double t55522;
  double t56230;
  double t56239;
  double t56250;
  double t56266;
  double t56300;
  double t56386;
  double t56398;
  double t56423;
  double t56733;
  double t56743;
  double t56748;
  double t56838;
  double t56850;
  double t56856;
  double t56872;
  double t56877;
  double t56882;
  double t56788;
  double t56789;
  double t56968;
  double t56969;
  double t56982;
  double t57094;
  double t57095;
  double t57096;
  double t57176;
  double t57181;
  double t57182;
  double t57183;
  double t57186;
  double t57187;
  double t57188;
  double t57192;
  double t57193;
  double t57194;
  double t57184;
  double t57189;
  double t57190;
  double t57196;
  double t57206;
  double t57224;
  double t57243;
  double t57109;
  double t57110;
  double t57111;
  double t57112;
  double t57113;
  double t57114;
  double t57115;
  double t57149;
  double t57150;
  double t56883;
  double t56931;
  double t57006;
  double t57453;
  double t57454;
  double t57455;
  double t57457;
  double t57458;
  double t57492;
  double t57496;
  double t57497;
  double t57041;
  double t57092;
  double t57099;
  double t57509;
  double t57510;
  double t57511;
  double t57515;
  double t57516;
  double t57517;
  double t57518;
  double t57519;
  double t57397;
  double t57401;
  double t57432;
  double t57433;
  double t57379;
  double t57386;
  double t57387;
  double t57542;
  double t57543;
  double t57547;
  double t8439;
  double t8532;
  double t8535;
  double t57562;
  double t57563;
  double t57564;
  double t57566;
  double t57567;
  double t57568;
  double t57191;
  double t57264;
  double t57310;
  double t57691;
  double t57692;
  double t57693;
  double t57697;
  double t57698;
  double t57706;
  double t57344;
  double t57364;
  double t57389;
  double t57541;
  double t57548;
  double t57554;
  double t57711;
  double t57720;
  double t57724;
  double t57798;
  double t57799;
  double t57807;
  double t57810;
  double t57811;
  double t57812;
  double t57755;
  double t57775;
  double t57780;
  t3863 = Cos(var1[23]);
  t4166 = Cos(var1[21]);
  t3862 = Cos(var1[22]);
  t3869 = Sin(var1[21]);
  t4660 = Sin(var1[22]);
  t5245 = Sin(var1[20]);
  t4116 = t3862*t3863*t3869;
  t4661 = t4166*t3863*t4660;
  t4662 = t4116 + t4661;
  t3666 = Cos(var1[20]);
  t5250 = t4166*t3862*t3863;
  t5252 = -1.*t3863*t3869*t4660;
  t5302 = t5250 + t5252;
  t5489 = Cos(var1[18]);
  t5512 = -1.*t5489;
  t5513 = 1. + t5512;
  t5657 = Cos(var1[19]);
  t5535 = -1.*t5245*t4662;
  t5536 = t3666*t5302;
  t5644 = t5535 + t5536;
  t5527 = Sin(var1[19]);
  t5689 = Sin(var1[23]);
  t5140 = t3666*t4662;
  t5328 = t5245*t5302;
  t5394 = t5140 + t5328;
  t3233 = Sin(var1[18]);
  t5656 = -1.*t5527*t5644;
  t5690 = -1.*t5657*t5689;
  t5835 = t5656 + t5690;
  t6123 = t5657*t5644;
  t6185 = -1.*t5527*t5689;
  t6206 = t6123 + t6185;
  t5430 = -0.707106*t3233*t5394;
  t5515 = -0.499998895236*t5513;
  t5525 = 1. + t5515;
  t2730 = Cos(var1[5]);
  t6248 = -0.999997790472*t5513;
  t6260 = 1. + t6248;
  t6263 = t6260*t5394;
  t6264 = 0.707106*t3233*t5835;
  t6272 = 0.707106*t3233*t6206;
  t6281 = t6263 + t6264 + t6272;
  t5871 = t5525*t5835;
  t6212 = -0.499998895236*t5513*t6206;
  t6235 = t5430 + t5871 + t6212;
  t6285 = Sin(var1[5]);
  t766 = Sin(var1[3]);
  t7574 = t3862*t3869*t5689;
  t7580 = t4166*t4660*t5689;
  t7581 = t7574 + t7580;
  t7586 = t4166*t3862*t5689;
  t7587 = -1.*t3869*t4660*t5689;
  t7609 = t7586 + t7587;
  t7635 = -1.*t5245*t7581;
  t7636 = t3666*t7609;
  t7639 = t7635 + t7636;
  t7585 = t3666*t7581;
  t7610 = t5245*t7609;
  t7611 = t7585 + t7610;
  t7629 = t3863*t5527;
  t7640 = t5657*t7639;
  t7657 = t7629 + t7640;
  t7659 = t5657*t3863;
  t7660 = -1.*t5527*t7639;
  t7661 = t7659 + t7660;
  t6362 = Cos(var1[3]);
  t6399 = Cos(var1[4]);
  t7619 = -0.707106*t3233*t7611;
  t6626 = Sin(var1[4]);
  t7670 = t6260*t7611;
  t7671 = 0.707106*t3233*t7657;
  t7783 = 0.707106*t3233*t7661;
  t7800 = t7670 + t7671 + t7783;
  t7658 = -0.499998895236*t5513*t7657;
  t7662 = t5525*t7661;
  t7663 = t7619 + t7658 + t7662;
  t6236 = t2730*t6235;
  t6286 = t6281*t6285;
  t6319 = t6236 + t6286;
  t6406 = -0.499998895236*t5513*t5835;
  t6513 = t5525*t6206;
  t6567 = t5430 + t6406 + t6513;
  t6625 = t6399*t6567;
  t6991 = t2730*t6281;
  t7454 = -1.*t6235*t6285;
  t7475 = t6991 + t7454;
  t7496 = -1.*t6626*t7475;
  t7515 = t6625 + t7496;
  t7669 = t2730*t7663;
  t7832 = t7800*t6285;
  t7834 = t7669 + t7832;
  t7845 = t5525*t7657;
  t7877 = -0.499998895236*t5513*t7661;
  t7878 = t7619 + t7845 + t7877;
  t7881 = t6399*t7878;
  t7882 = t2730*t7800;
  t7887 = -1.*t7663*t6285;
  t7888 = t7882 + t7887;
  t7913 = -1.*t6626*t7888;
  t8115 = t7881 + t7913;
  t9088 = -1.*t6567*t6626;
  t9132 = -1.*t6399*t7475;
  t9154 = t9088 + t9132;
  t9204 = -1.*t7878*t6626;
  t9218 = -1.*t6399*t7888;
  t9265 = t9204 + t9218;
  t9725 = -1.*t3862*t3869;
  t9761 = -1.*t4166*t4660;
  t9834 = t9725 + t9761;
  t10212 = t4166*t3862;
  t10215 = -1.*t3869*t4660;
  t10255 = t10212 + t10215;
  t10396 = t3666*t9834;
  t10509 = -1.*t5245*t10255;
  t10652 = t10396 + t10509;
  t9972 = t5245*t9834;
  t10352 = t3666*t10255;
  t10385 = t9972 + t10352;
  t10393 = -0.707106*t3233*t10385;
  t10658 = t5525*t5657*t10652;
  t10670 = 0.499998895236*t5513*t5527*t10652;
  t10676 = t10393 + t10658 + t10670;
  t10691 = t6399*t10676;
  t10694 = t6260*t10385;
  t10738 = 0.707106*t5657*t3233*t10652;
  t10750 = -0.707106*t3233*t5527*t10652;
  t10755 = t10694 + t10738 + t10750;
  t10773 = t2730*t10755;
  t10775 = -0.499998895236*t5513*t5657*t10652;
  t10779 = -1.*t5525*t5527*t10652;
  t10827 = t10393 + t10775 + t10779;
  t10829 = -1.*t10827*t6285;
  t10830 = t10773 + t10829;
  t10877 = -1.*t6626*t10830;
  t10882 = t10691 + t10877;
  t10949 = -1.*t3863;
  t10956 = 1. + t10949;
  t11086 = -0.2879*t10956;
  t11087 = -0.32029*t3863;
  t11162 = 0.0033*t5689;
  t11297 = t11086 + t11087 + t11162;
  t10922 = -1.*t3862;
  t10923 = 1. + t10922;
  t10926 = -0.2879*t10923;
  t10927 = -0.02542*t4660;
  t11468 = t3862*t11297;
  t11554 = t10926 + t10927 + t11468;
  t11744 = 0.02542*t3862;
  t11785 = 0.2879*t4660;
  t11786 = t4660*t11297;
  t11812 = t11744 + t11785 + t11786;
  t10907 = 0.185*t3869;
  t11715 = t3869*t11554;
  t12001 = t4166*t11812;
  t12002 = t10907 + t11715 + t12001;
  t12018 = -1.*t4166;
  t12180 = 1. + t12018;
  t12216 = -0.185*t12180;
  t12254 = t4166*t11554;
  t12275 = -1.*t3869*t11812;
  t12283 = t12216 + t12254 + t12275;
  t12395 = -1.*t5657;
  t12422 = 1. + t12395;
  t12431 = -1.*t3666;
  t12677 = 1. + t12431;
  t12935 = -0.085*t12677;
  t12937 = -1.*t5245*t12002;
  t13027 = t3666*t12283;
  t13089 = t12935 + t12937 + t13027;
  t13311 = 0.05*t10956;
  t13317 = 0.0533*t3863;
  t13406 = 0.03239*t5689;
  t13436 = t13311 + t13317 + t13406;
  t10902 = 0.085*t5245;
  t12017 = t3666*t12002;
  t12322 = t5245*t12283;
  t12384 = t10902 + t12017 + t12322;
  t12429 = 0.05*t12422;
  t12430 = -0.085*t5527;
  t13117 = -1.*t5527*t13089;
  t13471 = t5657*t13436;
  t13475 = t12429 + t12430 + t13117 + t13471;
  t13493 = -0.085*t12422;
  t13527 = -0.05*t5527;
  t13537 = t5657*t13089;
  t13538 = t5527*t13436;
  t13568 = t13493 + t13527 + t13537 + t13538;
  t10900 = -0.0175001277268923*t5513;
  t12387 = -0.707106*t3233*t12384;
  t13485 = -0.499998895236*t5513*t13475;
  t13573 = t5525*t13568;
  t13578 = t10900 + t12387 + t13485 + t13573;
  t13590 = 0.0247489453163915*t3233;
  t13597 = t6260*t12384;
  t13645 = 0.707106*t3233*t13475;
  t13784 = 0.707106*t3233*t13568;
  t13795 = t13590 + t13597 + t13645 + t13784;
  t13809 = t2730*t13795;
  t13828 = t5525*t13475;
  t13861 = -0.499998895236*t5513*t13568;
  t16497 = t10900 + t12387 + t13828 + t13861;
  t16802 = -1.*t16497*t6285;
  t16918 = t13809 + t16802;
  t17285 = t6399*t13578;
  t17292 = -1.*t6626*t16918;
  t17488 = t17285 + t17292;
  t17549 = t10676*t6626;
  t17564 = t6399*t10830;
  t17619 = t17549 + t17564;
  t17084 = t13578*t6626;
  t17088 = t6399*t16918;
  t17117 = t17084 + t17088;
  t10893 = t6567*t6626;
  t10896 = t6399*t7475;
  t10897 = t10893 + t10896;
  t13589 = -1.*t13578*t6626;
  t17037 = -1.*t6399*t16918;
  t17071 = t13589 + t17037;
  t17715 = t2730*t16497;
  t17718 = t13795*t6285;
  t17721 = t17715 + t17718;
  t17140 = -1.*t10676*t6626;
  t17221 = -1.*t6399*t10830;
  t17284 = t17140 + t17221;
  t17651 = t2730*t10827;
  t17657 = t10755*t6285;
  t17676 = t17651 + t17657;
  t18136 = t7878*t6626;
  t18170 = t6399*t7888;
  t18212 = t18136 + t18170;
  t18516 = -1.*t2730*t6235;
  t18518 = -1.*t6281*t6285;
  t18747 = t18516 + t18518;
  t18789 = -1.*t2730*t7663;
  t18827 = -1.*t7800*t6285;
  t18861 = t18789 + t18827;
  t17734 = t17676*t17721;
  t19500 = -1.*t2730*t16497;
  t19530 = -1.*t13795*t6285;
  t19535 = t19500 + t19530;
  t18010 = -1.*t17721*t6319;
  t19442 = -1.*t2730*t10827;
  t19443 = -1.*t10755*t6285;
  t19484 = t19442 + t19443;
  t18284 = -1.*t17676*t17721;
  t18363 = t17721*t7834;
  t19499 = t17676*t16918;
  t19540 = t10830*t17721;
  t17740 = t17619*t17117;
  t17751 = t10882*t17488;
  t17799 = t17734 + t17740 + t17751;
  t19723 = -1.*t17721*t7475;
  t19740 = -1.*t16918*t6319;
  t18018 = -1.*t17117*t10897;
  t18021 = -1.*t17488*t7515;
  t18024 = t18010 + t18018 + t18021;
  t20121 = -1.*t17676*t16918;
  t20135 = -1.*t10830*t17721;
  t18285 = -1.*t17619*t17117;
  t18290 = -1.*t10882*t17488;
  t18302 = t18284 + t18285 + t18290;
  t20397 = t17721*t7888;
  t20402 = t16918*t7834;
  t18374 = t17117*t18212;
  t18390 = t17488*t8115;
  t18427 = t18363 + t18374 + t18390;
  t21284 = -0.707106*t5489*t10385;
  t21285 = -0.499998895236*t5657*t3233*t10652;
  t21289 = 0.499998895236*t3233*t5527*t10652;
  t21310 = t21284 + t21285 + t21289;
  t21432 = -0.0175001277268923*t3233;
  t21520 = -0.707106*t5489*t12384;
  t21521 = -0.499998895236*t3233*t13475;
  t21523 = -0.499998895236*t3233*t13568;
  t21524 = t21432 + t21520 + t21521 + t21523;
  t19695 = t10676*t13578;
  t21312 = -0.707106*t5489*t5394;
  t21326 = -0.499998895236*t3233*t5835;
  t21341 = -0.499998895236*t3233*t6206;
  t21358 = t21312 + t21326 + t21341;
  t21390 = 0.0247489453163915*t5489;
  t21394 = -0.999997790472*t3233*t12384;
  t21404 = 0.707106*t5489*t13475;
  t21406 = 0.707106*t5489*t13568;
  t21412 = t21390 + t21394 + t21404 + t21406;
  t19968 = -1.*t13578*t6567;
  t21751 = -0.999997790472*t3233*t10385;
  t21755 = 0.707106*t5489*t5657*t10652;
  t21773 = -0.707106*t5489*t5527*t10652;
  t21789 = t21751 + t21755 + t21773;
  t20256 = -1.*t10676*t13578;
  t21990 = -0.707106*t5489*t7611;
  t21991 = -0.499998895236*t3233*t7657;
  t21993 = -0.499998895236*t3233*t7661;
  t21998 = t21990 + t21991 + t21993;
  t20458 = t13578*t7878;
  t21915 = -0.999997790472*t3233*t5394;
  t21916 = 0.707106*t5489*t5835;
  t21931 = 0.707106*t5489*t6206;
  t21940 = t21915 + t21916 + t21931;
  t22091 = -0.999997790472*t3233*t7611;
  t22092 = 0.707106*t5489*t7657;
  t22097 = 0.707106*t5489*t7661;
  t22100 = t22091 + t22092 + t22097;
  t22210 = t2730*t21940;
  t22218 = -1.*t21358*t6285;
  t22219 = t22210 + t22218;
  t22237 = t2730*t22100;
  t22238 = -1.*t21998*t6285;
  t22239 = t22237 + t22238;
  t22249 = t2730*t21358;
  t22252 = t21940*t6285;
  t22253 = t22249 + t22252;
  t22260 = t6399*t21358;
  t22261 = -1.*t6626*t22219;
  t22266 = t22260 + t22261;
  t22284 = t2730*t21998;
  t22285 = t22100*t6285;
  t22289 = t22284 + t22285;
  t22297 = t6399*t21998;
  t22311 = -1.*t6626*t22239;
  t22312 = t22297 + t22311;
  t21375 = t21310*t13578;
  t21569 = t10676*t21524;
  t22397 = t2730*t21310;
  t22416 = t21789*t6285;
  t22419 = t22397 + t22416;
  t19701 = t10830*t16918;
  t19703 = t19695 + t19701 + t17734;
  t21898 = -1.*t21524*t6567;
  t21942 = -1.*t13578*t21358;
  t22459 = t2730*t21412;
  t22465 = -1.*t21524*t6285;
  t22473 = t22459 + t22465;
  t22444 = t2730*t21524;
  t22445 = t21412*t6285;
  t22447 = t22444 + t22445;
  t19980 = -1.*t16918*t7475;
  t19984 = t19968 + t19980 + t18010;
  t22010 = -1.*t21310*t13578;
  t22017 = -1.*t10676*t21524;
  t22439 = t2730*t21789;
  t22440 = -1.*t21310*t6285;
  t22442 = t22439 + t22440;
  t20257 = -1.*t10830*t16918;
  t20278 = t20256 + t20257 + t18284;
  t22089 = t21524*t7878;
  t22115 = t13578*t21998;
  t20515 = t16918*t7888;
  t20525 = t20458 + t20515 + t18363;
  t22209 = t21358*t6626;
  t22220 = t6399*t22219;
  t22225 = t22209 + t22220;
  t22235 = t21998*t6626;
  t22240 = t6399*t22239;
  t22242 = t22235 + t22240;
  t22458 = t17676*t22447;
  t22482 = t22419*t17721;
  t22793 = t21310*t6626;
  t22796 = t6399*t22442;
  t22801 = t22793 + t22796;
  t22516 = -1.*t17721*t22253;
  t22521 = -1.*t22447*t6319;
  t22850 = t21524*t6626;
  t22885 = t6399*t22473;
  t22898 = t22850 + t22885;
  t22903 = t6399*t21524;
  t22907 = -1.*t6626*t22473;
  t22914 = t22903 + t22907;
  t22585 = -1.*t17676*t22447;
  t22618 = -1.*t22419*t17721;
  t22825 = t6399*t21310;
  t22841 = -1.*t6626*t22442;
  t22846 = t22825 + t22841;
  t22749 = t17721*t22289;
  t22758 = t22447*t7834;
  t23489 = -0.05*t5657;
  t23491 = t23489 + t12430 + t13117 + t13471;
  t23494 = -0.085*t5657;
  t23495 = 0.05*t5527;
  t23506 = -1.*t5657*t13089;
  t23508 = -1.*t5527*t13436;
  t23518 = t23494 + t23495 + t23506 + t23508;
  t23415 = 0.499998895236*t5513*t5657*t10652;
  t23416 = t23415 + t10779;
  t21827 = t10827*t16497;
  t21844 = t10755*t13795;
  t21866 = t19695 + t21827 + t21844;
  t23420 = -1.*t5657*t5644;
  t23447 = t5527*t5689;
  t23465 = t23420 + t23447;
  t23466 = -0.499998895236*t5513*t23465;
  t23468 = t5871 + t23466;
  t21973 = -1.*t16497*t6235;
  t21982 = -1.*t13795*t6281;
  t21983 = t19968 + t21973 + t21982;
  t23555 = t5525*t23491;
  t23557 = -0.499998895236*t5513*t23518;
  t23558 = t23555 + t23557;
  t23493 = -0.499998895236*t5513*t23491;
  t23521 = t5525*t23518;
  t23524 = t23493 + t23521;
  t23571 = 0.707106*t3233*t23491;
  t23659 = 0.707106*t3233*t23518;
  t23709 = t23571 + t23659;
  t22057 = -1.*t10827*t16497;
  t22060 = -1.*t10755*t13795;
  t22061 = t20256 + t22057 + t22060;
  t24004 = -1.*t3863*t5527;
  t24032 = -1.*t5657*t7639;
  t24035 = t24004 + t24032;
  t24036 = -0.499998895236*t5513*t24035;
  t24040 = t24036 + t7662;
  t23725 = -1.*t5525*t5657*t10652;
  t23738 = t23725 + t10670;
  t23748 = -0.707106*t5657*t3233*t10652;
  t23749 = t23748 + t10750;
  t22139 = t16497*t7663;
  t22157 = t13795*t7800;
  t22188 = t22139 + t20458 + t22157;
  t24651 = -1.*t5657*t10652*t13475;
  t24670 = t5657*t10652*t23491;
  t24700 = -1.*t5527*t10652*t23518;
  t24703 = -1.*t5527*t10652*t13568;
  t24704 = t24651 + t24670 + t24700 + t24703;
  t24602 = t10385*t12384;
  t24619 = -1.*t5527*t10652*t13475;
  t24638 = t5657*t10652*t13568;
  t24642 = t24602 + t24619 + t24638;
  t24783 = -1.*t5394*t12384;
  t24786 = -1.*t13475*t5835;
  t24819 = -1.*t13568*t6206;
  t24870 = t24783 + t24786 + t24819;
  t24888 = -1.*t23518*t5835;
  t24902 = -1.*t13568*t5835;
  t24935 = -1.*t23491*t6206;
  t24937 = -1.*t13475*t23465;
  t24938 = t24888 + t24902 + t24935 + t24937;
  t25154 = -1.*t10385*t12384;
  t25156 = t5527*t10652*t13475;
  t25159 = -1.*t5657*t10652*t13568;
  t25160 = t25154 + t25156 + t25159;
  t25127 = t5657*t10652*t13475;
  t25140 = -1.*t5657*t10652*t23491;
  t25142 = t5527*t10652*t23518;
  t25144 = t5527*t10652*t13568;
  t25147 = t25127 + t25140 + t25142 + t25144;
  t25165 = t12384*t7611;
  t25166 = t13568*t7657;
  t25182 = t13475*t7661;
  t25183 = t25165 + t25166 + t25182;
  t25213 = t13475*t24035;
  t25233 = t23491*t7657;
  t25248 = t23518*t7661;
  t25249 = t13568*t7661;
  t25252 = t25213 + t25233 + t25248 + t25249;
  t23968 = 0.707106*t3233*t23465;
  t23969 = t6264 + t23968;
  t23901 = t5525*t23465;
  t23902 = t6406 + t23901;
  t24192 = 0.707106*t3233*t24035;
  t24193 = t24192 + t7783;
  t24179 = t5525*t24035;
  t24186 = t24179 + t7877;
  t25335 = t2730*t23969;
  t25336 = -1.*t23902*t6285;
  t25338 = t25335 + t25336;
  t25374 = t2730*t24193;
  t25377 = -1.*t24186*t6285;
  t25379 = t25374 + t25377;
  t25394 = t2730*t23902;
  t25395 = t23969*t6285;
  t25403 = t25394 + t25395;
  t25412 = t6399*t23468;
  t25418 = -1.*t6626*t25338;
  t25426 = t25412 + t25418;
  t25461 = t2730*t24186;
  t25463 = t24193*t6285;
  t25464 = t25461 + t25463;
  t25468 = t6399*t24040;
  t25471 = -1.*t6626*t25379;
  t25473 = t25468 + t25471;
  t23564 = t10676*t23558;
  t23724 = t23416*t13578;
  t25520 = t2730*t23738;
  t25541 = t23749*t6285;
  t25565 = t25520 + t25541;
  t23864 = -1.*t23558*t6567;
  t23912 = -1.*t13578*t23468;
  t25607 = t2730*t23709;
  t25618 = -1.*t23524*t6285;
  t25638 = t25607 + t25618;
  t25640 = t2730*t23524;
  t25643 = t23709*t6285;
  t25644 = t25640 + t25643;
  t24155 = -1.*t10676*t23558;
  t24158 = -1.*t23416*t13578;
  t25654 = t2730*t23749;
  t25656 = -1.*t23738*t6285;
  t25657 = t25654 + t25656;
  t24175 = t13578*t24040;
  t24190 = t23558*t7878;
  t25331 = t23468*t6626;
  t25340 = t6399*t25338;
  t25343 = t25331 + t25340;
  t25362 = t24040*t6626;
  t25380 = t6399*t25379;
  t25387 = t25362 + t25380;
  t25648 = t17676*t25644;
  t25661 = t25565*t17721;
  t25945 = t23416*t6626;
  t25947 = t6399*t25657;
  t26012 = t25945 + t25947;
  t25685 = -1.*t25644*t6319;
  t25690 = -1.*t17721*t25403;
  t26049 = t23558*t6626;
  t26053 = t6399*t25638;
  t26056 = t26049 + t26053;
  t26059 = t6399*t23558;
  t26061 = -1.*t6626*t25638;
  t26062 = t26059 + t26061;
  t25791 = -1.*t17676*t25644;
  t25823 = -1.*t25565*t17721;
  t26090 = t6399*t23416;
  t26099 = -1.*t6626*t25657;
  t26110 = t26090 + t26099;
  t25892 = t17721*t25464;
  t25906 = t25644*t7834;
  t26658 = 0.085*t3666;
  t26661 = t26658 + t12937 + t13027;
  t26671 = -0.085*t5245;
  t26738 = -1.*t3666*t12002;
  t26742 = -1.*t5245*t12283;
  t26748 = t26671 + t26738 + t26742;
  t26622 = -1.*t5245*t9834;
  t26626 = -1.*t3666*t10255;
  t26637 = t26622 + t26626;
  t26803 = -1.*t3666*t4662;
  t26823 = -1.*t5245*t5302;
  t26861 = t26803 + t26823;
  t27356 = -1.*t3666*t7581;
  t27357 = -1.*t5245*t7609;
  t27391 = t27356 + t27357;
  t27705 = -0.707106*t3233*t5644;
  t27722 = t5525*t5657*t26861;
  t27723 = 0.499998895236*t5513*t5527*t26861;
  t27751 = t27705 + t27722 + t27723;
  t27866 = -0.707106*t3233*t26661;
  t27585 = t5525*t5657*t26637;
  t27596 = 0.499998895236*t5513*t5527*t26637;
  t27615 = -0.707106*t3233*t10652;
  t27685 = t27585 + t27596 + t27615;
  t27896 = t5525*t5657*t26748;
  t27902 = 0.499998895236*t5513*t5527*t26748;
  t27904 = t27866 + t27896 + t27902;
  t27873 = -0.499998895236*t5513*t5657*t26748;
  t27876 = -1.*t5525*t5527*t26748;
  t27877 = t27866 + t27873 + t27876;
  t27994 = t6260*t26661;
  t27998 = 0.707106*t5657*t3233*t26748;
  t28013 = -0.707106*t3233*t5527*t26748;
  t28014 = t27994 + t27998 + t28013;
  t27801 = -0.707106*t3233*t7639;
  t27802 = t5525*t5657*t27391;
  t27804 = 0.499998895236*t5513*t5527*t27391;
  t27817 = t27801 + t27802 + t27804;
  t28019 = -0.499998895236*t5513*t5657*t26637;
  t28024 = -1.*t5525*t5527*t26637;
  t28026 = t28019 + t28024 + t27615;
  t28061 = 0.707106*t5657*t3233*t26637;
  t28077 = -0.707106*t3233*t5527*t26637;
  t28079 = t6260*t10652;
  t28097 = t28061 + t28077 + t28079;
  t26662 = t10385*t26661;
  t26788 = t10652*t12384;
  t26893 = -1.*t5394*t26661;
  t26898 = -1.*t5644*t12384;
  t28769 = Power(t5657,2);
  t28774 = t28769*t10652*t26748;
  t28778 = Power(t5527,2);
  t28779 = t28778*t10652*t26748;
  t28780 = -1.*t5527*t26637*t13475;
  t28789 = t5657*t26637*t13568;
  t28790 = t26662 + t28774 + t28779 + t26788 + t28780 + t28789;
  t28794 = t5527*t26861*t13475;
  t28795 = -1.*t5657*t26861*t13568;
  t28797 = t5527*t26748*t5835;
  t28798 = -1.*t5657*t26748*t6206;
  t28829 = t26893 + t26898 + t28794 + t28795 + t28797 + t28798;
  t27268 = -1.*t10385*t26661;
  t27315 = -1.*t10652*t12384;
  t27326 = t12384*t7639;
  t27414 = t26661*t7611;
  t29035 = -1.*t28769*t10652*t26748;
  t29036 = -1.*t28778*t10652*t26748;
  t29077 = t5527*t26637*t13475;
  t29095 = -1.*t5657*t26637*t13568;
  t29129 = t27268 + t29035 + t29036 + t27315 + t29077 + t29095;
  t29144 = -1.*t5527*t13475*t27391;
  t29171 = t5657*t13568*t27391;
  t29174 = t5657*t26748*t7657;
  t29225 = -1.*t5527*t26748*t7661;
  t29241 = t27326 + t29144 + t29171 + t27414 + t29174 + t29225;
  t28195 = t6260*t5644;
  t28196 = 0.707106*t5657*t3233*t26861;
  t28201 = -0.707106*t3233*t5527*t26861;
  t28202 = t28195 + t28196 + t28201;
  t28159 = -0.499998895236*t5513*t5657*t26861;
  t28160 = -1.*t5525*t5527*t26861;
  t28164 = t27705 + t28159 + t28160;
  t28462 = t6260*t7639;
  t28471 = 0.707106*t5657*t3233*t27391;
  t28472 = -0.707106*t3233*t5527*t27391;
  t28473 = t28462 + t28471 + t28472;
  t28401 = -0.499998895236*t5513*t5657*t27391;
  t28406 = -1.*t5525*t5527*t27391;
  t28407 = t27801 + t28401 + t28406;
  t29443 = t2730*t28202;
  t29447 = -1.*t28164*t6285;
  t29450 = t29443 + t29447;
  t29673 = t2730*t28473;
  t29677 = -1.*t28407*t6285;
  t29680 = t29673 + t29677;
  t29695 = t2730*t28164;
  t29712 = t28202*t6285;
  t29771 = t29695 + t29712;
  t29781 = t6399*t27751;
  t29807 = -1.*t6626*t29450;
  t29808 = t29781 + t29807;
  t29829 = t2730*t28407;
  t29837 = t28473*t6285;
  t29845 = t29829 + t29837;
  t29891 = t6399*t27817;
  t29892 = -1.*t6626*t29680;
  t29895 = t29891 + t29892;
  t27940 = t10676*t27904;
  t28018 = t27685*t13578;
  t30304 = t2730*t28026;
  t30307 = t28097*t6285;
  t30341 = t30304 + t30307;
  t28156 = -1.*t27751*t13578;
  t28208 = -1.*t27904*t6567;
  t30386 = t2730*t28014;
  t30391 = -1.*t27877*t6285;
  t30392 = t30386 + t30391;
  t30402 = t2730*t27877;
  t30534 = t28014*t6285;
  t30566 = t30402 + t30534;
  t28326 = -1.*t10676*t27904;
  t28391 = -1.*t27685*t13578;
  t30743 = t2730*t28097;
  t30745 = -1.*t28026*t6285;
  t30750 = t30743 + t30745;
  t28435 = t13578*t27817;
  t28483 = t27904*t7878;
  t29442 = t27751*t6626;
  t29565 = t6399*t29450;
  t29665 = t29442 + t29565;
  t29672 = t27817*t6626;
  t29682 = t6399*t29680;
  t29683 = t29672 + t29682;
  t30731 = t17676*t30566;
  t30807 = t30341*t17721;
  t31241 = t27685*t6626;
  t31242 = t6399*t30750;
  t31246 = t31241 + t31242;
  t30895 = -1.*t29771*t17721;
  t30901 = -1.*t30566*t6319;
  t31361 = t27904*t6626;
  t31366 = t6399*t30392;
  t31385 = t31361 + t31366;
  t31739 = t6399*t27904;
  t31804 = -1.*t6626*t30392;
  t31837 = t31739 + t31804;
  t31049 = -1.*t17676*t30566;
  t31098 = -1.*t30341*t17721;
  t31977 = t6399*t27685;
  t31999 = -1.*t6626*t30750;
  t32022 = t31977 + t31999;
  t31158 = t17721*t29845;
  t31191 = t30566*t7834;
  t35292 = -0.185*t3869;
  t35734 = -1.*t3869*t11554;
  t35804 = -1.*t4166*t11812;
  t35815 = t35292 + t35734 + t35804;
  t35853 = -1.*t4166*t3862;
  t35988 = t3869*t4660;
  t36010 = t35853 + t35988;
  t36254 = 0.185*t4166;
  t36501 = t36254 + t12254 + t12275;
  t37156 = -1.*t3862*t3863*t3869;
  t37202 = -1.*t4166*t3863*t4660;
  t37212 = t37156 + t37202;
  t37277 = t5245*t37212;
  t37284 = t37277 + t5536;
  t26599 = t10652*t13089;
  t26617 = t26599 + t24602;
  t36989 = t5245*t36010;
  t36991 = t10396 + t36989;
  t38201 = t5245*t35815;
  t38323 = t3666*t36501;
  t38535 = t38201 + t38323;
  t38598 = t3666*t35815;
  t38907 = -1.*t5245*t36501;
  t39457 = t38598 + t38907;
  t26926 = -1.*t5644*t13089;
  t26934 = t13436*t5689;
  t26939 = t26926 + t24783 + t26934;
  t37311 = -1.*t3862*t3869*t5689;
  t37351 = -1.*t4166*t4660*t5689;
  t37363 = t37311 + t37351;
  t27239 = -1.*t10652*t13089;
  t27243 = t27239 + t25154;
  t37365 = t5245*t37363;
  t37372 = t37365 + t7636;
  t37879 = t3666*t36010;
  t37991 = t26622 + t37879;
  t27464 = t3863*t13436;
  t27465 = t13089*t7639;
  t27487 = t27464 + t27465 + t25165;
  t39592 = t3666*t37212;
  t39593 = t39592 + t26823;
  t41312 = t3666*t37363;
  t41510 = t41312 + t27357;
  t44633 = -0.707106*t3233*t37284;
  t44646 = t5525*t5657*t39593;
  t44813 = 0.499998895236*t5513*t5527*t39593;
  t44818 = t44633 + t44646 + t44813;
  t49765 = -0.707106*t3233*t38535;
  t43295 = t5525*t5657*t37991;
  t43392 = 0.499998895236*t5513*t5527*t37991;
  t43508 = -0.707106*t3233*t36991;
  t43514 = t43295 + t43392 + t43508;
  t50048 = t5525*t5657*t39457;
  t50226 = 0.499998895236*t5513*t5527*t39457;
  t50233 = t49765 + t50048 + t50226;
  t49766 = -0.499998895236*t5513*t5657*t39457;
  t49843 = -1.*t5525*t5527*t39457;
  t49874 = t49765 + t49766 + t49843;
  t50299 = t6260*t38535;
  t50300 = 0.707106*t5657*t3233*t39457;
  t50301 = -0.707106*t3233*t5527*t39457;
  t50316 = t50299 + t50300 + t50301;
  t45026 = -0.707106*t3233*t37372;
  t45114 = t5525*t5657*t41510;
  t45735 = 0.499998895236*t5513*t5527*t41510;
  t46166 = t45026 + t45114 + t45735;
  t50335 = -0.499998895236*t5513*t5657*t37991;
  t50402 = -1.*t5525*t5527*t37991;
  t50403 = t50335 + t50402 + t43508;
  t50431 = 0.707106*t5657*t3233*t37991;
  t50455 = -0.707106*t3233*t5527*t37991;
  t50456 = t6260*t36991;
  t50459 = t50431 + t50455 + t50456;
  t38079 = t36991*t12384;
  t38571 = t10385*t38535;
  t39613 = -1.*t37284*t12384;
  t39678 = -1.*t5394*t38535;
  t51000 = t28769*t10652*t39457;
  t51009 = t28778*t10652*t39457;
  t51022 = -1.*t5527*t37991*t13475;
  t51026 = t5657*t37991*t13568;
  t51042 = t38079 + t38571 + t51000 + t51009 + t51022 + t51026;
  t51052 = t5527*t39593*t13475;
  t51061 = -1.*t5657*t39593*t13568;
  t51066 = t5527*t39457*t5835;
  t51074 = -1.*t5657*t39457*t6206;
  t51078 = t39613 + t39678 + t51052 + t51061 + t51066 + t51074;
  t40905 = -1.*t36991*t12384;
  t40906 = -1.*t10385*t38535;
  t41273 = t12384*t37372;
  t41804 = t38535*t7611;
  t51122 = -1.*t28769*t10652*t39457;
  t51123 = -1.*t28778*t10652*t39457;
  t51124 = t5527*t37991*t13475;
  t51125 = -1.*t5657*t37991*t13568;
  t51130 = t40905 + t40906 + t51122 + t51123 + t51124 + t51125;
  t51132 = -1.*t5527*t13475*t41510;
  t51133 = t5657*t13568*t41510;
  t51134 = t5657*t39457*t7657;
  t51135 = -1.*t5527*t39457*t7661;
  t51138 = t41273 + t51132 + t51133 + t41804 + t51134 + t51135;
  t50518 = t6260*t37284;
  t50570 = 0.707106*t5657*t3233*t39593;
  t50593 = -0.707106*t3233*t5527*t39593;
  t50596 = t50518 + t50570 + t50593;
  t50514 = -0.499998895236*t5513*t5657*t39593;
  t50515 = -1.*t5525*t5527*t39593;
  t50516 = t44633 + t50514 + t50515;
  t50728 = t6260*t37372;
  t50729 = 0.707106*t5657*t3233*t41510;
  t50742 = -0.707106*t3233*t5527*t41510;
  t50743 = t50728 + t50729 + t50742;
  t50720 = -0.499998895236*t5513*t5657*t41510;
  t50722 = -1.*t5525*t5527*t41510;
  t50723 = t45026 + t50720 + t50722;
  t51194 = t2730*t50596;
  t51198 = -1.*t50516*t6285;
  t51217 = t51194 + t51198;
  t51236 = t2730*t50743;
  t51238 = -1.*t50723*t6285;
  t51239 = t51236 + t51238;
  t51249 = t2730*t50516;
  t51251 = t50596*t6285;
  t51252 = t51249 + t51251;
  t51254 = t6399*t44818;
  t51255 = -1.*t6626*t51217;
  t51257 = t51254 + t51255;
  t51272 = t2730*t50723;
  t51273 = t50743*t6285;
  t51275 = t51272 + t51273;
  t51278 = t6399*t46166;
  t51279 = -1.*t6626*t51239;
  t51280 = t51278 + t51279;
  t50287 = t10676*t50233;
  t50330 = t43514*t13578;
  t51304 = t2730*t50403;
  t51306 = t50459*t6285;
  t51307 = t51304 + t51306;
  t50512 = -1.*t44818*t13578;
  t50599 = -1.*t50233*t6567;
  t51324 = t2730*t50316;
  t51333 = -1.*t49874*t6285;
  t51334 = t51324 + t51333;
  t51342 = t2730*t49874;
  t51345 = t50316*t6285;
  t51348 = t51342 + t51345;
  t50644 = -1.*t10676*t50233;
  t50653 = -1.*t43514*t13578;
  t51352 = t2730*t50459;
  t51358 = -1.*t50403*t6285;
  t51363 = t51352 + t51358;
  t50726 = t13578*t46166;
  t50940 = t50233*t7878;
  t51190 = t44818*t6626;
  t51222 = t6399*t51217;
  t51226 = t51190 + t51222;
  t51235 = t46166*t6626;
  t51242 = t6399*t51239;
  t51243 = t51235 + t51242;
  t51351 = t17676*t51348;
  t51368 = t51307*t17721;
  t51412 = t43514*t6626;
  t51413 = t6399*t51363;
  t51414 = t51412 + t51413;
  t51380 = -1.*t51252*t17721;
  t51382 = -1.*t51348*t6319;
  t51428 = t50233*t6626;
  t51429 = t6399*t51334;
  t51430 = t51428 + t51429;
  t51432 = t6399*t50233;
  t51434 = -1.*t6626*t51334;
  t51435 = t51432 + t51434;
  t51396 = -1.*t17676*t51348;
  t51398 = -1.*t51307*t17721;
  t51440 = t6399*t43514;
  t51441 = -1.*t6626*t51363;
  t51446 = t51440 + t51441;
  t51402 = t17721*t51275;
  t51404 = t51348*t7834;
  t51525 = 0.2879*t3862;
  t51527 = t51525 + t10927 + t11468;
  t51529 = -0.02542*t3862;
  t51530 = -0.2879*t4660;
  t51531 = -1.*t4660*t11297;
  t51535 = t51529 + t51530 + t51531;
  t35281 = 0.085*t5302;
  t35827 = -1.*t9834*t12002;
  t36060 = -1.*t36010*t12283;
  t51564 = -1.*t3869*t51527;
  t51565 = t4166*t51535;
  t51566 = t51564 + t51565;
  t51569 = t4166*t51527;
  t51576 = t3869*t51535;
  t51577 = t51569 + t51576;
  t36713 = t9834*t12002;
  t36834 = t36010*t12283;
  t36917 = 0.085*t7609;
  t37000 = -0.000087*t36991;
  t37310 = 2.e-6*t37284;
  t37862 = -9.e-6*t37372;
  t37863 = t37284*t26617;
  t38036 = t37991*t13089;
  t51604 = t5245*t51566;
  t51609 = t3666*t51577;
  t51614 = t51604 + t51609;
  t51616 = t3666*t51566;
  t51617 = -1.*t5245*t51577;
  t51618 = t51616 + t51617;
  t39600 = -1.*t39593*t13089;
  t40031 = t36991*t26939;
  t40088 = -1.*t3666*t37363;
  t40423 = t40088 + t7610;
  t40545 = 0.05*t40423;
  t40744 = -1.*t3666*t37212;
  t40747 = t40744 + t5328;
  t40848 = 0.05*t40747;
  t40866 = t27243*t37372;
  t40890 = -1.*t37991*t13089;
  t41756 = t13089*t41510;
  t41272 = t36991*t27487;
  t44574 = -0.000087*t43514;
  t44819 = 2.e-6*t44818;
  t49762 = -9.e-6*t46166;
  t49764 = t44818*t21866;
  t51668 = -0.707106*t3233*t51614;
  t50416 = t50403*t16497;
  t50463 = t50459*t13795;
  t50517 = -1.*t50516*t16497;
  t50597 = -1.*t50596*t13795;
  t51692 = t5525*t5657*t51618;
  t51698 = 0.499998895236*t5513*t5527*t51618;
  t51699 = t51668 + t51692 + t51698;
  t51670 = -0.499998895236*t5513*t5657*t51618;
  t51671 = -1.*t5525*t5527*t51618;
  t51672 = t51668 + t51670 + t51671;
  t51709 = t6260*t51614;
  t51710 = 0.707106*t5657*t3233*t51618;
  t51711 = -0.707106*t3233*t5527*t51618;
  t51712 = t51709 + t51710 + t51711;
  t50606 = t43514*t21983;
  t50641 = t22061*t46166;
  t50659 = -1.*t50403*t16497;
  t50664 = -1.*t50459*t13795;
  t50725 = t16497*t50723;
  t50745 = t13795*t50743;
  t50958 = t43514*t22188;
  t50966 = -0.707106*t5657*t37991;
  t50968 = -0.707106*t5527*t37991;
  t50971 = t50966 + t50968;
  t50975 = -0.000087*t50971;
  t50976 = -0.707106*t5657*t39593;
  t50977 = -0.707106*t5527*t39593;
  t50978 = t50976 + t50977;
  t50983 = 2.e-6*t50978;
  t50990 = -0.707106*t5657*t41510;
  t50991 = -0.707106*t5527*t41510;
  t50994 = t50990 + t50991;
  t50996 = -9.e-6*t50994;
  t50997 = 0.024749*t37372;
  t50999 = t5657*t39593*t24642;
  t51615 = t10385*t51614;
  t51623 = -1.*t5394*t51614;
  t51088 = t5657*t37991*t24870;
  t51099 = -1.*t5527*t39593*t24642;
  t51788 = t28769*t10652*t51618;
  t51804 = t28778*t10652*t51618;
  t51805 = t51615 + t51788 + t51804 + t38079 + t51022 + t51026;
  t51809 = t5527*t51618*t5835;
  t51810 = -1.*t5657*t51618*t6206;
  t51811 = t51623 + t39613 + t51052 + t51061 + t51809 + t51810;
  t51102 = -1.*t5527*t37991*t24870;
  t51120 = 0.024749*t37284;
  t51121 = t5657*t25160*t41510;
  t51638 = -1.*t10385*t51614;
  t51653 = t51614*t7611;
  t51140 = t5657*t37991*t25183;
  t51150 = -1.*t5527*t25160*t41510;
  t51868 = -1.*t28769*t10652*t51618;
  t51869 = -1.*t28778*t10652*t51618;
  t51870 = t51638 + t51868 + t51869 + t40905 + t51124 + t51125;
  t51879 = t5657*t51618*t7657;
  t51880 = -1.*t5527*t51618*t7661;
  t51881 = t41273 + t51132 + t51133 + t51653 + t51879 + t51880;
  t51157 = -1.*t5527*t37991*t25183;
  t51233 = -0.000567072*t51226;
  t51246 = -0.0055658976*t51243;
  t51247 = t51233 + t51246;
  t51248 = -0.5*var2[0]*t51247;
  t51253 = t766*t51252;
  t51261 = t6362*t51257;
  t51262 = t51253 + t51261;
  t51264 = -0.000567072*t51262;
  t51277 = t766*t51275;
  t51281 = t6362*t51280;
  t51282 = t51277 + t51281;
  t51283 = -0.0055658976*t51282;
  t51284 = t51264 + t51283;
  t51288 = -0.5*var2[2]*t51284;
  t51293 = t6362*t51252;
  t51294 = -1.*t766*t51257;
  t51295 = t51293 + t51294;
  t51297 = -0.000567072*t51295;
  t51298 = t6362*t51275;
  t51299 = -1.*t766*t51280;
  t51300 = t51298 + t51299;
  t51301 = -0.0055658976*t51300;
  t51302 = t51297 + t51301;
  t51303 = -0.5*var2[1]*t51302;
  t51308 = -0.000087*t51307;
  t51309 = 2.e-6*t51252;
  t51310 = -9.e-6*t51275;
  t51317 = t51252*t19703;
  t51708 = t10676*t51699;
  t51367 = t51363*t16918;
  t51729 = -1.*t51699*t6567;
  t51378 = -1.*t51217*t16918;
  t51929 = t2730*t51712;
  t51931 = -1.*t51672*t6285;
  t51932 = t51929 + t51931;
  t51935 = t2730*t51672;
  t51936 = t51712*t6285;
  t51937 = t51935 + t51936;
  t51385 = t51307*t19984;
  t51394 = t51275*t20278;
  t51762 = -1.*t10676*t51699;
  t51397 = -1.*t51363*t16918;
  t51768 = t51699*t7878;
  t51401 = t16918*t51239;
  t51407 = t51307*t20525;
  t51415 = -0.000087*t51414;
  t51424 = 2.e-6*t51226;
  t51425 = -9.e-6*t51243;
  t51426 = t51226*t17799;
  t51939 = t17676*t51937;
  t51437 = t51414*t17117;
  t51450 = t51446*t17488;
  t51949 = -1.*t51937*t6319;
  t51457 = -1.*t51226*t17117;
  t51458 = -1.*t51257*t17488;
  t52020 = t51699*t6626;
  t52021 = t6399*t51932;
  t52022 = t52020 + t52021;
  t52025 = t6399*t51699;
  t52027 = -1.*t6626*t51932;
  t52105 = t52025 + t52027;
  t51464 = t51414*t18024;
  t51481 = t51243*t18302;
  t51975 = -1.*t17676*t51937;
  t51489 = -1.*t51414*t17117;
  t51490 = -1.*t51446*t17488;
  t52011 = t51937*t7834;
  t51494 = t17117*t51243;
  t51495 = t17488*t51280;
  t51502 = t51414*t18427;
  t52286 = -2.e-6*t3863;
  t55522 = 9.e-6*t5689;
  t56230 = 0.0033*t3863;
  t56239 = t56230 + t13406;
  t56250 = t3862*t3869*t56239;
  t56266 = t4166*t4660*t56239;
  t56300 = t56250 + t56266;
  t56386 = t4166*t3862*t56239;
  t56398 = -1.*t3869*t4660*t56239;
  t56423 = t56386 + t56398;
  t56733 = -1.*t4166*t3862*t5689;
  t56743 = t3869*t4660*t5689;
  t56748 = t56733 + t56743;
  t56838 = -1.*t5245*t56300;
  t56850 = t3666*t56423;
  t56856 = t56838 + t56850;
  t56872 = t3666*t56300;
  t56877 = t5245*t56423;
  t56882 = t56872 + t56877;
  t56788 = t5245*t56748;
  t56789 = t41312 + t56788;
  t56968 = 0.03239*t3863;
  t56969 = -0.0033*t5689;
  t56982 = t56968 + t56969;
  t57094 = -1.*t5245*t37363;
  t57095 = t3666*t56748;
  t57096 = t57094 + t57095;
  t57176 = -0.707106*t3233*t56882;
  t57181 = -1.*t5527*t56856;
  t57182 = t5657*t56982;
  t57183 = t57181 + t57182;
  t57186 = t5657*t56856;
  t57187 = t5527*t56982;
  t57188 = t57186 + t57187;
  t57192 = t5525*t57183;
  t57193 = -0.499998895236*t5513*t57188;
  t57194 = t57176 + t57192 + t57193;
  t57184 = -0.499998895236*t5513*t57183;
  t57189 = t5525*t57188;
  t57190 = t57176 + t57184 + t57189;
  t57196 = t6260*t56882;
  t57206 = 0.707106*t3233*t57183;
  t57224 = 0.707106*t3233*t57188;
  t57243 = t57196 + t57206 + t57224;
  t57109 = -0.707106*t3233*t56789;
  t57110 = t5657*t57096;
  t57111 = t24004 + t57110;
  t57112 = t5525*t57111;
  t57113 = -1.*t5657*t3863;
  t57114 = -1.*t5527*t57096;
  t57115 = t57113 + t57114;
  t57149 = -0.499998895236*t5513*t57115;
  t57150 = t57109 + t57112 + t57149;
  t56883 = -1.*t10385*t56882;
  t56931 = t5394*t12384;
  t57006 = t56882*t7611;
  t57453 = t5527*t10652*t57183;
  t57454 = -1.*t5657*t10652*t57188;
  t57455 = t56883 + t57453 + t57454;
  t57457 = t13475*t5835;
  t57458 = t13568*t6206;
  t57492 = t57188*t7657;
  t57496 = t57183*t7661;
  t57497 = t56931 + t57457 + t57458 + t57006 + t57492 + t57496;
  t57041 = t10385*t56882;
  t57092 = -1.*t5394*t56882;
  t57099 = -1.*t12384*t56789;
  t57509 = -1.*t5527*t10652*t57183;
  t57510 = t5657*t10652*t57188;
  t57511 = t57041 + t57509 + t57510;
  t57515 = -1.*t57183*t5835;
  t57516 = -1.*t57188*t6206;
  t57517 = -1.*t13568*t57111;
  t57518 = -1.*t13475*t57115;
  t57519 = t57092 + t57515 + t57516 + t57099 + t57517 + t57518;
  t57397 = t6260*t56789;
  t57401 = 0.707106*t3233*t57111;
  t57432 = 0.707106*t3233*t57115;
  t57433 = t57397 + t57401 + t57432;
  t57379 = -0.499998895236*t5513*t57111;
  t57386 = t5525*t57115;
  t57387 = t57109 + t57379 + t57386;
  t57542 = t2730*t57433;
  t57543 = -1.*t57387*t6285;
  t57547 = t57542 + t57543;
  t8439 = t6362*t6319;
  t8532 = -1.*t766*t7515;
  t8535 = t8439 + t8532;
  t57562 = t2730*t57387;
  t57563 = t57433*t6285;
  t57564 = t57562 + t57563;
  t57566 = t6399*t57150;
  t57567 = -1.*t6626*t57547;
  t57568 = t57566 + t57567;
  t57191 = -1.*t10676*t57190;
  t57264 = t13578*t6567;
  t57310 = t57190*t7878;
  t57691 = t2730*t57243;
  t57692 = -1.*t57194*t6285;
  t57693 = t57691 + t57692;
  t57697 = t2730*t57194;
  t57698 = t57243*t6285;
  t57706 = t57697 + t57698;
  t57344 = t10676*t57190;
  t57364 = -1.*t57190*t6567;
  t57389 = -1.*t13578*t57150;
  t57541 = t57150*t6626;
  t57548 = t6399*t57547;
  t57554 = t57541 + t57548;
  t57711 = -1.*t17676*t57706;
  t57720 = t17721*t6319;
  t57724 = t57706*t7834;
  t57798 = t57190*t6626;
  t57799 = t6399*t57693;
  t57807 = t57798 + t57799;
  t57810 = t6399*t57190;
  t57811 = -1.*t6626*t57693;
  t57812 = t57810 + t57811;
  t57755 = t17676*t57706;
  t57775 = -1.*t57706*t6319;
  t57780 = -1.*t17721*t57564;
  p_output1[0]=0;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=(-0.5*(-0.000567072*(-1.*t6362*t7515 - 1.*t6319*t766) - 0.0055658976*(-1.*t766*t7834 - 1.*t6362*t8115))*var2[1] - 0.5*(-0.0055658976*(t6362*t7834 - 1.*t766*t8115) - 0.000567072*t8535)*var2[2])*var2[23];
  p_output1[4]=(-0.5*(-0.000567072*t7515 - 0.0055658976*t8115)*var2[0] - 0.5*(0.000567072*t766*t9154 + 0.0055658976*t766*t9265)*var2[1] - 0.5*(-0.000567072*t6362*t9154 - 0.0055658976*t6362*t9265)*var2[2] - 0.5*(-0.000087*t10882 + 2.e-6*t7515 - 9.e-6*t8115 - 0.0055658976*(t10897*(t10882*t17071 + t10882*t17117 + t17284*t17488 + t17488*t17619) + t10882*t18024 + t17799*t7515 + t17619*(-1.*t10897*t17488 - 1.*t17071*t7515 - 1.*t17117*t7515 - 1.*t17488*t9154)) - 0.000567072*((-1.*t10882*t17071 - 1.*t10882*t17117 - 1.*t17284*t17488 - 1.*t17488*t17619)*t18212 + t10882*t18427 + t18302*t8115 + t17619*(t17488*t18212 + t17071*t8115 + t17117*t8115 + t17488*t9265)))*var2[3])*var2[23];
  p_output1[5]=(-0.5*(-0.000567072*t18747*t6399 - 0.0055658976*t18861*t6399)*var2[0] - 0.5*(-0.000567072*(t6362*t7475 + t18747*t6626*t766) - 0.0055658976*(t18861*t6626*t766 + t6362*t7888))*var2[1] - 0.5*(-0.000567072*(-1.*t18747*t6362*t6626 + t7475*t766) - 0.0055658976*(-1.*t18861*t6362*t6626 + t766*t7888))*var2[2] - 0.5*(2.e-6*t18747*t6399 - 9.e-6*t18861*t6399 - 0.000087*t19484*t6399 - 0.0055658976*(t17799*t18747*t6399 + t18024*t19484*t6399 + t10897*(t19499 + t19540 + t17117*t19484*t6399 + t17619*t19535*t6399 - 1.*t17488*t19484*t6626 - 1.*t10882*t19535*t6626) + t17619*(t19723 + t19740 - 1.*t17117*t18747*t6399 - 1.*t10897*t19535*t6399 + t17488*t18747*t6626 + t19535*t6626*t7515)) - 0.000567072*(t18302*t18861*t6399 + t18427*t19484*t6399 + t18212*(t20121 + t20135 - 1.*t17117*t19484*t6399 - 1.*t17619*t19535*t6399 + t17488*t19484*t6626 + t10882*t19535*t6626) + t17619*(t20397 + t20402 + t17117*t18861*t6399 + t18212*t19535*t6399 - 1.*t17488*t18861*t6626 - 1.*t19535*t6626*t8115)))*var2[3] - 0.5*(-0.000087*t10830 + 2.e-6*t7475 - 0.0055658976*(t10830*t19984 + (t16918*t19484 + t19499 + t10830*t19535 + t19540)*t6319 + t19703*t7475 + t17676*(-1.*t16918*t18747 + t19723 + t19740 - 1.*t19535*t7475)) - 9.e-6*t7888 - 0.000567072*(t10830*t20525 + (-1.*t16918*t19484 - 1.*t10830*t19535 + t20121 + t20135)*t7834 + t20278*t7888 + t17676*(t16918*t18861 + t20397 + t20402 + t19535*t7888)))*var2[4])*var2[23];
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=0;
  p_output1[13]=0;
  p_output1[14]=0;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
  p_output1[18]=(-0.5*(-0.000567072*t22225 - 0.0055658976*t22242)*var2[0] - 0.5*(-0.000567072*(t22253*t6362 - 1.*t22266*t766) - 0.0055658976*(t22289*t6362 - 1.*t22312*t766))*var2[1] - 0.5*(-0.000567072*(t22266*t6362 + t22253*t766) - 0.0055658976*(t22312*t6362 + t22289*t766))*var2[2] - 0.5*(2.e-6*t22225 - 9.e-6*t22242 - 0.000087*t22801 - 0.0055658976*(t17799*t22225 + t18024*t22801 + t10897*(t22458 + t22482 + t17117*t22801 + t17488*t22846 + t17619*t22898 + t10882*t22914) + t17619*(-1.*t17117*t22225 - 1.*t17488*t22266 + t22516 + t22521 - 1.*t10897*t22898 - 1.*t22914*t7515)) - 0.000567072*(t18302*t22242 + t18427*t22801 + t18212*(t22585 + t22618 - 1.*t17117*t22801 - 1.*t17488*t22846 - 1.*t17619*t22898 - 1.*t10882*t22914) + t17619*(t17117*t22242 + t17488*t22312 + t22749 + t22758 + t18212*t22898 + t22914*t8115)))*var2[3] - 0.5*(2.e-6*t22253 - 9.e-6*t22289 - 0.000087*t22419 - 0.0055658976*(t19703*t22253 + t19984*t22419 + (t21375 + t21569 + t16918*t22442 + t22458 + t10830*t22473 + t22482)*t6319 + t17676*(t21898 + t21942 - 1.*t16918*t22219 + t22516 + t22521 - 1.*t22473*t7475)) - 0.000567072*(t20278*t22289 + t20525*t22419 + (t22010 + t22017 - 1.*t16918*t22442 - 1.*t10830*t22473 + t22585 + t22618)*t7834 + t17676*(t22089 + t22115 + t16918*t22239 + t22749 + t22758 + t22473*t7888)))*var2[4] - 0.5*(-0.000087*t21310 + 2.e-6*t21358 - 9.e-6*t21998 - 0.0055658976*(t21358*t21866 + t21310*t21983 + t10676*(-1.*t16497*t21358 + t21898 - 1.*t13795*t21940 + t21942 - 1.*t21524*t6235 - 1.*t21412*t6281) + (t16497*t21310 + t21375 + t10755*t21412 + t10827*t21524 + t21569 + t13795*t21789)*t6567) - 0.000567072*(t21998*t22061 + t21310*t22188 + t10676*(t16497*t21998 + t22089 + t13795*t22100 + t22115 + t21524*t7663 + t21412*t7800) + (-1.*t16497*t21310 - 1.*t10755*t21412 - 1.*t10827*t21524 - 1.*t13795*t21789 + t22010 + t22017)*t7878))*var2[5])*var2[23];
  p_output1[19]=(-0.5*(-0.000567072*t25343 - 0.0055658976*t25387)*var2[0] - 0.5*(-0.000567072*(t25403*t6362 - 1.*t25426*t766) - 0.0055658976*(t25464*t6362 - 1.*t25473*t766))*var2[1] - 0.5*(-0.000567072*(t25426*t6362 + t25403*t766) - 0.0055658976*(t25473*t6362 + t25464*t766))*var2[2] - 0.5*(2.e-6*t25343 - 9.e-6*t25387 - 0.000087*t26012 - 0.0055658976*(t17799*t25343 + t18024*t26012 + t10897*(t25648 + t25661 + t17117*t26012 + t17619*t26056 + t10882*t26062 + t17488*t26110) + t17619*(-1.*t17117*t25343 - 1.*t17488*t25426 + t25685 + t25690 - 1.*t10897*t26056 - 1.*t26062*t7515)) - 0.000567072*(t18302*t25387 + t18427*t26012 + t18212*(t25791 + t25823 - 1.*t17117*t26012 - 1.*t17619*t26056 - 1.*t10882*t26062 - 1.*t17488*t26110) + t17619*(t17117*t25387 + t17488*t25473 + t25892 + t25906 + t18212*t26056 + t26062*t8115)))*var2[3] - 0.5*(2.e-6*t25403 - 9.e-6*t25464 - 0.000087*t25565 - 0.0055658976*(t19703*t25403 + t19984*t25565 + (t23564 + t23724 + t10830*t25638 + t25648 + t16918*t25657 + t25661)*t6319 + t17676*(t23864 + t23912 - 1.*t16918*t25338 + t25685 + t25690 - 1.*t25638*t7475)) - 0.000567072*(t20278*t25464 + t20525*t25565 + (t24155 + t24158 - 1.*t10830*t25638 - 1.*t16918*t25657 + t25791 + t25823)*t7834 + t17676*(t24175 + t24190 + t16918*t25379 + t25892 + t25906 + t25638*t7888)))*var2[4] - 0.5*(-0.000087*t23416 + 2.e-6*t23468 - 9.e-6*t24040 - 0.0055658976*(t21983*t23416 + t21866*t23468 + t10676*(t23864 - 1.*t16497*t23902 + t23912 - 1.*t13795*t23969 - 1.*t23524*t6235 - 1.*t23709*t6281) + (t10827*t23524 + t23564 + t10755*t23709 + t23724 + t16497*t23738 + t13795*t23749)*t6567) - 0.000567072*(t22188*t23416 + t22061*t24040 + t10676*(t24175 + t16497*t24186 + t24190 + t13795*t24193 + t23524*t7663 + t23709*t7800) + (-1.*t10827*t23524 - 1.*t10755*t23709 - 1.*t16497*t23738 - 1.*t13795*t23749 + t24155 + t24158)*t7878))*var2[5] - 0.5*(-0.000087*(0.707106*t10652*t5527 - 0.707106*t10652*t5657) + 2.e-6*(0.707106*t23465 - 0.707106*t5835) - 0.0055658976*(0.707106*(t23465*t24642 - 1.*t10652*t24938*t5527 - 1.*t10652*t24870*t5657 + t24704*t5835) - 0.707106*(-1.*t10652*t24870*t5527 + t10652*t24938*t5657 + t24642*t5835 + t24704*t6206)) - 9.e-6*(0.707106*t24035 - 0.707106*t7661) - 0.000567072*(0.707106*(t24035*t25160 - 1.*t10652*t25252*t5527 - 1.*t10652*t25183*t5657 + t25147*t7661) - 0.707106*(-1.*t10652*t25183*t5527 + t10652*t25252*t5657 + t25147*t7657 + t25160*t7661)))*var2[18])*var2[23];
  p_output1[20]=(-0.5*(-0.000567072*t29665 - 0.0055658976*t29683)*var2[0] - 0.5*(-0.000567072*(t29771*t6362 - 1.*t29808*t766) - 0.0055658976*(t29845*t6362 - 1.*t29895*t766))*var2[1] - 0.5*(-0.000567072*(t29808*t6362 + t29771*t766) - 0.0055658976*(t29895*t6362 + t29845*t766))*var2[2] - 0.5*(2.e-6*t29665 - 9.e-6*t29683 - 0.000087*t31246 - 0.0055658976*(t17799*t29665 + t18024*t31246 + t10897*(t30731 + t30807 + t17117*t31246 + t17619*t31385 + t10882*t31837 + t17488*t32022) + t17619*(-1.*t17117*t29665 - 1.*t17488*t29808 + t30895 + t30901 - 1.*t10897*t31385 - 1.*t31837*t7515)) - 0.000567072*(t18302*t29683 + t18427*t31246 + t18212*(t31049 + t31098 - 1.*t17117*t31246 - 1.*t17619*t31385 - 1.*t10882*t31837 - 1.*t17488*t32022) + t17619*(t17117*t29683 + t17488*t29895 + t31158 + t31191 + t18212*t31385 + t31837*t8115)))*var2[3] - 0.5*(2.e-6*t29771 - 9.e-6*t29845 - 0.000087*t30341 - 0.0055658976*(t19703*t29771 + t19984*t30341 + (t27940 + t28018 + t10830*t30392 + t30731 + t16918*t30750 + t30807)*t6319 + t17676*(t28156 + t28208 - 1.*t16918*t29450 + t30895 + t30901 - 1.*t30392*t7475)) - 0.000567072*(t20278*t29845 + t20525*t30341 + (t28326 + t28391 - 1.*t10830*t30392 - 1.*t16918*t30750 + t31049 + t31098)*t7834 + t17676*(t28435 + t28483 + t16918*t29680 + t31158 + t31191 + t30392*t7888)))*var2[4] - 0.5*(-0.000087*t27685 + 2.e-6*t27751 - 9.e-6*t27817 - 0.0055658976*(t21983*t27685 + t21866*t27751 + t10676*(t28156 - 1.*t16497*t28164 - 1.*t13795*t28202 + t28208 - 1.*t27877*t6235 - 1.*t28014*t6281) + (t10827*t27877 + t27940 + t10755*t28014 + t28018 + t16497*t28026 + t13795*t28097)*t6567) - 0.000567072*(t22188*t27685 + t22061*t27817 + t10676*(t16497*t28407 + t28435 + t13795*t28473 + t28483 + t27877*t7663 + t28014*t7800) + (-1.*t10827*t27877 - 1.*t10755*t28014 - 1.*t16497*t28026 - 1.*t13795*t28097 + t28326 + t28391)*t7878))*var2[5] - 0.5*(-0.000087*(-0.707106*t26637*t5527 - 0.707106*t26637*t5657) + 2.e-6*(-0.707106*t26861*t5527 - 0.707106*t26861*t5657) - 9.e-6*(-0.707106*t27391*t5527 - 0.707106*t27391*t5657) - 0.0055658976*(0.707106*(-1.*t24870*t26637*t5527 - 1.*t24642*t26861*t5527 - 1.*t10652*t28829*t5527 + t28790*t5835) - 0.707106*(t24870*t26637*t5657 + t24642*t26861*t5657 + t10652*t28829*t5657 + t28790*t6206) + 0.024749*t7639) - 0.000567072*(0.024749*t5644 - 0.707106*(t25183*t26637*t5657 + t25160*t27391*t5657 + t10652*t29241*t5657 + t29129*t7657) + 0.707106*(-1.*t25183*t26637*t5527 - 1.*t25160*t27391*t5527 - 1.*t10652*t29241*t5527 + t29129*t7661)))*var2[18] - 0.5*(-0.000087*t10652 + 2.e-6*t5644 - 0.0055658976*(t10652*t26939 + (t13089*t26637 + t26662 + t10652*t26748 + t26788)*t5394 + t26617*t5644 + t10385*(-1.*t13089*t26861 + t26893 + t26898 - 1.*t26748*t5644) + 0.05*t7611) - 9.e-6*t7639 - 0.000567072*(t10652*t27487 + 0.05*t5394 + (-1.*t13089*t26637 - 1.*t10652*t26748 + t27268 + t27315)*t7611 + t27243*t7639 + t10385*(t27326 + t13089*t27391 + t27414 + t26748*t7639)))*var2[19])*var2[23];
  p_output1[21]=(t51248 + t51288 + t51303 - 0.5*(t51415 + t51424 + t51425 - 0.0055658976*(t51426 + t10897*(t51351 + t51368 + t17619*t51430 + t10882*t51435 + t51437 + t51450) + t51464 + t17619*(t51380 + t51382 - 1.*t10897*t51430 + t51457 + t51458 - 1.*t51435*t7515)) - 0.000567072*(t51481 + t18212*(t51396 + t51398 - 1.*t17619*t51430 - 1.*t10882*t51435 + t51489 + t51490) + t51502 + t17619*(t51402 + t51404 + t18212*t51430 + t51494 + t51495 + t51435*t8115)))*var2[3] - 0.5*(t51308 + t51309 + t51310 - 0.0055658976*(t51317 + t51385 + (t50287 + t50330 + t10830*t51334 + t51351 + t51367 + t51368)*t6319 + t17676*(t50512 + t50599 + t51378 + t51380 + t51382 - 1.*t51334*t7475)) - 0.000567072*(t51394 + t51407 + (t50644 + t50653 - 1.*t10830*t51334 + t51396 + t51397 + t51398)*t7834 + t17676*(t50726 + t50940 + t51401 + t51402 + t51404 + t51334*t7888)))*var2[4] - 0.5*(t44574 + t44819 + t49762 - 0.0055658976*(t49764 + t50606 + t10676*(t50512 + t50517 + t50597 + t50599 - 1.*t49874*t6235 - 1.*t50316*t6281) + (t10827*t49874 + t50287 + t10755*t50316 + t50330 + t50416 + t50463)*t6567) - 0.000567072*(t50641 + t50958 + t10676*(t50725 + t50726 + t50745 + t50940 + t49874*t7663 + t50316*t7800) + (-1.*t10827*t49874 - 1.*t10755*t50316 + t50644 + t50653 + t50659 + t50664)*t7878))*var2[5] - 0.5*(t50975 + t50983 + t50996 - 0.0055658976*(t50997 + 0.707106*(t51099 + t51102 - 1.*t10652*t51078*t5527 + t51042*t5835) - 0.707106*(t50999 + t51088 + t10652*t51078*t5657 + t51042*t6206)) - 0.000567072*(t51120 - 0.707106*(t51121 + t51140 + t10652*t51138*t5657 + t51130*t7657) + 0.707106*(t51150 + t51157 - 1.*t10652*t51138*t5527 + t51130*t7661)))*var2[18] - 0.5*(t37000 + t37310 + t37862 - 0.0055658976*(t37863 + t40031 + t40545 + (t38036 + t38079 + t38571 + t10652*t39457)*t5394 + t10385*(t39600 + t39613 + t39678 - 1.*t39457*t5644)) - 0.000567072*(t40848 + t40866 + t41272 + (-1.*t10652*t39457 + t40890 + t40905 + t40906)*t7611 + t10385*(t41273 + t41756 + t41804 + t39457*t7639)))*var2[19] - 0.5*(-0.000567072*(t35281 + t3863*(t35827 + t36060 - 1.*t10255*t36501 - 1.*t35815*t9834)) - 0.0055658976*(t36917 - 1.*t5689*(t10255*t36501 + t36713 + t36834 + t35815*t9834)))*var2[20])*var2[23];
  p_output1[22]=(t51248 + t51288 + t51303 - 0.5*(t51415 + t51424 + t51425 - 0.0055658976*(t51426 + t51464 + t10897*(t51368 + t51437 + t51450 + t51939 + t17619*t52022 + t10882*t52105) + t17619*(t51380 + t51457 + t51458 + t51949 - 1.*t10897*t52022 - 1.*t52105*t7515)) - 0.000567072*(t51481 + t51502 + t18212*(t51398 + t51489 + t51490 + t51975 - 1.*t17619*t52022 - 1.*t10882*t52105) + t17619*(t51402 + t51494 + t51495 + t52011 + t18212*t52022 + t52105*t8115)))*var2[3] - 0.5*(t51308 + t51309 + t51310 - 0.0055658976*(t51317 + t51385 + (t50330 + t51367 + t51368 + t51708 + t10830*t51932 + t51939)*t6319 + t17676*(t50512 + t51378 + t51380 + t51729 + t51949 - 1.*t51932*t7475)) - 0.000567072*(t51394 + t51407 + (t50653 + t51397 + t51398 + t51762 - 1.*t10830*t51932 + t51975)*t7834 + t17676*(t50726 + t51401 + t51402 + t51768 + t52011 + t51932*t7888)))*var2[4] - 0.5*(t44574 + t44819 + t49762 - 0.0055658976*(t49764 + t50606 + t10676*(t50512 + t50517 + t50597 + t51729 - 1.*t51672*t6235 - 1.*t51712*t6281) + (t50330 + t50416 + t50463 + t10827*t51672 + t51708 + t10755*t51712)*t6567) - 0.000567072*(t50641 + t50958 + t10676*(t50725 + t50726 + t50745 + t51768 + t51672*t7663 + t51712*t7800) + (t50653 + t50659 + t50664 - 1.*t10827*t51672 - 1.*t10755*t51712 + t51762)*t7878))*var2[5] - 0.5*(t50975 + t50983 + t50996 - 0.0055658976*(t50997 + 0.707106*(t51099 + t51102 - 1.*t10652*t51811*t5527 + t51805*t5835) - 0.707106*(t50999 + t51088 + t10652*t51811*t5657 + t51805*t6206)) - 0.000567072*(t51120 - 0.707106*(t51121 + t51140 + t10652*t51881*t5657 + t51870*t7657) + 0.707106*(t51150 + t51157 - 1.*t10652*t51881*t5527 + t51870*t7661)))*var2[18] - 0.5*(t37000 + t37310 + t37862 - 0.0055658976*(t37863 + t40031 + t40545 + (t38036 + t38079 + t51615 + t10652*t51618)*t5394 + t10385*(t39600 + t39613 + t51623 - 1.*t51618*t5644)) - 0.000567072*(t40848 + t40866 + t41272 + (t40890 + t40905 - 1.*t10652*t51618 + t51638)*t7611 + t10385*(t41273 + t41756 + t51653 + t51618*t7639)))*var2[19] - 0.5*(-0.000567072*(t35281 + t3863*(t35827 + t36060 - 1.*t10255*t51577 - 1.*t51566*t9834)) - 0.0055658976*(t36917 - 1.*t5689*(t36713 + t36834 + t10255*t51577 + t51566*t9834)))*var2[20] - 0.5*(-0.000567072*(0.185*t3862*t3863 + t3863*(t11554*t3862 + t11812*t4660 - 1.*t3862*t51527 + t4660*t51535)) - 0.0055658976*(0.185*t3862*t5689 - 1.*(-1.*t11554*t3862 - 1.*t11812*t4660 + t3862*t51527 - 1.*t4660*t51535)*t5689))*var2[21])*var2[23];
  p_output1[23]=(-0.5*(-0.0055658976*t10897 - 0.000567072*t57554)*var2[0] - 0.5*(-0.000567072*(t57564*t6362 - 1.*t57568*t766) - 0.0055658976*t8535)*var2[1] - 0.5*(-0.000567072*(t57568*t6362 + t57564*t766) - 0.0055658976*(t6362*t7515 + t6319*t766))*var2[2] - 0.5*(-9.e-6*t10897 + 2.e-6*t57554 - 0.0055658976*(t17799*t57554 + t10897*(t57755 + t17619*t57807 + t10882*t57812) + t17619*(-1.*t17117*t57554 - 1.*t17488*t57568 + t57775 + t57780 - 1.*t10897*t57807 - 1.*t57812*t7515)) - 0.000567072*(t10897*t18302 + t18212*(t57711 - 1.*t17619*t57807 - 1.*t10882*t57812) + t17619*(t10897*t17117 + t57720 + t57724 + t18212*t57807 + t17488*t7515 + t57812*t8115)))*var2[3] - 0.5*(2.e-6*t57564 - 9.e-6*t6319 - 0.0055658976*(t19703*t57564 + (t57344 + t10830*t57693 + t57755)*t6319 + t17676*(t57364 + t57389 - 1.*t16918*t57547 + t57775 + t57780 - 1.*t57693*t7475)) - 0.000567072*(t20278*t6319 + (t57191 - 1.*t10830*t57693 + t57711)*t7834 + t17676*(t57264 + t57310 + t57720 + t57724 + t16918*t7475 + t57693*t7888)))*var2[4] - 0.5*(2.e-6*t57150 - 9.e-6*t6567 - 0.0055658976*(t21866*t57150 + t10676*(t57364 - 1.*t16497*t57387 + t57389 - 1.*t13795*t57433 - 1.*t57194*t6235 - 1.*t57243*t6281) + (t10827*t57194 + t10755*t57243 + t57344)*t6567) - 0.000567072*(t22061*t6567 + t10676*(t57264 + t57310 + t16497*t6235 + t13795*t6281 + t57194*t7663 + t57243*t7800) + (t57191 - 1.*t10827*t57194 - 1.*t10755*t57243)*t7878))*var2[5] - 0.5*(2.e-6*(-0.707106*t57111 + 0.707106*t57115) - 9.e-6*(0.707106*t5835 - 0.707106*t6206) - 0.0055658976*(0.024749*t5394 + 0.707106*(t24642*t57115 - 1.*t10652*t5527*t57519 + t57511*t5835) - 0.707106*(t24642*t57111 + t10652*t5657*t57519 + t57511*t6206)) - 0.000567072*(0.024749*t56789 - 0.707106*(t10652*t5657*t57497 + t25160*t6206 + t57455*t7657) + 0.707106*(-1.*t10652*t5527*t57497 + t25160*t5835 + t57455*t7661)))*var2[18] - 0.5*(-9.e-6*t5394 + 2.e-6*t56789 - 0.0055658976*(0.05*(t4662*t5245 - 1.*t3666*t5302) + t26617*t56789 + 0.085*t5689 + t5394*(t10652*t56856 + t57041) + t10385*(t27464 - 1.*t5644*t56856 + t5689*t56982 + t57092 - 1.*t13089*t57096 + t57099)) - 0.000567072*(0.085*t3863 + t27243*t5394 + 0.05*(t37365 - 1.*t3666*t56748) + (-1.*t10652*t56856 + t56883)*t7611 + t10385*(t13089*t5644 - 1.*t13436*t5689 + t56931 + t3863*t56982 + t57006 + t56856*t7639)))*var2[19] - 0.5*(t52286 + t55522 - 0.000567072*(0.085*t37363 - 1.*t5689*(-1.*t10255*t12002 - 1.*t12283*t9834) + t3863*(-1.*t10255*t56300 - 1.*t56423*t9834)) - 0.0055658976*(0.085*t4662 - 1.*t3863*(t10255*t12002 + t12283*t9834) - 1.*t5689*(t10255*t56300 + t56423*t9834)))*var2[20] - 0.5*(-0.0055658976*(0.185*t3863*t4660 - 1.*t3863*(t11812*t3862 - 1.*t11554*t4660)) + t52286 + t55522 - 0.000567072*(-0.185*t4660*t5689 - 1.*(-1.*t11812*t3862 + t11554*t4660)*t5689))*var2[21] - 0.5*(0.000139485116992*t3863 - 5.41497024e-6*t5689)*var2[22])*var2[23];
  p_output1[24]=0;
  p_output1[25]=0;
  p_output1[26]=0;
  p_output1[27]=0;
  p_output1[28]=0;
  p_output1[29]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 30 && ncols == 1) && 
      !(mrows == 1 && ncols == 30))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 30 && ncols == 1) && 
      !(mrows == 1 && ncols == 30))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 30, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "Ce3_vec24_NaoH25V50.hh"

namespace SymFunction
{

void Ce3_vec24_NaoH25V50_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
