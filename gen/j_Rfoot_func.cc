/*
 * Automatically Generated from Mathematica.
 * Tue 10 Jul 2018 22:07:08 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;


#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t7;
  double t12;
  double t18;
  double t22;
  double t19;
  double t23;
  double t39;
  double t20;
  double t26;
  double t28;
  double t44;
  double t40;
  double t41;
  double t46;
  double t48;
  double t54;
  double t71;
  double t72;
  double t58;
  double t61;
  double t84;
  double t85;
  double t34;
  double t43;
  double t56;
  double t62;
  double t65;
  double t66;
  double t69;
  double t70;
  double t74;
  double t78;
  double t80;
  double t82;
  double t86;
  double t87;
  double t89;
  double t91;
  double t93;
  double t94;
  double t97;
  double t98;
  double t99;
  double t100;
  double t101;
  double t102;
  double t103;
  double t105;
  double t106;
  double t113;
  double t114;
  double t115;
  double t140;
  double t142;
  double t143;
  double t148;
  double t149;
  double t150;
  double t119;
  double t121;
  double t147;
  double t153;
  double t154;
  double t155;
  double t156;
  double t157;
  double t160;
  double t161;
  double t162;
  double t163;
  double t164;
  double t166;
  double t167;
  double t168;
  double t169;
  double t170;
  double t172;
  double t173;
  double t124;
  double t193;
  double t194;
  double t196;
  double t199;
  double t200;
  double t201;
  double t192;
  double t197;
  double t202;
  double t203;
  double t207;
  double t208;
  double t209;
  double t210;
  double t218;
  double t219;
  double t220;
  double t221;
  double t223;
  double t224;
  double t225;
  double t222;
  double t226;
  double t227;
  double t229;
  double t230;
  double t231;
  double t214;
  double t191;
  double t215;
  double t216;
  double t217;
  double t178;
  double t179;
  double t182;
  double t235;
  double t236;
  double t176;
  double t185;
  double t186;
  double t204;
  double t211;
  double t212;
  double t228;
  double t232;
  double t233;
  double t234;
  double t237;
  double t238;
  double t239;
  double t240;
  double t241;
  double t256;
  double t257;
  double t258;
  double t244;
  double t245;
  double t246;
  double t248;
  double t249;
  double t250;
  double t251;
  double t252;
  double t253;
  double t259;
  double t260;
  double t261;
  double t262;
  double t263;
  double t264;
  double t265;
  double t273;
  double t274;
  double t278;
  double t279;
  double t280;
  double t281;
  double t282;
  double t283;
  double t247;
  double t254;
  double t255;
  double t267;
  double t268;
  double t269;
  double t294;
  double t295;
  double t296;
  double t297;
  double t299;
  double t300;
  double t301;
  double t302;
  double t303;
  double t304;
  double t305;
  double t306;
  double t307;
  double t308;
  double t309;
  double t298;
  double t310;
  double t311;
  double t313;
  double t314;
  double t315;
  double t125;
  double t131;
  double t132;
  double t122;
  double t133;
  double t135;
  double t312;
  double t316;
  double t317;
  double t318;
  double t319;
  double t320;
  double t321;
  double t322;
  double t323;
  double t331;
  double t332;
  double t333;
  double t334;
  double t335;
  double t336;
  double t337;
  double t339;
  double t340;
  double t355;
  double t356;
  double t357;
  double t358;
  double t359;
  double t360;
  double t361;
  double t362;
  double t363;
  double t364;
  double t365;
  double t366;
  double t367;
  double t368;
  double t369;
  double t370;
  double t371;
  double t372;
  double t384;
  double t385;
  double t386;
  double t387;
  double t388;
  double t389;
  double t390;
  double t391;
  double t392;
  double t393;
  double t394;
  double t395;
  double t396;
  double t397;
  double t398;
  double t399;
  double t400;
  double t401;
  double t413;
  double t414;
  double t415;
  double t416;
  double t417;
  double t418;
  double t419;
  double t420;
  double t421;
  double t422;
  double t423;
  double t424;
  double t425;
  double t426;
  double t427;
  double t428;
  double t429;
  double t430;
  double t433;
  double t434;
  double t435;
  double t432;
  double t436;
  double t437;
  double t440;
  double t441;
  double t442;
  double t444;
  double t445;
  double t446;
  double t447;
  double t448;
  double t449;
  double t213;
  double t242;
  double t243;
  double t285;
  double t286;
  double t287;
  double t453;
  double t454;
  double t455;
  double t443;
  double t450;
  double t451;
  double t288;
  double t277;
  double t404;
  double t405;
  double t406;
  double t403;
  double t407;
  double t408;
  double t330;
  double t338;
  double t341;
  double t342;
  double t343;
  double t344;
  double t345;
  double t346;
  double t347;
  double t348;
  double t349;
  double t350;
  double t351;
  double t375;
  double t376;
  double t377;
  double t374;
  double t378;
  double t379;
  double t486;
  double t487;
  double t488;
  double t489;
  double t490;
  double t491;
  double t492;
  double t493;
  double t494;
  double t495;
  double t496;
  double t497;
  double t498;
  double t499;
  double t509;
  double t510;
  double t511;
  double t513;
  double t514;
  double t515;
  double t516;
  double t517;
  double t518;
  double t519;
  double t520;
  double t521;
  double t522;
  double t523;
  double t524;
  double t525;
  double t526;
  double t537;
  double t538;
  double t539;
  double t540;
  double t541;
  double t542;
  double t543;
  double t544;
  double t545;
  double t546;
  double t547;
  double t548;
  double t549;
  double t552;
  double t553;
  double t554;
  double t551;
  double t555;
  double t556;
  double t559;
  double t560;
  double t561;
  double t563;
  double t564;
  double t565;
  double t566;
  double t567;
  double t568;
  double t562;
  double t569;
  double t570;
  double t572;
  double t573;
  double t574;
  double t502;
  double t503;
  double t504;
  double t501;
  double t505;
  double t506;
  double t480;
  double t481;
  double t482;
  double t529;
  double t530;
  double t531;
  double t528;
  double t532;
  double t533;
  double t601;
  double t602;
  double t603;
  double t604;
  double t605;
  double t606;
  double t607;
  double t608;
  double t609;
  double t610;
  double t611;
  double t612;
  double t613;
  double t614;
  double t615;
  double t616;
  double t617;
  double t618;
  double t628;
  double t629;
  double t630;
  double t631;
  double t632;
  double t633;
  double t634;
  double t635;
  double t636;
  double t637;
  double t638;
  double t639;
  double t640;
  double t641;
  double t642;
  double t643;
  double t644;
  double t645;
  double t655;
  double t656;
  double t657;
  double t658;
  double t659;
  double t660;
  double t661;
  double t662;
  double t663;
  double t664;
  double t665;
  double t666;
  double t667;
  double t668;
  double t669;
  double t670;
  double t671;
  double t672;
  double t675;
  double t676;
  double t677;
  double t674;
  double t678;
  double t679;
  double t682;
  double t683;
  double t684;
  double t686;
  double t687;
  double t688;
  double t689;
  double t690;
  double t691;
  double t685;
  double t692;
  double t693;
  double t695;
  double t696;
  double t697;
  double t621;
  double t622;
  double t623;
  double t620;
  double t624;
  double t625;
  double t648;
  double t649;
  double t650;
  double t647;
  double t651;
  double t652;
  double t724;
  double t725;
  double t726;
  double t733;
  double t734;
  double t735;
  double t742;
  double t743;
  double t744;
  double t746;
  double t747;
  double t748;
  double t752;
  double t753;
  double t754;
  double t755;
  double t756;
  double t757;
  double t761;
  double t762;
  double t763;
  double t751;
  double t758;
  double t759;
  double t737;
  double t738;
  double t739;
  double t728;
  double t729;
  double t730;
  double t809;
  double t810;
  double t811;
  double t812;
  double t813;
  double t814;
  double t817;
  double t818;
  double t819;
  double t820;
  double t821;
  double t822;
  double t800;
  double t801;
  double t802;
  double t803;
  double t804;
  double t805;
  double t791;
  double t792;
  double t793;
  double t794;
  double t795;
  double t796;
  double t856;
  double t857;
  double t859;
  double t860;
  double t861;
  double t862;
  double t863;
  double t864;
  double t853;
  double t854;
  double t850;
  double t851;
  double t892;
  double t893;
  t7 = Cos(var1[3]);
  t12 = Cos(var1[4]);
  t18 = Cos(var1[5]);
  t22 = Sin(var1[4]);
  t19 = Sin(var1[3]);
  t23 = Sin(var1[5]);
  t39 = Sin(var1[24]);
  t20 = -1.*t18*t19;
  t26 = -1.*t7*t22*t23;
  t28 = t20 + t26;
  t44 = Cos(var1[24]);
  t40 = -0.707107*t39;
  t41 = 0. + t40;
  t46 = t7*t18*t22;
  t48 = -1.*t19*t23;
  t54 = t46 + t48;
  t71 = 0.707107*t44;
  t72 = 0. + t71;
  t58 = 0.707107*t39;
  t61 = 0. + t58;
  t84 = -0.707107*t44;
  t85 = 0. + t84;
  t34 = Sin(var1[26]);
  t43 = -1.*t7*t12*t41;
  t56 = t44*t54;
  t62 = t61*t28;
  t65 = t43 + t56 + t62;
  t66 = t34*t65;
  t69 = Cos(var1[26]);
  t70 = Sin(var1[25]);
  t74 = -0.707107*t72;
  t78 = 0.5000003094490001 + t74;
  t80 = -1.*t78*t7*t12;
  t82 = t41*t54;
  t86 = -0.707107*t85;
  t87 = 0.5000003094490001 + t86;
  t89 = t87*t28;
  t91 = t80 + t82 + t89;
  t93 = -1.*t70*t91;
  t94 = Cos(var1[25]);
  t97 = 0.707107*t72;
  t98 = 0.5000003094490001 + t97;
  t99 = -1.*t98*t7*t12;
  t100 = t61*t54;
  t101 = 0.707107*t85;
  t102 = 0.5000003094490001 + t101;
  t103 = t102*t28;
  t105 = t99 + t100 + t103;
  t106 = t94*t105;
  t113 = t93 + t106;
  t114 = t69*t113;
  t115 = t66 + t114;
  t140 = t7*t18;
  t142 = -1.*t19*t22*t23;
  t143 = t140 + t142;
  t148 = t18*t19*t22;
  t149 = t7*t23;
  t150 = t148 + t149;
  t119 = Cos(var1[27]);
  t121 = 0. + t119;
  t147 = -1.*t12*t41*t19;
  t153 = t44*t150;
  t154 = t61*t143;
  t155 = t147 + t153 + t154;
  t156 = t34*t155;
  t157 = -1.*t78*t12*t19;
  t160 = t41*t150;
  t161 = t87*t143;
  t162 = t157 + t160 + t161;
  t163 = -1.*t70*t162;
  t164 = -1.*t98*t12*t19;
  t166 = t61*t150;
  t167 = t102*t143;
  t168 = t164 + t166 + t167;
  t169 = t94*t168;
  t170 = t163 + t169;
  t172 = t69*t170;
  t173 = t156 + t172;
  t124 = Sin(var1[27]);
  t193 = -1.*t7*t18*t22;
  t194 = t19*t23;
  t196 = t193 + t194;
  t199 = t18*t19;
  t200 = t7*t22*t23;
  t201 = t199 + t200;
  t192 = t78*t7*t12;
  t197 = t41*t196;
  t202 = t87*t201;
  t203 = 0. + t192 + t197 + t202;
  t207 = t98*t7*t12;
  t208 = t61*t196;
  t209 = t102*t201;
  t210 = 0. + t207 + t208 + t209;
  t218 = t7*t12*t41;
  t219 = t44*t196;
  t220 = t61*t201;
  t221 = t218 + t219 + t220;
  t223 = -1.*t70*t203;
  t224 = t94*t210;
  t225 = t223 + t224;
  t222 = t34*t221;
  t226 = t69*t225;
  t227 = t222 + t226;
  t229 = t69*t221;
  t230 = -1.*t34*t225;
  t231 = t229 + t230;
  t214 = Sin(var1[29]);
  t191 = Cos(var1[29]);
  t215 = Sin(var1[28]);
  t216 = -1.*t124;
  t217 = 0. + t216;
  t178 = t69*t155;
  t179 = -1.*t34*t170;
  t182 = t178 + t179;
  t235 = Cos(var1[28]);
  t236 = 0. + t235;
  t176 = t121*t173;
  t185 = t124*t182;
  t186 = t176 + t185;
  t204 = t94*t203;
  t211 = t70*t210;
  t212 = 0. + t204 + t211;
  t228 = t217*t227;
  t232 = t119*t231;
  t233 = t228 + t232;
  t234 = t215*t233;
  t237 = t121*t227;
  t238 = t124*t231;
  t239 = t237 + t238;
  t240 = t236*t239;
  t241 = t234 + t240;
  t256 = -1.*t214*t212;
  t257 = t191*t241;
  t258 = t256 + t257;
  t244 = t94*t162;
  t245 = t70*t168;
  t246 = t244 + t245;
  t248 = t217*t173;
  t249 = t119*t182;
  t250 = t248 + t249;
  t251 = t215*t250;
  t252 = t236*t186;
  t253 = t251 + t252;
  t259 = Power(t258,2);
  t260 = t191*t212;
  t261 = t214*t241;
  t262 = t260 + t261;
  t263 = Power(t262,2);
  t264 = t259 + t263;
  t265 = 1/t264;
  t273 = -1.*t215;
  t274 = 0. + t273;
  t278 = -1.*t235*t233;
  t279 = -1.*t274*t239;
  t280 = t278 + t279;
  t281 = Power(t280,2);
  t282 = t281 + t259 + t263;
  t283 = 1/t282;
  t247 = -1.*t214*t246;
  t254 = t191*t253;
  t255 = t247 + t254;
  t267 = t191*t246;
  t268 = t214*t253;
  t269 = t267 + t268;
  t294 = t44*t12*t18;
  t295 = t41*t22;
  t296 = -1.*t12*t61*t23;
  t297 = t294 + t295 + t296;
  t299 = t12*t18*t41;
  t300 = t78*t22;
  t301 = -1.*t87*t12*t23;
  t302 = 0. + t299 + t300 + t301;
  t303 = -1.*t70*t302;
  t304 = t12*t18*t61;
  t305 = t98*t22;
  t306 = -1.*t102*t12*t23;
  t307 = 0. + t304 + t305 + t306;
  t308 = t94*t307;
  t309 = t303 + t308;
  t298 = t34*t297;
  t310 = t69*t309;
  t311 = t298 + t310;
  t313 = t69*t297;
  t314 = -1.*t34*t309;
  t315 = t313 + t314;
  t125 = t69*t65;
  t131 = -1.*t34*t113;
  t132 = t125 + t131;
  t122 = t121*t115;
  t133 = t124*t132;
  t135 = t122 + t133;
  t312 = t217*t311;
  t316 = t119*t315;
  t317 = t312 + t316;
  t318 = t235*t317;
  t319 = t121*t311;
  t320 = t124*t315;
  t321 = t319 + t320;
  t322 = t274*t321;
  t323 = t318 + t322;
  t331 = 0. + t157 + t160 + t161;
  t332 = -1.*t70*t331;
  t333 = 0. + t164 + t166 + t167;
  t334 = t94*t333;
  t335 = t332 + t334;
  t336 = t69*t335;
  t337 = t156 + t336;
  t339 = -1.*t34*t335;
  t340 = t178 + t339;
  t355 = t12*t41;
  t356 = -1.*t44*t18*t22;
  t357 = t61*t22*t23;
  t358 = t355 + t356 + t357;
  t359 = t34*t358;
  t360 = t78*t12;
  t361 = -1.*t18*t41*t22;
  t362 = t87*t22*t23;
  t363 = t360 + t361 + t362;
  t364 = -1.*t70*t363;
  t365 = t98*t12;
  t366 = -1.*t18*t61*t22;
  t367 = t102*t22*t23;
  t368 = t365 + t366 + t367;
  t369 = t94*t368;
  t370 = t364 + t369;
  t371 = t69*t370;
  t372 = t359 + t371;
  t384 = t44*t12*t18*t19;
  t385 = t41*t19*t22;
  t386 = -1.*t12*t61*t19*t23;
  t387 = t384 + t385 + t386;
  t388 = t34*t387;
  t389 = t12*t18*t41*t19;
  t390 = t78*t19*t22;
  t391 = -1.*t87*t12*t19*t23;
  t392 = t389 + t390 + t391;
  t393 = -1.*t70*t392;
  t394 = t12*t18*t61*t19;
  t395 = t98*t19*t22;
  t396 = -1.*t102*t12*t19*t23;
  t397 = t394 + t395 + t396;
  t398 = t94*t397;
  t399 = t393 + t398;
  t400 = t69*t399;
  t401 = t388 + t400;
  t413 = -1.*t44*t7*t12*t18;
  t414 = -1.*t7*t41*t22;
  t415 = t7*t12*t61*t23;
  t416 = t413 + t414 + t415;
  t417 = t34*t416;
  t418 = -1.*t7*t12*t18*t41;
  t419 = -1.*t78*t7*t22;
  t420 = t87*t7*t12*t23;
  t421 = t418 + t419 + t420;
  t422 = -1.*t70*t421;
  t423 = -1.*t7*t12*t18*t61;
  t424 = -1.*t98*t7*t22;
  t425 = t102*t7*t12*t23;
  t426 = t423 + t424 + t425;
  t427 = t94*t426;
  t428 = t422 + t427;
  t429 = t69*t428;
  t430 = t417 + t429;
  t433 = t69*t416;
  t434 = -1.*t34*t428;
  t435 = t433 + t434;
  t432 = t121*t430;
  t436 = t124*t435;
  t437 = t432 + t436;
  t440 = t94*t421;
  t441 = t70*t426;
  t442 = t440 + t441;
  t444 = t217*t430;
  t445 = t119*t435;
  t446 = t444 + t445;
  t447 = t215*t446;
  t448 = t236*t437;
  t449 = t447 + t448;
  t213 = -1.*t191*t212;
  t242 = -1.*t214*t241;
  t243 = t213 + t242;
  t285 = t235*t233;
  t286 = t274*t239;
  t287 = t285 + t286;
  t453 = -1.*t214*t442;
  t454 = t191*t449;
  t455 = t453 + t454;
  t443 = t191*t442;
  t450 = t214*t449;
  t451 = t443 + t450;
  t288 = 1/Sqrt(t264);
  t277 = Sqrt(t264);
  t404 = t69*t387;
  t405 = -1.*t34*t399;
  t406 = t404 + t405;
  t403 = t121*t401;
  t407 = t124*t406;
  t408 = t403 + t407;
  t330 = Power(t323,2);
  t338 = t217*t337;
  t341 = t119*t340;
  t342 = t338 + t341;
  t343 = t235*t342;
  t344 = t121*t337;
  t345 = t124*t340;
  t346 = t344 + t345;
  t347 = t274*t346;
  t348 = t343 + t347;
  t349 = Power(t348,2);
  t350 = t330 + t349;
  t351 = 1/t350;
  t375 = t69*t358;
  t376 = -1.*t34*t370;
  t377 = t375 + t376;
  t374 = t121*t372;
  t378 = t124*t377;
  t379 = t374 + t378;
  t486 = -1.*t12*t18*t61;
  t487 = -1.*t44*t12*t23;
  t488 = t486 + t487;
  t489 = t34*t488;
  t490 = -1.*t87*t12*t18;
  t491 = -1.*t12*t41*t23;
  t492 = t490 + t491;
  t493 = -1.*t70*t492;
  t494 = -1.*t102*t12*t18;
  t495 = t494 + t296;
  t496 = t94*t495;
  t497 = t493 + t496;
  t498 = t69*t497;
  t499 = t489 + t498;
  t509 = -1.*t18*t19*t22;
  t510 = -1.*t7*t23;
  t511 = t509 + t510;
  t513 = t61*t511;
  t514 = t44*t143;
  t515 = t513 + t514;
  t516 = t34*t515;
  t517 = t87*t511;
  t518 = t41*t143;
  t519 = t517 + t518;
  t520 = -1.*t70*t519;
  t521 = t102*t511;
  t522 = t521 + t154;
  t523 = t94*t522;
  t524 = t520 + t523;
  t525 = t69*t524;
  t526 = t516 + t525;
  t537 = t44*t201;
  t538 = t100 + t537;
  t539 = t34*t538;
  t540 = t87*t54;
  t541 = t41*t201;
  t542 = t540 + t541;
  t543 = -1.*t70*t542;
  t544 = t102*t54;
  t545 = t544 + t220;
  t546 = t94*t545;
  t547 = t543 + t546;
  t548 = t69*t547;
  t549 = t539 + t548;
  t552 = t69*t538;
  t553 = -1.*t34*t547;
  t554 = t552 + t553;
  t551 = t121*t549;
  t555 = t124*t554;
  t556 = t551 + t555;
  t559 = t94*t542;
  t560 = t70*t545;
  t561 = t559 + t560;
  t563 = t217*t549;
  t564 = t119*t554;
  t565 = t563 + t564;
  t566 = t215*t565;
  t567 = t236*t556;
  t568 = t566 + t567;
  t562 = -1.*t214*t561;
  t569 = t191*t568;
  t570 = t562 + t569;
  t572 = t191*t561;
  t573 = t214*t568;
  t574 = t572 + t573;
  t502 = t69*t488;
  t503 = -1.*t34*t497;
  t504 = t502 + t503;
  t501 = t121*t499;
  t505 = t124*t504;
  t506 = t501 + t505;
  t480 = -1.*t235*t342;
  t481 = -1.*t274*t346;
  t482 = t480 + t481;
  t529 = t69*t515;
  t530 = -1.*t34*t524;
  t531 = t529 + t530;
  t528 = t121*t526;
  t532 = t124*t531;
  t533 = t528 + t532;
  t601 = -1.*t12*t18*t39;
  t602 = -0.707107*t44*t22;
  t603 = -0.707107*t44*t12*t23;
  t604 = t601 + t602 + t603;
  t605 = t34*t604;
  t606 = 0.707107*t44*t12*t18;
  t607 = -0.5000003094490001*t39*t22;
  t608 = -0.5000003094490001*t12*t39*t23;
  t609 = t606 + t607 + t608;
  t610 = t94*t609;
  t611 = -0.707107*t44*t12*t18;
  t612 = 0.5000003094490001*t39*t22;
  t613 = 0.5000003094490001*t12*t39*t23;
  t614 = t611 + t612 + t613;
  t615 = -1.*t70*t614;
  t616 = t610 + t615;
  t617 = t69*t616;
  t618 = t605 + t617;
  t628 = 0.707107*t44*t12*t19;
  t629 = -1.*t39*t150;
  t630 = 0.707107*t44*t143;
  t631 = t628 + t629 + t630;
  t632 = t34*t631;
  t633 = -0.5000003094490001*t12*t39*t19;
  t634 = -0.707107*t44*t150;
  t635 = -0.5000003094490001*t39*t143;
  t636 = t633 + t634 + t635;
  t637 = -1.*t70*t636;
  t638 = 0.5000003094490001*t12*t39*t19;
  t639 = 0.707107*t44*t150;
  t640 = 0.5000003094490001*t39*t143;
  t641 = t638 + t639 + t640;
  t642 = t94*t641;
  t643 = t637 + t642;
  t644 = t69*t643;
  t645 = t632 + t644;
  t655 = -0.707107*t44*t7*t12;
  t656 = -1.*t39*t196;
  t657 = 0.707107*t44*t201;
  t658 = t655 + t656 + t657;
  t659 = t34*t658;
  t660 = 0.5000003094490001*t7*t12*t39;
  t661 = -0.707107*t44*t196;
  t662 = -0.5000003094490001*t39*t201;
  t663 = t660 + t661 + t662;
  t664 = -1.*t70*t663;
  t665 = -0.5000003094490001*t7*t12*t39;
  t666 = 0.707107*t44*t196;
  t667 = 0.5000003094490001*t39*t201;
  t668 = t665 + t666 + t667;
  t669 = t94*t668;
  t670 = t664 + t669;
  t671 = t69*t670;
  t672 = t659 + t671;
  t675 = t69*t658;
  t676 = -1.*t34*t670;
  t677 = t675 + t676;
  t674 = t121*t672;
  t678 = t124*t677;
  t679 = t674 + t678;
  t682 = t94*t663;
  t683 = t70*t668;
  t684 = t682 + t683;
  t686 = t217*t672;
  t687 = t119*t677;
  t688 = t686 + t687;
  t689 = t215*t688;
  t690 = t236*t679;
  t691 = t689 + t690;
  t685 = -1.*t214*t684;
  t692 = t191*t691;
  t693 = t685 + t692;
  t695 = t191*t684;
  t696 = t214*t691;
  t697 = t695 + t696;
  t621 = t69*t604;
  t622 = -1.*t34*t616;
  t623 = t621 + t622;
  t620 = t121*t618;
  t624 = t124*t623;
  t625 = t620 + t624;
  t648 = t69*t631;
  t649 = -1.*t34*t643;
  t650 = t648 + t649;
  t647 = t121*t645;
  t651 = t124*t650;
  t652 = t647 + t651;
  t724 = -1.*t94*t302;
  t725 = -1.*t70*t307;
  t726 = t724 + t725;
  t733 = -1.*t94*t331;
  t734 = -1.*t70*t333;
  t735 = t733 + t734;
  t742 = -1.*t94*t203;
  t743 = -1.*t70*t210;
  t744 = t742 + t743;
  t746 = t69*t121*t744;
  t747 = -1.*t34*t124*t744;
  t748 = t746 + t747;
  t752 = -1.*t119*t34*t744;
  t753 = t69*t217*t744;
  t754 = t752 + t753;
  t755 = t215*t754;
  t756 = t236*t748;
  t757 = t755 + t756;
  t761 = -1.*t214*t225;
  t762 = t191*t757;
  t763 = t761 + t762;
  t751 = t191*t225;
  t758 = t214*t757;
  t759 = t751 + t758;
  t737 = t69*t121*t735;
  t738 = -1.*t34*t124*t735;
  t739 = t737 + t738;
  t728 = t69*t121*t726;
  t729 = -1.*t34*t124*t726;
  t730 = t728 + t729;
  t809 = -1.*t34*t221;
  t810 = -1.*t69*t225;
  t811 = t809 + t810;
  t812 = t124*t811;
  t813 = t121*t231;
  t814 = t812 + t813;
  t817 = t236*t814;
  t818 = t119*t811;
  t819 = t217*t231;
  t820 = t818 + t819;
  t821 = t215*t820;
  t822 = t817 + t821;
  t800 = -1.*t34*t155;
  t801 = -1.*t69*t335;
  t802 = t800 + t801;
  t803 = t124*t802;
  t804 = t121*t340;
  t805 = t803 + t804;
  t791 = -1.*t34*t297;
  t792 = -1.*t69*t309;
  t793 = t791 + t792;
  t794 = t124*t793;
  t795 = t121*t315;
  t796 = t794 + t795;
  t856 = -1.*t124*t227;
  t857 = t856 + t232;
  t859 = t236*t857;
  t860 = -1.*t119*t227;
  t861 = -1.*t124*t231;
  t862 = t860 + t861;
  t863 = t215*t862;
  t864 = t859 + t863;
  t853 = -1.*t124*t337;
  t854 = t853 + t341;
  t850 = -1.*t124*t311;
  t851 = t850 + t316;
  t892 = -1.*t215*t239;
  t893 = t285 + t892;
  p_output1[0]=1.;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=1.;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=0;
  p_output1[13]=0;
  p_output1[14]=1.;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
  p_output1[18]=0;
  p_output1[19]=-0.1*t115 - 0.1029*t135 - 0.05*t28 + 0.085*t12*t7;
  p_output1[20]=-0.05*t143 - 0.1*t173 - 0.1029*t186 + 0.085*t12*t19;
  p_output1[21]=t243*t255*t265 + t258*t265*t269;
  p_output1[22]=(-1.*t235*t250 - 1.*t186*t274)*t277*t283 + 0.5*(2.*t255*t258 + 2.*t262*t269)*t283*t287*t288;
  p_output1[23]=((t119*t132 + t115*t217)*t235 + t135*t274)*t323*t351;
  p_output1[24]=-0.085*t12 - 0.05*t22*t23 - 0.1*t372 - 0.1029*t379;
  p_output1[25]=-0.085*t19*t22 + 0.05*t12*t19*t23 - 0.1*t401 - 0.1029*t408;
  p_output1[26]=-0.1*t430 - 0.1029*t437 + 0.085*t22*t7 - 0.05*t12*t23*t7;
  p_output1[27]=t258*t265*t451 + t243*t265*t455;
  p_output1[28]=t277*t283*(-1.*t274*t437 - 1.*t235*t446) + 0.5*t283*t287*t288*(2.*t262*t451 + 2.*t258*t455);
  p_output1[29]=t323*t351*(t235*(t217*t401 + t119*t406) + t274*t408) + t351*(t235*(t217*t372 + t119*t377) + t274*t379)*t482;
  p_output1[30]=0.05*t12*t18 - 0.1*t499 - 0.1029*t506;
  p_output1[31]=-0.05*t511 - 0.1*t526 - 0.1029*t533;
  p_output1[32]=-0.05*t54 - 0.1*t549 - 0.1029*t556;
  p_output1[33]=t243*t265*t570 + t258*t265*t574;
  p_output1[34]=t277*t283*(-1.*t274*t556 - 1.*t235*t565) + 0.5*t283*t287*t288*(2.*t258*t570 + 2.*t262*t574);
  p_output1[35]=t351*t482*(t235*(t217*t499 + t119*t504) + t274*t506) + t323*t351*(t235*(t217*t526 + t119*t531) + t274*t533);
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
  p_output1[60]=0;
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=0;
  p_output1[64]=0;
  p_output1[65]=0;
  p_output1[66]=0;
  p_output1[67]=0;
  p_output1[68]=0;
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=0;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=0;
  p_output1[76]=0;
  p_output1[77]=0;
  p_output1[78]=0;
  p_output1[79]=0;
  p_output1[80]=0;
  p_output1[81]=0;
  p_output1[82]=0;
  p_output1[83]=0;
  p_output1[84]=0;
  p_output1[85]=0;
  p_output1[86]=0;
  p_output1[87]=0;
  p_output1[88]=0;
  p_output1[89]=0;
  p_output1[90]=0;
  p_output1[91]=0;
  p_output1[92]=0;
  p_output1[93]=0;
  p_output1[94]=0;
  p_output1[95]=0;
  p_output1[96]=0;
  p_output1[97]=0;
  p_output1[98]=0;
  p_output1[99]=0;
  p_output1[100]=0;
  p_output1[101]=0;
  p_output1[102]=0;
  p_output1[103]=0;
  p_output1[104]=0;
  p_output1[105]=0;
  p_output1[106]=0;
  p_output1[107]=0;
  p_output1[108]=0;
  p_output1[109]=0;
  p_output1[110]=0;
  p_output1[111]=0;
  p_output1[112]=0;
  p_output1[113]=0;
  p_output1[114]=0;
  p_output1[115]=0;
  p_output1[116]=0;
  p_output1[117]=0;
  p_output1[118]=0;
  p_output1[119]=0;
  p_output1[120]=0;
  p_output1[121]=0;
  p_output1[122]=0;
  p_output1[123]=0;
  p_output1[124]=0;
  p_output1[125]=0;
  p_output1[126]=0;
  p_output1[127]=0;
  p_output1[128]=0;
  p_output1[129]=0;
  p_output1[130]=0;
  p_output1[131]=0;
  p_output1[132]=0;
  p_output1[133]=0;
  p_output1[134]=0;
  p_output1[135]=0;
  p_output1[136]=0;
  p_output1[137]=0;
  p_output1[138]=0;
  p_output1[139]=0;
  p_output1[140]=0;
  p_output1[141]=0;
  p_output1[142]=0;
  p_output1[143]=0;
  p_output1[144]=-0.1*t618 - 0.1029*t625;
  p_output1[145]=-0.1*t645 - 0.1029*t652;
  p_output1[146]=-0.1*t672 - 0.1029*t679;
  p_output1[147]=t243*t265*t693 + t258*t265*t697;
  p_output1[148]=t277*t283*(-1.*t274*t679 - 1.*t235*t688) + 0.5*t283*t287*t288*(2.*t258*t693 + 2.*t262*t697);
  p_output1[149]=t351*t482*(t235*(t217*t618 + t119*t623) + t274*t625) + t323*t351*(t235*(t217*t645 + t119*t650) + t274*t652);
  p_output1[150]=-0.1*t69*t726 - 0.1029*t730;
  p_output1[151]=-0.1*t69*t735 - 0.1029*t739;
  p_output1[152]=-0.1*t69*t744 - 0.1029*t748;
  p_output1[153]=t258*t265*t759 + t243*t265*t763;
  p_output1[154]=t277*t283*(-1.*t274*t748 - 1.*t235*t754) + 0.5*t283*t287*t288*(2.*t262*t759 + 2.*t258*t763);
  p_output1[155]=t351*t482*(t235*(-1.*t119*t34*t726 + t217*t69*t726) + t274*t730) + t323*t351*(t235*(-1.*t119*t34*t735 + t217*t69*t735) + t274*t739);
  p_output1[156]=-0.1*t315 - 0.1029*t796;
  p_output1[157]=-0.1*t340 - 0.1029*t805;
  p_output1[158]=-0.1*t231 - 0.1029*t814;
  p_output1[159]=t191*t243*t265*t822 + t214*t258*t265*t822;
  p_output1[160]=t277*t283*(-1.*t274*t814 - 1.*t235*t820) + 0.5*t283*t287*t288*(2.*t191*t258*t822 + 2.*t214*t262*t822);
  p_output1[161]=t351*t482*(t235*(t217*t315 + t119*t793) + t274*t796) + t323*t351*(t235*(t217*t340 + t119*t802) + t274*t805);
  p_output1[162]=-0.1029*t851;
  p_output1[163]=-0.1029*t854;
  p_output1[164]=-0.1029*t857;
  p_output1[165]=t191*t243*t265*t864 + t214*t258*t265*t864;
  p_output1[166]=t277*t283*(-1.*t274*t857 - 1.*t235*t862) + 0.5*t283*t287*t288*(2.*t191*t258*t864 + 2.*t214*t262*t864);
  p_output1[167]=t351*t482*(t235*(-1.*t119*t311 - 1.*t124*t315) + t274*t851) + t323*t351*(t235*(-1.*t119*t337 - 1.*t124*t340) + t274*t854);
  p_output1[168]=0;
  p_output1[169]=0;
  p_output1[170]=0;
  p_output1[171]=t191*t243*t265*t893 + t214*t258*t265*t893;
  p_output1[172]=(t234 + t235*t239)*t277*t283 + 0.5*t283*t287*t288*(2.*t191*t258*t893 + 2.*t214*t262*t893);
  p_output1[173]=t323*(-1.*t215*t342 - 1.*t235*t346)*t351 + (-1.*t215*t317 - 1.*t235*t321)*t351*t482;
  p_output1[174]=0;
  p_output1[175]=0;
  p_output1[176]=0;
  p_output1[177]=Power(t243,2)*t265 + t259*t265;
  p_output1[178]=0.5*(2.*t243*t258 + 2.*t258*t262)*t283*t287*t288;
  p_output1[179]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 30 && ncols == 1) && 
      !(mrows == 1 && ncols == 30))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 6, (mwSize) 30, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "j_Rfoot_func.hh"

namespace SymFunction
{

void j_Rfoot_func_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
