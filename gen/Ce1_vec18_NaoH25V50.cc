/*
 * Automatically Generated from Mathematica.
 * Tue 10 Jul 2018 11:12:34 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;


#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t16570;
  double t16488;
  double t16542;
  double t16391;
  double t16498;
  double t16695;
  double t16497;
  double t16573;
  double t16604;
  double t16082;
  double t16699;
  double t16755;
  double t16802;
  double t16803;
  double t16869;
  double t16918;
  double t16922;
  double t16923;
  double t16994;
  double t15378;
  double t15685;
  double t17116;
  double t17117;
  double t17118;
  double t17141;
  double t17142;
  double t17153;
  double t17169;
  double t17170;
  double t17171;
  double t17083;
  double t17461;
  double t17657;
  double t17675;
  double t17676;
  double t17861;
  double t17874;
  double t17878;
  double t17987;
  double t17994;
  double t17995;
  double t18086;
  double t18087;
  double t18088;
  double t16694;
  double t17024;
  double t17036;
  double t17449;
  double t17450;
  double t17456;
  double t17427;
  double t17430;
  double t17439;
  double t17131;
  double t17203;
  double t17221;
  double t17629;
  double t17637;
  double t17638;
  double t17537;
  double t17582;
  double t17613;
  double t18225;
  double t18228;
  double t18229;
  double t18237;
  double t18238;
  double t18239;
  double t18182;
  double t18188;
  double t18194;
  double t18269;
  double t18270;
  double t18272;
  double t18274;
  double t18275;
  double t18284;
  double t17067;
  double t17068;
  double t17069;
  double t18329;
  double t17283;
  double t17284;
  double t17285;
  double t18339;
  double t18210;
  double t18211;
  double t18212;
  double t17444;
  double t17484;
  double t17488;
  double t17619;
  double t17639;
  double t17640;
  double t17717;
  double t17718;
  double t17721;
  double t17677;
  double t17706;
  double t17715;
  double t17731;
  double t17734;
  double t17740;
  double t17918;
  double t17921;
  double t17924;
  double t17860;
  double t17879;
  double t17893;
  double t17925;
  double t17926;
  double t17936;
  double t18039;
  double t18040;
  double t18041;
  double t18012;
  double t18018;
  double t18021;
  double t17986;
  double t18001;
  double t18010;
  double t18038;
  double t18042;
  double t18043;
  double t18123;
  double t18124;
  double t18128;
  double t18099;
  double t18103;
  double t18106;
  double t18078;
  double t18089;
  double t18090;
  double t18109;
  double t18134;
  double t18135;
  double t18181;
  double t18199;
  double t18207;
  double t18209;
  double t18213;
  double t18214;
  double t18231;
  double t18232;
  double t18233;
  double t18241;
  double t18242;
  double t18243;
  double t18872;
  double t18877;
  double t18880;
  double t18305;
  double t18306;
  double t18291;
  double t18292;
  double t18295;
  double t18268;
  double t18285;
  double t18286;
  double t18302;
  double t18307;
  double t18308;
  double t18330;
  double t18334;
  double t18335;
  double t18351;
  double t18352;
  double t18356;
  double t18368;
  double t18371;
  double t18372;
  double t18374;
  double t18378;
  double t18379;
  double t18429;
  double t18439;
  double t18440;
  double t18445;
  double t18446;
  double t18449;
  double t18459;
  double t18463;
  double t18464;
  double t18468;
  double t18472;
  double t18473;
  double t18503;
  double t18504;
  double t18505;
  double t18515;
  double t18516;
  double t18517;
  double t18779;
  double t18789;
  double t18805;
  double t18815;
  double t18816;
  double t18827;
  double t19149;
  double t19153;
  double t19154;
  double t18891;
  double t18892;
  double t18893;
  double t18924;
  double t18933;
  double t18940;
  double t19047;
  double t19066;
  double t19112;
  double t19125;
  double t19128;
  double t19129;
  double t19133;
  double t19134;
  double t19135;
  double t19161;
  double t19178;
  double t19188;
  double t19209;
  double t19210;
  double t19211;
  double t19430;
  double t19431;
  double t19432;
  double t17037;
  double t17084;
  double t17088;
  double t17282;
  double t17286;
  double t17292;
  double t18253;
  double t18262;
  double t18263;
  double t19479;
  double t19480;
  double t19484;
  double t19488;
  double t19497;
  double t19498;
  double t19499;
  double t19500;
  double t19534;
  double t19535;
  double t19539;
  double t19540;
  double t19541;
  double t19543;
  double t19549;
  double t19550;
  double t19551;
  double t19552;
  double t19427;
  double t19433;
  double t19436;
  double t19481;
  double t19482;
  double t19483;
  double t19510;
  double t19520;
  double t19537;
  double t19538;
  double t19544;
  double t19553;
  double t19554;
  double t19474;
  double t19530;
  double t19555;
  double t19564;
  double t19569;
  double t19570;
  double t19571;
  double t19572;
  double t19573;
  double t19471;
  double t19565;
  double t19574;
  double t19575;
  double t19580;
  double t19581;
  double t19582;
  double t19576;
  double t19577;
  double t19578;
  double t19691;
  double t19692;
  double t19693;
  double t19694;
  double t19700;
  double t19701;
  double t19703;
  double t19437;
  double t19438;
  double t19442;
  double t19443;
  double t19444;
  double t19446;
  double t19675;
  double t19676;
  double t19677;
  double t19678;
  double t19600;
  double t19602;
  double t19658;
  double t19664;
  double t19668;
  double t19669;
  double t19718;
  double t19719;
  double t19723;
  double t19727;
  double t19729;
  double t19730;
  double t19732;
  double t19579;
  double t19586;
  double t19591;
  double t19674;
  double t19679;
  double t19682;
  double t19699;
  double t19704;
  double t19705;
  double t19728;
  double t19733;
  double t19737;
  double t19714;
  double t19715;
  double t19716;
  double t19742;
  double t19743;
  double t19744;
  double t19690;
  double t19695;
  double t19696;
  double t19711;
  double t19712;
  double t19713;
  double t19739;
  double t19740;
  double t19741;
  double t19845;
  double t19846;
  double t19847;
  double t19983;
  double t19984;
  double t19987;
  double t19966;
  double t19967;
  double t19968;
  double t19751;
  double t19755;
  double t19756;
  double t19757;
  double t19778;
  double t19779;
  double t19780;
  double t19781;
  double t19868;
  double t19873;
  double t19875;
  double t19876;
  double t19899;
  double t19903;
  double t19948;
  double t19952;
  double t20087;
  double t20115;
  double t20121;
  double t20136;
  double t20137;
  double t20140;
  double t18011;
  double t18072;
  double t18073;
  double t20255;
  double t20256;
  double t20257;
  double t18091;
  double t18136;
  double t18170;
  double t20287;
  double t20290;
  double t20291;
  double t20294;
  double t20296;
  double t20298;
  double t20271;
  double t20273;
  double t20274;
  double t20263;
  double t20266;
  double t20269;
  double t20306;
  double t20307;
  double t20308;
  double t20309;
  double t20310;
  double t20311;
  double t20295;
  double t20299;
  double t20300;
  double t20340;
  double t20341;
  double t20342;
  double t20346;
  double t20347;
  double t20349;
  double t20254;
  double t20258;
  double t20259;
  double t20262;
  double t20270;
  double t20276;
  double t20279;
  double t20280;
  double t20281;
  double t20301;
  double t20312;
  double t20313;
  double t20343;
  double t20350;
  double t20351;
  double t20387;
  double t20391;
  double t20392;
  double t20315;
  double t20326;
  double t20330;
  double t20398;
  double t20401;
  double t20402;
  double t17716;
  double t17752;
  double t17799;
  double t17910;
  double t17944;
  double t17945;
  double t20521;
  double t20524;
  double t20525;
  double t20556;
  double t20557;
  double t20560;
  double t20561;
  double t20563;
  double t20507;
  double t20510;
  double t20515;
  double t20516;
  double t20526;
  double t20527;
  double t20532;
  double t20533;
  double t20536;
  double t20568;
  double t20571;
  double t20565;
  double t20572;
  double t20573;
  double t20584;
  double t20587;
  double t20588;
  double t20591;
  double t20594;
  double t20595;
  double t20564;
  double t20574;
  double t20575;
  double t20589;
  double t20596;
  double t20597;
  double t20599;
  double t20600;
  double t20603;
  double t20547;
  double t20548;
  double t20550;
  double t20580;
  double t20581;
  double t20582;
  double t20689;
  double t20690;
  double t20691;
  double t18230;
  double t18234;
  double t18235;
  double t18240;
  double t18244;
  double t18246;
  double t20693;
  double t20697;
  double t20701;
  double t20702;
  double t20712;
  double t20713;
  double t20732;
  double t20733;
  double t20734;
  double t20735;
  double t20750;
  double t20751;
  double t20753;
  double t20730;
  double t20736;
  double t20738;
  double t20747;
  double t20754;
  double t20760;
  double t20764;
  double t20765;
  double t20766;
  double t20725;
  double t20726;
  double t20728;
  double t20741;
  double t20744;
  double t20745;
  double t18290;
  double t18312;
  double t18313;
  double t20918;
  double t20922;
  double t20927;
  double t20915;
  double t20916;
  double t20917;
  double t20928;
  double t20929;
  double t20937;
  double t20938;
  double t20939;
  double t20942;
  double t20943;
  double t20946;
  double t20940;
  double t20947;
  double t20948;
  double t20930;
  double t20934;
  double t20935;
  double t20952;
  double t20954;
  double t20955;
  double t20957;
  double t20960;
  double t20961;
  double t20936;
  double t20949;
  double t20950;
  double t20956;
  double t20962;
  double t20963;
  double t20965;
  double t20970;
  double t20971;
  double t19596;
  double t19687;
  double t19759;
  double t19760;
  double t19851;
  double t19856;
  double t19880;
  double t19886;
  double t21064;
  double t21065;
  double t21066;
  double t20314;
  double t20339;
  double t20406;
  double t20407;
  double t21075;
  double t21076;
  double t21087;
  double t21114;
  double t21115;
  double t21116;
  double t20443;
  double t20444;
  double t20452;
  double t20468;
  double t21129;
  double t21130;
  double t21135;
  double t20729;
  double t20739;
  double t20776;
  double t20777;
  double t20817;
  double t20820;
  double t20852;
  double t20853;
  double t19979;
  double t19980;
  double t20000;
  double t20002;
  double t20019;
  double t20020;
  double t20037;
  double t20038;
  double t20551;
  double t20578;
  double t20610;
  double t20611;
  double t20657;
  double t20658;
  double t20671;
  double t20673;
  double t20951;
  double t20977;
  double t20978;
  double t20998;
  double t21003;
  double t21013;
  double t21150;
  double t21151;
  double t21158;
  double t21159;
  double t21178;
  double t21179;
  double t21190;
  double t21191;
  double t21415;
  double t21416;
  double t21417;
  double t21033;
  double t21037;
  double t21435;
  double t21437;
  double t21441;
  double t21068;
  double t21070;
  double t21449;
  double t21450;
  double t21451;
  double t21091;
  double t21095;
  double t21486;
  double t21487;
  double t21488;
  double t21119;
  double t21120;
  double t21227;
  double t21228;
  double t21237;
  double t21238;
  double t21247;
  double t21248;
  double t21254;
  double t21257;
  double t21309;
  double t21310;
  double t21317;
  double t21319;
  double t21329;
  double t21330;
  double t21344;
  double t21345;
  double t21365;
  double t21369;
  double t21370;
  double t21384;
  double t21388;
  double t21391;
  double t21421;
  double t21425;
  double t21428;
  double t21429;
  double t21456;
  double t21463;
  double t21757;
  double t21473;
  double t21474;
  double t21567;
  double t21568;
  double t21750;
  double t21751;
  double t21752;
  double t21582;
  double t21587;
  double t21769;
  double t21770;
  double t21771;
  double t21615;
  double t21616;
  double t21778;
  double t21779;
  double t21780;
  double t21623;
  double t21629;
  double t21807;
  double t21810;
  double t21811;
  double t21654;
  double t21656;
  double t21666;
  double t21667;
  double t21684;
  double t21688;
  double t21695;
  double t21696;
  double t21712;
  double t21715;
  double t21716;
  double t21727;
  double t21731;
  double t21732;
  double t21790;
  double t21794;
  double t21802;
  double t21803;
  double t22009;
  double t21758;
  double t21759;
  double t21762;
  double t21763;
  double t22031;
  double t22032;
  double t22033;
  double t21952;
  double t22023;
  double t21972;
  double t21973;
  double t21934;
  double t21998;
  double t21999;
  double t22000;
  double t22091;
  double t21943;
  double t21944;
  double t21901;
  double t21902;
  double t21914;
  double t21915;
  double t22024;
  double t22025;
  double t21878;
  double t21881;
  double t22060;
  double t22061;
  double t22062;
  double t21887;
  double t21888;
  double t22035;
  double t22041;
  double t22050;
  double t22051;
  double t22017;
  double t22018;
  double t22008;
  double t22013;
  double t22210;
  double t22211;
  double t22115;
  double t22116;
  double t22179;
  double t22180;
  double t22228;
  double t22248;
  double t22092;
  double t22231;
  t16570 = Sin(var1[17]);
  t16488 = Cos(var1[17]);
  t16542 = Sin(var1[15]);
  t16391 = Cos(var1[15]);
  t16498 = Cos(var1[16]);
  t16695 = Sin(var1[13]);
  t16497 = t16391*t16488;
  t16573 = -1.*t16498*t16542*t16570;
  t16604 = t16497 + t16573;
  t16082 = Cos(var1[13]);
  t16699 = Cos(var1[14]);
  t16755 = Sin(var1[16]);
  t16802 = t16699*t16755*t16570;
  t16803 = Sin(var1[14]);
  t16869 = -1.*t16488*t16542;
  t16918 = -1.*t16391*t16498*t16570;
  t16922 = t16869 + t16918;
  t16923 = -1.*t16803*t16922;
  t16994 = t16802 + t16923;
  t15378 = Cos(var1[4]);
  t15685 = Cos(var1[5]);
  t17116 = t16498*t16488*t16542;
  t17117 = t16391*t16570;
  t17118 = t17116 + t17117;
  t17141 = -1.*t16699*t16488*t16755;
  t17142 = t16391*t16498*t16488;
  t17153 = -1.*t16542*t16570;
  t17169 = t17142 + t17153;
  t17170 = -1.*t16803*t17169;
  t17171 = t17141 + t17170;
  t17083 = Sin(var1[4]);
  t17461 = Sin(var1[5]);
  t17657 = -1.*t16498*t16488*t16542;
  t17675 = -1.*t16391*t16570;
  t17676 = t17657 + t17675;
  t17861 = -1.*t16391*t16488;
  t17874 = t16498*t16542*t16570;
  t17878 = t17861 + t17874;
  t17987 = -1.*t16699*t16498*t16488;
  t17994 = t16391*t16488*t16803*t16755;
  t17995 = t17987 + t17994;
  t18086 = t16699*t16498*t16570;
  t18087 = -1.*t16391*t16803*t16755*t16570;
  t18088 = t18086 + t18087;
  t16694 = t16082*t16604;
  t17024 = -1.*t16695*t16994;
  t17036 = t16694 + t17024;
  t17449 = t16695*t16604;
  t17450 = t16082*t16994;
  t17456 = t17449 + t17450;
  t17427 = t16803*t16755*t16570;
  t17430 = t16699*t16922;
  t17439 = t17427 + t17430;
  t17131 = t16082*t17118;
  t17203 = -1.*t16695*t17171;
  t17221 = t17131 + t17203;
  t17629 = t16695*t17118;
  t17637 = t16082*t17171;
  t17638 = t17629 + t17637;
  t17537 = -1.*t16488*t16803*t16755;
  t17582 = t16699*t17169;
  t17613 = t17537 + t17582;
  t18225 = -1.*t16803*t16755*t16570;
  t18228 = -1.*t16699*t16922;
  t18229 = t18225 + t18228;
  t18237 = t16488*t16803*t16755;
  t18238 = -1.*t16699*t17169;
  t18239 = t18237 + t18238;
  t18182 = t15685*t17456;
  t18188 = -1.*t17439*t17461;
  t18194 = t18182 + t18188;
  t18269 = t16699*t16488*t16755;
  t18270 = -1.*t16391*t16498*t16488;
  t18272 = t16542*t16570;
  t18274 = t18270 + t18272;
  t18275 = -1.*t16803*t18274;
  t18284 = t18269 + t18275;
  t17067 = -1.*t16695*t16604;
  t17068 = -1.*t16082*t16994;
  t17069 = t17067 + t17068;
  t18329 = Sin(var1[3]);
  t17283 = -1.*t16695*t17118;
  t17284 = -1.*t16082*t17171;
  t17285 = t17283 + t17284;
  t18339 = Cos(var1[3]);
  t18210 = t15685*t17638;
  t18211 = -1.*t17613*t17461;
  t18212 = t18210 + t18211;
  t17444 = -1.*t15685*t17439;
  t17484 = -1.*t17456*t17461;
  t17488 = t17444 + t17484;
  t17619 = -1.*t15685*t17613;
  t17639 = -1.*t17638*t17461;
  t17640 = t17619 + t17639;
  t17717 = -1.*t16082*t16803*t17676;
  t17718 = t16695*t17169;
  t17721 = t17717 + t17718;
  t17677 = t16695*t16803*t17676;
  t17706 = t16082*t17169;
  t17715 = t17677 + t17706;
  t17731 = t15685*t17721;
  t17734 = -1.*t16699*t17676*t17461;
  t17740 = t17731 + t17734;
  t17918 = t16695*t16922;
  t17921 = -1.*t16082*t16803*t17878;
  t17924 = t17918 + t17921;
  t17860 = t16082*t16922;
  t17879 = t16695*t16803*t17878;
  t17893 = t17860 + t17879;
  t17925 = t15685*t17924;
  t17926 = -1.*t16699*t17878*t17461;
  t17936 = t17925 + t17926;
  t18039 = -1.*t16498*t16488*t16803;
  t18040 = -1.*t16699*t16391*t16488*t16755;
  t18041 = t18039 + t18040;
  t18012 = -1.*t16488*t16695*t16542*t16755;
  t18018 = t16082*t17995;
  t18021 = t18012 + t18018;
  t17986 = -1.*t16082*t16488*t16542*t16755;
  t18001 = -1.*t16695*t17995;
  t18010 = t17986 + t18001;
  t18038 = t15685*t18021;
  t18042 = -1.*t18041*t17461;
  t18043 = t18038 + t18042;
  t18123 = t16498*t16803*t16570;
  t18124 = t16699*t16391*t16755*t16570;
  t18128 = t18123 + t18124;
  t18099 = t16695*t16542*t16755*t16570;
  t18103 = t16082*t18088;
  t18106 = t18099 + t18103;
  t18078 = t16082*t16542*t16755*t16570;
  t18089 = -1.*t16695*t18088;
  t18090 = t18078 + t18089;
  t18109 = t15685*t18106;
  t18134 = -1.*t18128*t17461;
  t18135 = t18109 + t18134;
  t18181 = t15378*t17036;
  t18199 = -1.*t17083*t18194;
  t18207 = t18181 + t18199;
  t18209 = t15378*t17221;
  t18213 = -1.*t17083*t18212;
  t18214 = t18209 + t18213;
  t18231 = t16082*t15685*t18229;
  t18232 = -1.*t16994*t17461;
  t18233 = t18231 + t18232;
  t18241 = t16082*t15685*t18239;
  t18242 = -1.*t17171*t17461;
  t18243 = t18241 + t18242;
  t18872 = t15685*t17439;
  t18877 = t17456*t17461;
  t18880 = t18872 + t18877;
  t18305 = t16699*t18274;
  t18306 = t18237 + t18305;
  t18291 = t16695*t17676;
  t18292 = t16082*t18284;
  t18295 = t18291 + t18292;
  t18268 = t16082*t17676;
  t18285 = -1.*t16695*t18284;
  t18286 = t18268 + t18285;
  t18302 = t15685*t18295;
  t18307 = -1.*t18306*t17461;
  t18308 = t18302 + t18307;
  t18330 = t15378*t17069;
  t18334 = -1.*t15685*t17036*t17083;
  t18335 = t18330 + t18334;
  t18351 = t15378*t17285;
  t18352 = -1.*t15685*t17221*t17083;
  t18356 = t18351 + t18352;
  t18368 = -1.*t17036*t17083;
  t18371 = -1.*t15378*t18194;
  t18372 = t18368 + t18371;
  t18374 = -1.*t17221*t17083;
  t18378 = -1.*t15378*t18212;
  t18379 = t18374 + t18378;
  t18429 = t16699*t15685*t17676;
  t18439 = t17721*t17461;
  t18440 = t18429 + t18439;
  t18445 = t15378*t17715;
  t18446 = -1.*t17083*t17740;
  t18449 = t18445 + t18446;
  t18459 = t16699*t15685*t17878;
  t18463 = t17924*t17461;
  t18464 = t18459 + t18463;
  t18468 = t15378*t17893;
  t18472 = -1.*t17083*t17936;
  t18473 = t18468 + t18472;
  t18503 = t15685*t18041;
  t18504 = t18021*t17461;
  t18505 = t18503 + t18504;
  t18515 = t15378*t18010;
  t18516 = -1.*t17083*t18043;
  t18517 = t18515 + t18516;
  t18779 = t15685*t18128;
  t18789 = t18106*t17461;
  t18805 = t18779 + t18789;
  t18815 = t15378*t18090;
  t18816 = -1.*t17083*t18135;
  t18827 = t18815 + t18816;
  t19149 = t18339*t18880;
  t19153 = -1.*t18329*t18207;
  t19154 = t19149 + t19153;
  t18891 = t15685*t17613;
  t18892 = t17638*t17461;
  t18893 = t18891 + t18892;
  t18924 = t15685*t16994;
  t18933 = t16082*t18229*t17461;
  t18940 = t18924 + t18933;
  t19047 = -1.*t15378*t16695*t18229;
  t19066 = -1.*t17083*t18233;
  t19112 = t19047 + t19066;
  t19125 = t15685*t17171;
  t19128 = t16082*t18239*t17461;
  t19129 = t19125 + t19128;
  t19133 = -1.*t15378*t16695*t18239;
  t19134 = -1.*t17083*t18243;
  t19135 = t19133 + t19134;
  t19161 = t15685*t18306;
  t19178 = t18295*t17461;
  t19188 = t19161 + t19178;
  t19209 = t15378*t18286;
  t19210 = -1.*t17083*t18308;
  t19211 = t19209 + t19210;
  t19430 = t16699*t16498;
  t19431 = -1.*t16391*t16803*t16755;
  t19432 = t19430 + t19431;
  t17037 = t15378*t15685*t17036;
  t17084 = t17069*t17083;
  t17088 = t17037 + t17084;
  t17282 = t15378*t15685*t17221;
  t17286 = t17285*t17083;
  t17292 = t17282 + t17286;
  t18253 = t17036*t17083;
  t18262 = t15378*t18194;
  t18263 = t18253 + t18262;
  t19479 = -1.*t16498;
  t19480 = 1. + t19479;
  t19484 = -1.*t16488;
  t19488 = 1. + t19484;
  t19497 = -0.113*t19488;
  t19498 = -0.11212*t16488;
  t19499 = -0.00308*t16570;
  t19500 = t19497 + t19498 + t19499;
  t19534 = -1.*t16391;
  t19535 = 1. + t19534;
  t19539 = -0.113*t19480;
  t19540 = 0.09029*t16755;
  t19541 = t16498*t19500;
  t19543 = t19539 + t19540 + t19541;
  t19549 = 0.1*t19488;
  t19550 = 0.10308*t16488;
  t19551 = 0.00088*t16570;
  t19552 = t19549 + t19550 + t19551;
  t19427 = t16082*t16542*t16755;
  t19433 = -1.*t16695*t19432;
  t19436 = t19427 + t19433;
  t19481 = 0.105*t19480;
  t19482 = 0.19529*t16498;
  t19483 = -0.113*t16755;
  t19510 = -1.*t16755*t19500;
  t19520 = t19481 + t19482 + t19483 + t19510;
  t19537 = -0.113*t19535;
  t19538 = 0.1*t16542;
  t19544 = t16391*t19543;
  t19553 = -1.*t16542*t19552;
  t19554 = t19537 + t19538 + t19544 + t19553;
  t19474 = -0.098*t16803;
  t19530 = t16699*t19520;
  t19555 = -1.*t16803*t19554;
  t19564 = t19474 + t19530 + t19555;
  t19569 = 0.1*t19535;
  t19570 = 0.113*t16542;
  t19571 = t16542*t19543;
  t19572 = t16391*t19552;
  t19573 = t19569 + t19570 + t19571 + t19572;
  t19471 = -0.1*t16082;
  t19565 = -1.*t16695*t19564;
  t19574 = t16082*t19573;
  t19575 = t19471 + t19565 + t19574;
  t19580 = t16695*t16542*t16755;
  t19581 = t16082*t19432;
  t19582 = t19580 + t19581;
  t19576 = t16498*t16803;
  t19577 = t16699*t16391*t16755;
  t19578 = t19576 + t19577;
  t19691 = 0.1*t16695;
  t19692 = -1.*t16082*t19564;
  t19693 = -1.*t16695*t19573;
  t19694 = t19691 + t19692 + t19693;
  t19700 = t15685*t19582;
  t19701 = -1.*t19578*t17461;
  t19703 = t19700 + t19701;
  t19437 = t15378*t15685*t19436;
  t19438 = -1.*t16695*t16542*t16755;
  t19442 = -1.*t16082*t19432;
  t19443 = t19438 + t19442;
  t19444 = t19443*t17083;
  t19446 = t19437 + t19444;
  t19675 = -0.1*t16695;
  t19676 = t16082*t19564;
  t19677 = t16695*t19573;
  t19678 = t19675 + t19676 + t19677;
  t19600 = -1.*t16699;
  t19602 = 1. + t19600;
  t19658 = -0.098*t19602;
  t19664 = t16803*t19520;
  t19668 = t16699*t19554;
  t19669 = t19658 + t19664 + t19668;
  t19718 = -1.*t16082;
  t19719 = 1. + t19718;
  t19723 = 0.1*t19719;
  t19727 = t19723 + t19565 + t19574;
  t19729 = t15685*t19678;
  t19730 = -1.*t19669*t17461;
  t19732 = t19729 + t19730;
  t19579 = t15685*t19578;
  t19586 = t19582*t17461;
  t19591 = t19579 + t19586;
  t19674 = t15685*t19669;
  t19679 = t19678*t17461;
  t19682 = t19674 + t19679;
  t19699 = t19436*t17083;
  t19704 = t15378*t19703;
  t19705 = t19699 + t19704;
  t19728 = t19727*t17083;
  t19733 = t15378*t19732;
  t19737 = t19728 + t19733;
  t19714 = t15378*t19436;
  t19715 = -1.*t17083*t19703;
  t19716 = t19714 + t19715;
  t19742 = t15378*t19727;
  t19743 = -1.*t17083*t19732;
  t19744 = t19742 + t19743;
  t19690 = t15378*t15685*t19575;
  t19695 = t19694*t17083;
  t19696 = t19690 + t19695;
  t19711 = t15378*t19694;
  t19712 = -1.*t15685*t19575*t17083;
  t19713 = t19711 + t19712;
  t19739 = t15378*t19443;
  t19740 = -1.*t15685*t19436*t17083;
  t19741 = t19739 + t19740;
  t19845 = t17221*t17083;
  t19846 = t15378*t18212;
  t19847 = t19845 + t19846;
  t19983 = -1.*t15685*t19669;
  t19984 = -1.*t19678*t17461;
  t19987 = t19983 + t19984;
  t19966 = -1.*t15685*t19578;
  t19967 = -1.*t19582*t17461;
  t19968 = t19966 + t19967;
  t19751 = t19591*t19682;
  t19755 = t19705*t19737;
  t19756 = t19716*t19744;
  t19757 = t19751 + t19755 + t19756;
  t19778 = -1.*t19682*t18880;
  t19779 = -1.*t19737*t18263;
  t19780 = -1.*t19744*t18207;
  t19781 = t19778 + t19779 + t19780;
  t19868 = -1.*t19591*t19682;
  t19873 = -1.*t19705*t19737;
  t19875 = -1.*t19716*t19744;
  t19876 = t19868 + t19873 + t19875;
  t19899 = t19682*t18893;
  t19903 = t19737*t19847;
  t19948 = t19744*t18214;
  t19952 = t19899 + t19903 + t19948;
  t20087 = -1.*t19727*t17083;
  t20115 = -1.*t15378*t19732;
  t20121 = t20087 + t20115;
  t20136 = -1.*t19436*t17083;
  t20137 = -1.*t15378*t19703;
  t20140 = t20136 + t20137;
  t18011 = t18010*t17083;
  t18072 = t15378*t18043;
  t18073 = t18011 + t18072;
  t20255 = -1.*t16391*t16498*t16803;
  t20256 = -1.*t16699*t16755;
  t20257 = t20255 + t20256;
  t18091 = t18090*t17083;
  t18136 = t15378*t18135;
  t18170 = t18091 + t18136;
  t20287 = -0.113*t16498;
  t20290 = -0.09029*t16755;
  t20291 = -1.*t16498*t19500;
  t20294 = t20287 + t20290 + t20291;
  t20296 = 0.09029*t16498;
  t20298 = t20296 + t19483 + t19510;
  t20271 = t16699*t16391*t16498;
  t20273 = -1.*t16803*t16755;
  t20274 = t20271 + t20273;
  t20263 = t16498*t16695*t16542;
  t20266 = t16082*t20257;
  t20269 = t20263 + t20266;
  t20306 = t16699*t20294;
  t20307 = -1.*t16391*t16803*t20298;
  t20308 = t20306 + t20307;
  t20309 = t16082*t20308;
  t20310 = t16695*t16542*t20298;
  t20311 = t20309 + t20310;
  t20295 = t16803*t20294;
  t20299 = t16699*t16391*t20298;
  t20300 = t20295 + t20299;
  t20340 = -1.*t16695*t20308;
  t20341 = t16082*t16542*t20298;
  t20342 = t20340 + t20341;
  t20346 = t15685*t20311;
  t20347 = -1.*t20300*t17461;
  t20349 = t20346 + t20347;
  t20254 = t16082*t16498*t16542;
  t20258 = -1.*t16695*t20257;
  t20259 = t20254 + t20258;
  t20262 = t20259*t17083;
  t20270 = t15685*t20269;
  t20276 = -1.*t20274*t17461;
  t20279 = t20270 + t20276;
  t20280 = t15378*t20279;
  t20281 = t20262 + t20280;
  t20301 = t15685*t20300;
  t20312 = t20311*t17461;
  t20313 = t20301 + t20312;
  t20343 = t20342*t17083;
  t20350 = t15378*t20349;
  t20351 = t20343 + t20350;
  t20387 = t15378*t20342;
  t20391 = -1.*t17083*t20349;
  t20392 = t20387 + t20391;
  t20315 = t15685*t20274;
  t20326 = t20269*t17461;
  t20330 = t20315 + t20326;
  t20398 = t15378*t20259;
  t20401 = -1.*t17083*t20279;
  t20402 = t20398 + t20401;
  t17716 = t17715*t17083;
  t17752 = t15378*t17740;
  t17799 = t17716 + t17752;
  t17910 = t17893*t17083;
  t17944 = t15378*t17936;
  t17945 = t17910 + t17944;
  t20521 = t16391*t16695*t16755;
  t20524 = t16082*t16803*t16542*t16755;
  t20525 = t20521 + t20524;
  t20556 = 0.1*t16391;
  t20557 = -0.113*t16542;
  t20560 = -1.*t16542*t19543;
  t20561 = -1.*t16391*t19552;
  t20563 = t20556 + t20557 + t20560 + t20561;
  t20507 = t16082*t16391*t16755;
  t20510 = -1.*t16695*t16803*t16542*t16755;
  t20515 = t20507 + t20510;
  t20516 = t20515*t17083;
  t20526 = t15685*t20525;
  t20527 = t16699*t16542*t16755*t17461;
  t20532 = t20526 + t20527;
  t20533 = t15378*t20532;
  t20536 = t20516 + t20533;
  t20568 = 0.113*t16391;
  t20571 = t20568 + t19538 + t19544 + t19553;
  t20565 = -1.*t16082*t16803*t20563;
  t20572 = t16695*t20571;
  t20573 = t20565 + t20572;
  t20584 = t16695*t16803*t20563;
  t20587 = t16082*t20571;
  t20588 = t20584 + t20587;
  t20591 = t15685*t20573;
  t20594 = -1.*t16699*t20563*t17461;
  t20595 = t20591 + t20594;
  t20564 = t16699*t15685*t20563;
  t20574 = t20573*t17461;
  t20575 = t20564 + t20574;
  t20589 = t20588*t17083;
  t20596 = t15378*t20595;
  t20597 = t20589 + t20596;
  t20599 = t15378*t20588;
  t20600 = -1.*t17083*t20595;
  t20603 = t20599 + t20600;
  t20547 = -1.*t16699*t15685*t16542*t16755;
  t20548 = t20525*t17461;
  t20550 = t20547 + t20548;
  t20580 = t15378*t20515;
  t20581 = -1.*t17083*t20532;
  t20582 = t20580 + t20581;
  t20689 = -1.*t16498*t16803;
  t20690 = -1.*t16699*t16391*t16755;
  t20691 = t20689 + t20690;
  t18230 = -1.*t16695*t18229*t17083;
  t18234 = t15378*t18233;
  t18235 = t18230 + t18234;
  t18240 = -1.*t16695*t18239*t17083;
  t18244 = t15378*t18243;
  t18246 = t18240 + t18244;
  t20693 = -1.*t16695*t20691*t17083;
  t20697 = t16082*t15685*t20691;
  t20701 = -1.*t19432*t17461;
  t20702 = t20697 + t20701;
  t20712 = t15378*t20702;
  t20713 = t20693 + t20712;
  t20732 = -0.098*t16699;
  t20733 = -1.*t16803*t19520;
  t20734 = -1.*t16699*t19554;
  t20735 = t20732 + t20733 + t20734;
  t20750 = t16082*t15685*t20735;
  t20751 = -1.*t19564*t17461;
  t20753 = t20750 + t20751;
  t20730 = t15685*t19564;
  t20736 = t16082*t20735*t17461;
  t20738 = t20730 + t20736;
  t20747 = -1.*t16695*t20735*t17083;
  t20754 = t15378*t20753;
  t20760 = t20747 + t20754;
  t20764 = -1.*t15378*t16695*t20735;
  t20765 = -1.*t17083*t20753;
  t20766 = t20764 + t20765;
  t20725 = t15685*t19432;
  t20726 = t16082*t20691*t17461;
  t20728 = t20725 + t20726;
  t20741 = -1.*t15378*t16695*t20691;
  t20744 = -1.*t17083*t20702;
  t20745 = t20741 + t20744;
  t18290 = t18286*t17083;
  t18312 = t15378*t18308;
  t18313 = t18290 + t18312;
  t20918 = -0.00308*t16488;
  t20922 = -0.00088*t16570;
  t20927 = t20918 + t20922;
  t20915 = 0.00088*t16488;
  t20916 = t20915 + t19499;
  t20917 = -1.*t16542*t20916;
  t20928 = t16391*t16498*t20927;
  t20929 = t20917 + t20928;
  t20937 = t16391*t20916;
  t20938 = t16498*t16542*t20927;
  t20939 = t20937 + t20938;
  t20942 = -1.*t16803*t20929;
  t20943 = -1.*t16699*t16755*t20927;
  t20946 = t20942 + t20943;
  t20940 = t16695*t20939;
  t20947 = t16082*t20946;
  t20948 = t20940 + t20947;
  t20930 = t16699*t20929;
  t20934 = -1.*t16803*t16755*t20927;
  t20935 = t20930 + t20934;
  t20952 = t16082*t20939;
  t20954 = -1.*t16695*t20946;
  t20955 = t20952 + t20954;
  t20957 = t15685*t20948;
  t20960 = -1.*t20935*t17461;
  t20961 = t20957 + t20960;
  t20936 = t15685*t20935;
  t20949 = t20948*t17461;
  t20950 = t20936 + t20949;
  t20956 = t20955*t17083;
  t20962 = t15378*t20961;
  t20963 = t20956 + t20962;
  t20965 = t15378*t20955;
  t20970 = -1.*t17083*t20961;
  t20971 = t20965 + t20970;
  t19596 = t19575*t17461*t19591;
  t19687 = t19436*t17461*t19682;
  t19759 = -1.*t17036*t17461*t19682;
  t19760 = -1.*t19575*t17461*t18880;
  t19851 = -1.*t19575*t17461*t19591;
  t19856 = -1.*t19436*t17461*t19682;
  t19880 = t17221*t17461*t19682;
  t19886 = t19575*t17461*t18893;
  t21064 = t19436*t19727;
  t21065 = t19703*t19732;
  t21066 = t21064 + t19751 + t21065;
  t20314 = t19591*t20313;
  t20339 = t20330*t19682;
  t20406 = -1.*t19682*t18805;
  t20407 = -1.*t20313*t18880;
  t21075 = -1.*t19727*t17036;
  t21076 = -1.*t19732*t18194;
  t21087 = t21075 + t21076 + t19778;
  t21114 = -1.*t19436*t19727;
  t21115 = -1.*t19703*t19732;
  t21116 = t21114 + t19868 + t21115;
  t20443 = -1.*t19591*t20313;
  t20444 = -1.*t20330*t19682;
  t20452 = t18505*t19682;
  t20468 = t20313*t18893;
  t21129 = t19727*t17221;
  t21130 = t19732*t18212;
  t21135 = t21129 + t21130 + t19899;
  t20729 = t20728*t19682;
  t20739 = t19591*t20738;
  t20776 = -1.*t19682*t18940;
  t20777 = -1.*t20738*t18880;
  t20817 = -1.*t20728*t19682;
  t20820 = -1.*t19591*t20738;
  t20852 = t19682*t19129;
  t20853 = t20738*t18893;
  t19979 = t19703*t19682;
  t19980 = t19591*t19732;
  t20000 = -1.*t19682*t18194;
  t20002 = -1.*t19732*t18880;
  t20019 = -1.*t19703*t19682;
  t20020 = -1.*t19591*t19732;
  t20037 = t19682*t18212;
  t20038 = t19732*t18893;
  t20551 = t20550*t19682;
  t20578 = t19591*t20575;
  t20610 = -1.*t19682*t18464;
  t20611 = -1.*t20575*t18880;
  t20657 = -1.*t20550*t19682;
  t20658 = -1.*t19591*t20575;
  t20671 = t19682*t18440;
  t20673 = t20575*t18893;
  t20951 = -1.*t19591*t20950;
  t20977 = t19682*t18880;
  t20978 = t20950*t18893;
  t20998 = t19591*t20950;
  t21003 = -1.*t20950*t18880;
  t21013 = -1.*t19682*t19188;
  t21150 = t19436*t20342;
  t21151 = t20259*t19727;
  t21158 = -1.*t19727*t18090;
  t21159 = -1.*t20342*t17036;
  t21178 = -1.*t19436*t20342;
  t21179 = -1.*t20259*t19727;
  t21190 = t18010*t19727;
  t21191 = t20342*t17221;
  t21415 = t19582*t19678;
  t21416 = t19578*t19669;
  t21417 = t21064 + t21415 + t21416;
  t21033 = t19443*t19727;
  t21037 = t19436*t19694;
  t21435 = -1.*t19669*t17439;
  t21437 = -1.*t19678*t17456;
  t21441 = t21435 + t21437 + t21075;
  t21068 = -1.*t19727*t17069;
  t21070 = -1.*t19694*t17036;
  t21449 = -1.*t19582*t19678;
  t21450 = -1.*t19578*t19669;
  t21451 = t21114 + t21449 + t21450;
  t21091 = -1.*t19443*t19727;
  t21095 = -1.*t19436*t19694;
  t21486 = t19669*t17613;
  t21487 = t19678*t17638;
  t21488 = t21486 + t21487 + t21129;
  t21119 = t19727*t17285;
  t21120 = t19694*t17221;
  t21227 = -1.*t16695*t20691*t19727;
  t21228 = -1.*t16695*t19436*t20735;
  t21237 = t16695*t19727*t18229;
  t21238 = t16695*t20735*t17036;
  t21247 = t16695*t20691*t19727;
  t21248 = t16695*t19436*t20735;
  t21254 = -1.*t16695*t19727*t18239;
  t21257 = -1.*t16695*t20735*t17221;
  t21309 = t20515*t19727;
  t21310 = t19436*t20588;
  t21317 = -1.*t19727*t17893;
  t21319 = -1.*t20588*t17036;
  t21329 = -1.*t20515*t19727;
  t21330 = -1.*t19436*t20588;
  t21344 = t19727*t17715;
  t21345 = t20588*t17221;
  t21365 = -1.*t19436*t20955;
  t21369 = t19727*t17036;
  t21370 = t20955*t17221;
  t21384 = t19436*t20955;
  t21388 = -1.*t20955*t17036;
  t21391 = -1.*t19727*t18286;
  t21421 = t19578*t20300;
  t21425 = t20274*t19669;
  t21428 = -1.*t19669*t18128;
  t21429 = -1.*t20300*t17439;
  t21456 = -1.*t19578*t20300;
  t21463 = -1.*t20274*t19669;
  t21757 = Power(t16542,2);
  t21473 = t18041*t19669;
  t21474 = t20300*t17613;
  t21567 = t19432*t19669;
  t21568 = t19578*t19564;
  t21750 = t19432*t19564;
  t21751 = t16542*t16755*t19573;
  t21752 = t21416 + t21750 + t21751;
  t21582 = -1.*t19564*t17439;
  t21587 = -1.*t19669*t16994;
  t21769 = -1.*t19573*t16604;
  t21770 = -1.*t19564*t16994;
  t21771 = t21769 + t21435 + t21770;
  t21615 = -1.*t19432*t19669;
  t21616 = -1.*t19578*t19564;
  t21778 = -1.*t19432*t19564;
  t21779 = -1.*t16542*t16755*t19573;
  t21780 = t21450 + t21778 + t21779;
  t21623 = t19564*t17613;
  t21629 = t19669*t17171;
  t21807 = t19573*t17118;
  t21810 = t19564*t17171;
  t21811 = t21807 + t21486 + t21810;
  t21654 = -1.*t16699*t16542*t16755*t19669;
  t21656 = t16699*t19578*t20563;
  t21666 = -1.*t16699*t19669*t17878;
  t21667 = -1.*t16699*t20563*t17439;
  t21684 = t16699*t16542*t16755*t19669;
  t21688 = -1.*t16699*t19578*t20563;
  t21695 = t16699*t19669*t17676;
  t21696 = t16699*t20563*t17613;
  t21712 = -1.*t19578*t20935;
  t21715 = t19669*t17439;
  t21716 = t20935*t17613;
  t21727 = t19578*t20935;
  t21731 = -1.*t20935*t17439;
  t21732 = -1.*t19669*t18306;
  t21790 = -1.*t21757*t16755*t20298;
  t21794 = -1.*t16498*t16542*t19573;
  t21802 = -1.*t16488*t16542*t16755*t19573;
  t21803 = t16542*t20298*t17118;
  t22009 = Power(t16391,2);
  t21758 = t21757*t16755*t20298;
  t21759 = t16498*t16542*t19573;
  t21762 = -1.*t16542*t16755*t19573*t16570;
  t21763 = -1.*t16542*t20298*t16604;
  t22031 = t16498*t19520;
  t22032 = t16391*t16755*t19554;
  t22033 = t22031 + t21751 + t22032;
  t21952 = t16542*t16755*t20939;
  t22023 = -1.*t16488*t16755*t19520;
  t21972 = -1.*t19573*t17676;
  t21973 = -1.*t20939*t16604;
  t21934 = -1.*t16542*t16755*t20939;
  t21998 = -1.*t16498*t19520;
  t21999 = -1.*t16391*t16755*t19554;
  t22000 = t21998 + t21779 + t21999;
  t22091 = Power(t16755,2);
  t21943 = t20939*t17118;
  t21944 = t19573*t16604;
  t21901 = -1.*t16391*t16755*t19573;
  t21902 = -1.*t16542*t16755*t20571;
  t21914 = t20571*t17118;
  t21915 = t19573*t17169;
  t22024 = t19554*t17169;
  t22025 = t22023 + t21807 + t22024;
  t21878 = t16391*t16755*t19573;
  t21881 = t16542*t16755*t20571;
  t22060 = -1.*t16755*t19520*t16570;
  t22061 = -1.*t19554*t16922;
  t22062 = t22060 + t22061 + t21769;
  t21887 = -1.*t19573*t16922;
  t21888 = -1.*t20571*t16604;
  t22035 = t16498*t20294;
  t22041 = -1.*t16755*t19520;
  t22050 = -1.*t16755*t20294*t16570;
  t22051 = -1.*t16498*t19520*t16570;
  t22017 = -1.*t16488*t16755*t20294;
  t22018 = -1.*t16498*t16488*t19520;
  t22008 = -1.*t16498*t20294;
  t22013 = t16755*t19520;
  t22210 = -1.*t16755*t19543;
  t22211 = t22210 + t21998;
  t22115 = t16488*t22091*t20927;
  t22116 = t16755*t19520*t16570;
  t22179 = t16755*t19543;
  t22180 = t22179 + t22031;
  t22228 = t16498*t16488*t19543;
  t22248 = Power(t16498,2);
  t22092 = t22091*t20927*t16570;
  t22231 = t19552*t16570;
  p_output1[0]=var2[17]*(-0.5*(0.0001630904*t18207 - 0.0005708164*t18214)*var2[4] - 0.5*(0.0001630904*t15378*t17488 - 0.0005708164*t15378*t17640)*var2[5] - 0.5*(0.0001630904*t17088 - 0.0005708164*t17292)*var2[13] - 0.5*(0.0001630904*t18235 - 0.0005708164*t18246)*var2[14] - 0.5*(-0.0005708164*t17799 + 0.0001630904*t17945)*var2[15] - 0.5*(-0.0005708164*t18073 + 0.0001630904*t18170)*var2[16] - 0.5*(-0.0005708164*t18263 + 0.0001630904*t18313)*var2[17]);
  p_output1[1]=var2[17]*(-0.5*(0.0001630904*(-1.*t18207*t18339 - 1.*t18329*t18880) - 0.0005708164*(-1.*t18214*t18339 - 1.*t18329*t18893))*var2[3] - 0.5*(-0.0001630904*t18329*t18372 + 0.0005708164*t18329*t18379)*var2[4] - 0.5*(0.0001630904*(t17083*t17488*t18329 + t18194*t18339) - 0.0005708164*(t17083*t17640*t18329 + t18212*t18339))*var2[5] - 0.5*(0.0001630904*(-1.*t18329*t18335 + t17036*t17461*t18339) - 0.0005708164*(t17221*t17461*t18339 - 1.*t18329*t18356))*var2[13] - 0.5*(0.0001630904*(t18339*t18940 - 1.*t18329*t19112) - 0.0005708164*(t18339*t19129 - 1.*t18329*t19135))*var2[14] - 0.5*(-0.0005708164*(t18339*t18440 - 1.*t18329*t18449) + 0.0001630904*(t18339*t18464 - 1.*t18329*t18473))*var2[15] - 0.5*(-0.0005708164*(t18339*t18505 - 1.*t18329*t18517) + 0.0001630904*(t18339*t18805 - 1.*t18329*t18827))*var2[16] - 0.5*(-0.0005708164*t19154 + 0.0001630904*(t18339*t19188 - 1.*t18329*t19211))*var2[17]);
  p_output1[2]=var2[17]*(-0.5*(-0.0005708164*(-1.*t18214*t18329 + t18339*t18893) + 0.0001630904*t19154)*var2[3] - 0.5*(0.0001630904*t18339*t18372 - 0.0005708164*t18339*t18379)*var2[4] - 0.5*(0.0001630904*(t18194*t18329 - 1.*t17083*t17488*t18339) - 0.0005708164*(t18212*t18329 - 1.*t17083*t17640*t18339))*var2[5] - 0.5*(0.0001630904*(t17036*t17461*t18329 + t18335*t18339) - 0.0005708164*(t17221*t17461*t18329 + t18339*t18356))*var2[13] - 0.5*(0.0001630904*(t18329*t18940 + t18339*t19112) - 0.0005708164*(t18329*t19129 + t18339*t19135))*var2[14] - 0.5*(-0.0005708164*(t18329*t18440 + t18339*t18449) + 0.0001630904*(t18329*t18464 + t18339*t18473))*var2[15] - 0.5*(-0.0005708164*(t18329*t18505 + t18339*t18517) + 0.0001630904*(t18329*t18805 + t18339*t18827))*var2[16] - 0.5*(-0.0005708164*(t18207*t18339 + t18329*t18880) + 0.0001630904*(t18329*t19188 + t18339*t19211))*var2[17]);
  p_output1[3]=var2[17]*(-0.5*(-3.e-6*t18207 + 0.000011*t18214 + 0.000069*t19716 + 0.0001630904*(t18214*t19876 + t19716*t19952 + t19705*(t18214*t19737 + t18379*t19744 + t19744*t19847 + t18214*t20121) + t19847*(-1.*t19716*t19737 - 1.*t19705*t19744 - 1.*t19716*t20121 - 1.*t19744*t20140)) - 0.0005708164*(t18207*t19757 + t19716*t19781 + t19705*(-1.*t18207*t19737 - 1.*t18263*t19744 - 1.*t18372*t19744 - 1.*t18207*t20121) + t18263*(t19716*t19737 + t19705*t19744 + t19716*t20121 + t19744*t20140)))*var2[4] - 0.5*(-3.e-6*t15378*t17488 + 0.000011*t15378*t17640 + 0.000069*t15378*t19968 - 0.0005708164*(t15378*t17488*t19757 + t15378*t19781*t19968 + t18263*(t15378*t19737*t19968 - 1.*t17083*t19744*t19968 + t19979 + t19980 + t15378*t19705*t19987 - 1.*t17083*t19716*t19987) + t19705*(-1.*t15378*t17488*t19737 + t17083*t17488*t19744 + t17083*t18207*t19987 - 1.*t15378*t18263*t19987 + t20000 + t20002)) + 0.0001630904*(t15378*t17640*t19876 + t15378*t19952*t19968 + t19847*(-1.*t15378*t19737*t19968 + t17083*t19744*t19968 - 1.*t15378*t19705*t19987 + t17083*t19716*t19987 + t20019 + t20020) + t19705*(t15378*t17640*t19737 - 1.*t17083*t17640*t19744 - 1.*t17083*t18214*t19987 + t15378*t19847*t19987 + t20037 + t20038)))*var2[5] - 0.5*(-3.e-6*t17088 + 0.000011*t17292 + 0.000069*t19446 - 0.0005708164*(t18263*(t19596 + t19687 + t19696*t19705 + t19713*t19716 + t19446*t19737 + t19741*t19744) + t17088*t19757 + t19705*(-1.*t18263*t19696 - 1.*t18207*t19713 - 1.*t17088*t19737 - 1.*t18335*t19744 + t19759 + t19760) + t19446*t19781) + 0.0001630904*(t19847*(-1.*t19696*t19705 - 1.*t19713*t19716 - 1.*t19446*t19737 - 1.*t19741*t19744 + t19851 + t19856) + t17292*t19876 + t19705*(t18214*t19713 + t17292*t19737 + t18356*t19744 + t19696*t19847 + t19880 + t19886) + t19446*t19952))*var2[13] - 0.5*(-3.e-6*t18235 + 0.000011*t18246 + 0.000069*t20713 - 0.0005708164*(t18235*t19757 + t19781*t20713 + t18263*(t19737*t20713 + t20729 + t20739 + t19744*t20745 + t19705*t20760 + t19716*t20766) + t19705*(-1.*t18235*t19737 - 1.*t19112*t19744 - 1.*t18263*t20760 - 1.*t18207*t20766 + t20776 + t20777)) + 0.0001630904*(t18246*t19876 + t19952*t20713 + t19847*(-1.*t19737*t20713 - 1.*t19744*t20745 - 1.*t19705*t20760 - 1.*t19716*t20766 + t20817 + t20820) + t19705*(t18246*t19737 + t19135*t19744 + t19847*t20760 + t18214*t20766 + t20852 + t20853)))*var2[14] - 0.5*(0.000011*t17799 - 3.e-6*t17945 + 0.000069*t20536 - 0.0005708164*(t17945*t19757 + t19781*t20536 + t18263*(t19737*t20536 + t20551 + t20578 + t19744*t20582 + t19705*t20597 + t19716*t20603) + t19705*(-1.*t17945*t19737 - 1.*t18473*t19744 - 1.*t18263*t20597 - 1.*t18207*t20603 + t20610 + t20611)) + 0.0001630904*(t17799*t19876 + t19952*t20536 + t19847*(-1.*t19737*t20536 - 1.*t19744*t20582 - 1.*t19705*t20597 - 1.*t19716*t20603 + t20657 + t20658) + t19705*(t17799*t19737 + t18449*t19744 + t19847*t20597 + t18214*t20603 + t20671 + t20673)))*var2[15] - 0.5*(0.000011*t18073 - 3.e-6*t18170 + 0.000069*t20281 - 0.0005708164*(t18170*t19757 + t19781*t20281 + t18263*(t19737*t20281 + t20314 + t20339 + t19705*t20351 + t19716*t20392 + t19744*t20402) + t19705*(-1.*t18170*t19737 - 1.*t18827*t19744 - 1.*t18263*t20351 - 1.*t18207*t20392 + t20406 + t20407)) + 0.0001630904*(t18073*t19876 + t19952*t20281 + t19847*(-1.*t19737*t20281 - 1.*t19705*t20351 - 1.*t19716*t20392 - 1.*t19744*t20402 + t20443 + t20444) + t19705*(t18073*t19737 + t18517*t19744 + t19847*t20351 + t18214*t20392 + t20452 + t20468)))*var2[16] - 0.5*(0.000011*t18263 - 3.e-6*t18313 + 0.0001630904*(t18263*t19876 + t19847*(t20951 - 1.*t19705*t20963 - 1.*t19716*t20971) + t19705*(t18263*t19737 + t18207*t19744 + t19847*t20963 + t18214*t20971 + t20977 + t20978)) - 0.0005708164*(t18313*t19757 + t18263*(t19705*t20963 + t19716*t20971 + t20998) + t19705*(-1.*t18313*t19737 - 1.*t19211*t19744 - 1.*t18263*t20963 - 1.*t18207*t20971 + t21003 + t21013)))*var2[17]);
  p_output1[4]=var2[17]*(-0.5*(-3.e-6*t18194 + 0.000011*t18212 + 0.000069*t19703 - 0.0005708164*(t18880*(t19732*t19968 + t19979 + t19980 + t19703*t19987) + t19591*(-1.*t17488*t19732 - 1.*t18194*t19987 + t20000 + t20002) + t18194*t21066 + t19703*t21087) + 0.0001630904*(t18893*(-1.*t19732*t19968 - 1.*t19703*t19987 + t20019 + t20020) + t19591*(t17640*t19732 + t18212*t19987 + t20037 + t20038) + t18212*t21116 + t19703*t21135))*var2[5] - 0.5*(-3.e-6*t17036*t17461 + 0.000011*t17221*t17461 + 0.000069*t17461*t19436 - 0.0005708164*(t18880*(t19596 + t19687 + t15685*t19575*t19703 + t15685*t19436*t19732 + t21033 + t21037) + t17036*t17461*t21066 + t19591*(-1.*t15685*t18194*t19575 - 1.*t15685*t17036*t19732 + t19759 + t19760 + t21068 + t21070) + t17461*t19436*t21087) + 0.0001630904*(t18893*(-1.*t15685*t19575*t19703 - 1.*t15685*t19436*t19732 + t19851 + t19856 + t21091 + t21095) + t17221*t17461*t21116 + t19591*(t15685*t18212*t19575 + t15685*t17221*t19732 + t19880 + t19886 + t21119 + t21120) + t17461*t19436*t21135))*var2[13] - 0.5*(-3.e-6*t18940 + 0.000011*t19129 + 0.000069*t20728 - 0.0005708164*(t18940*t21066 + t20728*t21087 + t18880*(t19732*t20702 + t20729 + t20739 + t19703*t20753 + t21227 + t21228) + t19591*(-1.*t18233*t19732 - 1.*t18194*t20753 + t20776 + t20777 + t21237 + t21238)) + 0.0001630904*(t19129*t21116 + t20728*t21135 + t18893*(-1.*t19732*t20702 - 1.*t19703*t20753 + t20817 + t20820 + t21247 + t21248) + t19591*(t18243*t19732 + t18212*t20753 + t20852 + t20853 + t21254 + t21257)))*var2[14] - 0.5*(0.000011*t18440 - 3.e-6*t18464 + 0.000069*t20550 - 0.0005708164*(t18464*t21066 + t20550*t21087 + t18880*(t19732*t20532 + t20551 + t20578 + t19703*t20595 + t21309 + t21310) + t19591*(-1.*t17936*t19732 - 1.*t18194*t20595 + t20610 + t20611 + t21317 + t21319)) + 0.0001630904*(t18440*t21116 + t20550*t21135 + t18893*(-1.*t19732*t20532 - 1.*t19703*t20595 + t20657 + t20658 + t21329 + t21330) + t19591*(t17740*t19732 + t18212*t20595 + t20671 + t20673 + t21344 + t21345)))*var2[15] - 0.5*(0.000011*t18505 - 3.e-6*t18805 + 0.000069*t20330 - 0.0005708164*(t18805*t21066 + t20330*t21087 + t18880*(t19732*t20279 + t20314 + t20339 + t19703*t20349 + t21150 + t21151) + t19591*(-1.*t18135*t19732 - 1.*t18194*t20349 + t20406 + t20407 + t21158 + t21159)) + 0.0001630904*(t18505*t21116 + t20330*t21135 + t18893*(-1.*t19732*t20279 - 1.*t19703*t20349 + t20443 + t20444 + t21178 + t21179) + t19591*(t18043*t19732 + t18212*t20349 + t20452 + t20468 + t21190 + t21191)))*var2[16] - 0.5*(0.000011*t18880 - 3.e-6*t19188 + 0.0001630904*(t18880*t21116 + t18893*(t20951 - 1.*t19703*t20961 + t21365) + t19591*(t18194*t19732 + t18212*t20961 + t20977 + t20978 + t21369 + t21370)) - 0.0005708164*(t19188*t21066 + t18880*(t19703*t20961 + t20998 + t21384) + t19591*(-1.*t18308*t19732 - 1.*t18194*t20961 + t21003 + t21013 + t21388 + t21391)))*var2[17]);
  p_output1[5]=var2[17]*(-0.5*(-3.e-6*t17069 + 0.000011*t17285 + 0.000069*t19443 - 0.0005708164*(t17036*(t19575*t19582 + t19436*t19678 + t21033 + t21037) + t19436*(-1.*t17456*t19575 - 1.*t17036*t19678 + t21068 + t21070) + t17069*t21417 + t19443*t21441) + 0.0001630904*(t17221*(-1.*t19575*t19582 - 1.*t19436*t19678 + t21091 + t21095) + t19436*(t17638*t19575 + t17221*t19678 + t21119 + t21120) + t17285*t21451 + t19443*t21488))*var2[13] - 0.5*(3.e-6*t16695*t18229 - 0.000011*t16695*t18239 - 0.000069*t16695*t20691 - 0.0005708164*(-1.*t16695*t18229*t21417 - 1.*t16695*t20691*t21441 + t17036*(t16082*t19678*t20691 + t16082*t19582*t20735 + t21227 + t21228 + t21567 + t21568) + t19436*(-1.*t16082*t18229*t19678 - 1.*t16082*t17456*t20735 + t21237 + t21238 + t21582 + t21587)) + 0.0001630904*(-1.*t16695*t18239*t21451 - 1.*t16695*t20691*t21488 + t17221*(-1.*t16082*t19678*t20691 - 1.*t16082*t19582*t20735 + t21247 + t21248 + t21615 + t21616) + t19436*(t16082*t18239*t19678 + t16082*t17638*t20735 + t21254 + t21257 + t21623 + t21629)))*var2[14] - 0.5*(0.000011*t17715 - 3.e-6*t17893 + 0.000069*t20515 - 0.0005708164*(t17893*t21417 + t20515*t21441 + t17036*(t19678*t20525 + t19582*t20573 + t21309 + t21310 + t21654 + t21656) + t19436*(-1.*t17924*t19678 - 1.*t17456*t20573 + t21317 + t21319 + t21666 + t21667)) + 0.0001630904*(t17715*t21451 + t20515*t21488 + t17221*(-1.*t19678*t20525 - 1.*t19582*t20573 + t21329 + t21330 + t21684 + t21688) + t19436*(t17721*t19678 + t17638*t20573 + t21344 + t21345 + t21695 + t21696)))*var2[15] - 0.5*(0.000011*t18010 - 3.e-6*t18090 + 0.000069*t20259 - 0.0005708164*(t18090*t21417 + t17036*(t19678*t20269 + t19582*t20311 + t21150 + t21151 + t21421 + t21425) + t19436*(-1.*t18106*t19678 - 1.*t17456*t20311 + t21158 + t21159 + t21428 + t21429) + t20259*t21441) + 0.0001630904*(t18010*t21451 + t17221*(-1.*t19678*t20269 - 1.*t19582*t20311 + t21178 + t21179 + t21456 + t21463) + t19436*(t18021*t19678 + t17638*t20311 + t21190 + t21191 + t21473 + t21474) + t20259*t21488))*var2[16] - 0.5*(0.000011*t17036 - 3.e-6*t18286 + 0.0001630904*(t17036*t21451 + t17221*(-1.*t19582*t20948 + t21365 + t21712) + t19436*(t17456*t19678 + t17638*t20948 + t21369 + t21370 + t21715 + t21716)) - 0.0005708164*(t18286*t21417 + t17036*(t19582*t20948 + t21384 + t21727) + t19436*(-1.*t18295*t19678 - 1.*t17456*t20948 + t21388 + t21391 + t21731 + t21732)))*var2[17]);
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=0;
  p_output1[13]=var2[17]*(-0.5*(-3.e-6*t16994 + 0.000011*t17171 + 0.000069*t19432 - 0.0005708164*(0.1*t17613 + t17439*(t19564*t20691 + t19432*t20735 + t21567 + t21568) + t19578*(-1.*t18229*t19564 - 1.*t16994*t20735 + t21582 + t21587) + t16994*t21752 + t19432*t21771) + 0.0001630904*(0.1*t17439 + t17613*(-1.*t19564*t20691 - 1.*t19432*t20735 + t21615 + t21616) + t19578*(t18239*t19564 + t17171*t20735 + t21623 + t21629) + t17171*t21780 + t19432*t21811))*var2[14] - 0.5*(-0.000069*t16542*t16699*t16755 + 0.000011*t16699*t17676 - 3.e-6*t16699*t17878 - 0.0005708164*(0.1*t16803*t17676 + t16699*t17878*t21752 - 1.*t16542*t16699*t16755*t21771 + t17439*(t16542*t16755*t16803*t19564 - 1.*t16803*t19432*t20563 + t21654 + t21656 + t21878 + t21881) + t19578*(t16803*t17878*t19564 + t16803*t16994*t20563 + t21666 + t21667 + t21887 + t21888)) + 0.0001630904*(0.1*t16803*t17878 + t16699*t17676*t21780 - 1.*t16542*t16699*t16755*t21811 + t17613*(-1.*t16542*t16755*t16803*t19564 + t16803*t19432*t20563 + t21684 + t21688 + t21901 + t21902) + t19578*(-1.*t16803*t17676*t19564 - 1.*t16803*t17171*t20563 + t21695 + t21696 + t21914 + t21915)))*var2[15] - 0.5*(0.000011*t18041 - 3.e-6*t18128 + 0.000069*t20274 - 0.0005708164*(0.1*(t16488*t16498*t16699 - 1.*t16391*t16488*t16755*t16803) + t18128*t21752 + t17439*(t19564*t20257 + t19432*t20308 + t21421 + t21425 + t21758 + t21759) + t19578*(-1.*t18088*t19564 - 1.*t16994*t20308 + t21428 + t21429 + t21762 + t21763) + t20274*t21771) + 0.0001630904*(0.1*(-1.*t16498*t16570*t16699 + t16391*t16570*t16755*t16803) + t18041*t21780 + t17613*(-1.*t19564*t20257 - 1.*t19432*t20308 + t21456 + t21463 + t21790 + t21794) + t19578*(t17995*t19564 + t17171*t20308 + t21473 + t21474 + t21802 + t21803) + t20274*t21811))*var2[16] - 0.5*(0.000011*t17439 - 3.e-6*t18306 + 0.0001630904*(0.1*(t17141 + t16803*t18274) + t17439*t21780 + t17613*(-1.*t19432*t20946 + t21712 + t21934) + t19578*(t16994*t19564 + t17171*t20946 + t21715 + t21716 + t21943 + t21944)) - 0.0005708164*(0.1*(-1.*t16570*t16699*t16755 + t16803*t16922) + t18306*t21752 + t17439*(t19432*t20946 + t21727 + t21952) + t19578*(-1.*t18284*t19564 - 1.*t16994*t20946 + t21731 + t21732 + t21972 + t21973)))*var2[17]);
  p_output1[14]=var2[17]*(-0.5*(0.000069*t16391*t16755 - 3.e-6*t16922 + 0.000011*t17169 + 0.0001630904*(t17118*(t16542*t16755*t19554 - 1.*t16391*t16755*t20563 + t21901 + t21902) + t16542*t16755*(t17676*t19554 + t17169*t20563 + t21914 + t21915) + t17169*t22000 + t16391*t16755*t22025) - 0.0005708164*(t16604*(-1.*t16542*t16755*t19554 + t16391*t16755*t20563 + t21878 + t21881) + t16542*t16755*(-1.*t17878*t19554 - 1.*t16922*t20563 + t21887 + t21888) + t16922*t22033 + t16391*t16755*t22062))*var2[15] - 0.5*(0.000069*t16498*t16542 - 0.000011*t16488*t16542*t16755 - 3.e-6*t16542*t16570*t16755 + 0.0001630904*(-0.098*t16498*t16570 - 1.*t16488*t16542*t16755*t22000 + t17118*(-1.*t16391*t16498*t19554 + t21790 + t21794 + t22008 - 1.*t16755*t20298*t22009 + t22013) + t16542*t16755*(-1.*t16391*t16488*t16755*t19554 + t16391*t17169*t20298 + t21802 + t21803 + t22017 + t22018) + t16498*t16542*t22025) - 0.0005708164*(0.098*t16488*t16498 + t16542*t16570*t16755*t22033 + t16604*(t16391*t16498*t19554 + t21758 + t21759 + t16755*t20298*t22009 + t22035 + t22041) + t16542*t16755*(-1.*t16391*t16570*t16755*t19554 - 1.*t16391*t16922*t20298 + t21762 + t21763 + t22050 + t22051) + t16498*t16542*t22062))*var2[16] - 0.5*(0.000011*t16604 - 3.e-6*t17676 - 0.0005708164*(-0.098*t16570*t16755 + t16604*(-1.*t16498*t16755*t20927 + t16391*t16755*t20929 + t21952) + t17676*t22033 + t16542*t16755*(-1.*t18274*t19554 - 1.*t16922*t20929 + t21972 + t21973 + t22023 + t22092)) + 0.0001630904*(-0.098*t16488*t16755 + t17118*(t16498*t16755*t20927 - 1.*t16391*t16755*t20929 + t21934) + t16604*t22000 + t16542*t16755*(t16922*t19554 + t17169*t20929 + t21943 + t21944 + t22115 + t22116)))*var2[17]);
  p_output1[15]=var2[17]*(-0.5*(-0.000011*t16488*t16498 - 3.e-6*t16498*t16570 - 0.000069*t16755 - 0.0005708164*(-0.1*t16488*t16755 + t16570*t16755*(t16498*t19543 + t16755*t20298 + t22035 + t22041) + t16498*(-1.*t16570*t16755*t19543 + t16498*t16570*t20298 + t22050 + t22051) - 1.*t16755*(t16498*t16570*t19543 - 1.*t16488*t19552 + t22060) + t16498*t16570*t22180) + 0.0001630904*(0.1*t16570*t16755 - 1.*t16488*t16755*(-1.*t16498*t19543 - 1.*t16755*t20298 + t22008 + t22013) + t16498*(-1.*t16488*t16755*t19543 + t16488*t16498*t20298 + t22017 + t22018) - 1.*t16488*t16498*t22211 - 1.*t16755*(t22023 + t22228 + t22231)))*var2[16] - 0.5*(-3.e-6*t16488*t16755 + 0.000011*t16570*t16755 + 0.0001630904*(-0.1*t16488*t16498 - 0.113*t16570 + t16570*t16755*t22211 + t16498*(-1.*t16498*t16570*t19543 + t16488*t19552 + t16570*t20916 + t22115 + t22116 + t16488*t20927*t22248)) - 0.0005708164*(0.113*t16488 - 0.1*t16498*t16570 + t16488*t16755*t22180 + t16498*(-1.*t16488*t20916 + t22023 + t22092 + t22228 + t22231 + t16570*t20927*t22248)))*var2[17]);
  p_output1[16]=-0.5*(-3.725432216e-6*t16488 + 0.000054539012756*t16570)*Power(var2[17],2);
  p_output1[17]=0;
  p_output1[18]=0;
  p_output1[19]=0;
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=0;
  p_output1[24]=0;
  p_output1[25]=0;
  p_output1[26]=0;
  p_output1[27]=0;
  p_output1[28]=0;
  p_output1[29]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 30 && ncols == 1) && 
      !(mrows == 1 && ncols == 30))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 30 && ncols == 1) && 
      !(mrows == 1 && ncols == 30))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 30, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "Ce1_vec18_NaoH25V50.hh"

namespace SymFunction
{

void Ce1_vec18_NaoH25V50_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
