/*
 * Automatically Generated from Mathematica.
 * Tue 10 Jul 2018 11:14:19 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;


#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t43295;
  double t43822;
  double t43544;
  double t43303;
  double t44220;
  double t44227;
  double t44286;
  double t65844;
  double t66062;
  double t66489;
  double t66505;
  double t67089;
  double t67385;
  double t67391;
  double t67461;
  double t67207;
  double t67250;
  double t67354;
  double t67466;
  double t43571;
  double t66682;
  double t66811;
  double t66959;
  double t33917;
  double t67357;
  double t67572;
  double t67609;
  double t28491;
  double t72352;
  double t72360;
  double t72372;
  double t67689;
  double t67700;
  double t72796;
  double t72800;
  double t72810;
  double t72456;
  double t72457;
  double t72466;
  double t72083;
  double t72287;
  double t72377;
  double t72382;
  double t72515;
  double t72843;
  double t72851;
  double t66816;
  double t67616;
  double t67624;
  double t67709;
  double t67727;
  double t70633;
  double t71868;
  double t72087;
  double t72100;
  double t72104;
  double t72139;
  double t72144;
  double t72386;
  double t72855;
  double t72856;
  double t72865;
  double t72866;
  double t72948;
  double t72978;
  double t73011;
  double t73023;
  double t73024;
  double t73050;
  double t73093;
  double t73701;
  double t73705;
  double t73717;
  double t73722;
  double t73728;
  double t73729;
  double t73764;
  double t73765;
  double t73766;
  double t73763;
  double t73769;
  double t73776;
  double t73777;
  double t73778;
  double t73856;
  double t73866;
  double t73878;
  double t73879;
  double t73880;
  double t73882;
  double t73902;
  double t73908;
  double t73909;
  double t73910;
  double t74063;
  double t74067;
  double t74054;
  double t74055;
  double t74068;
  double t74084;
  double t74085;
  double t74086;
  double t74011;
  double t74024;
  double t74060;
  double t74062;
  double t74091;
  double t74096;
  double t74101;
  double t74102;
  double t74104;
  double t74116;
  double t74127;
  double t74128;
  double t74135;
  double t74138;
  double t74139;
  double t74141;
  double t74142;
  double t74145;
  double t74150;
  double t74160;
  double t74126;
  double t74140;
  double t74163;
  double t74168;
  double t74025;
  double t74033;
  double t74097;
  double t74120;
  double t74122;
  double t73988;
  double t74005;
  double t74010;
  double t74124;
  double t74172;
  double t74173;
  double t74178;
  double t74183;
  double t74185;
  double t74189;
  double t74196;
  double t74198;
  double t74200;
  double t74201;
  double t74202;
  double t74203;
  double t74204;
  double t74205;
  double t74207;
  double t74242;
  double t74246;
  double t74253;
  double t74262;
  double t74267;
  double t74275;
  double t74215;
  double t74216;
  double t74217;
  double t73916;
  double t73959;
  double t73966;
  double t74174;
  double t74210;
  double t74212;
  double t74298;
  double t74303;
  double t74308;
  double t74224;
  double t74230;
  double t74234;
  double t74286;
  double t74291;
  double t74294;
  double t74549;
  double t74555;
  double t74566;
  double t74834;
  double t74836;
  double t74837;
  double t74845;
  double t74848;
  double t74854;
  double t74312;
  double t74964;
  double t74968;
  double t74970;
  double t74514;
  double t74939;
  double t74940;
  double t74944;
  double t74639;
  double t74781;
  double t74956;
  double t74980;
  double t74320;
  double t74368;
  double t74389;
  double t75010;
  double t75012;
  double t74524;
  double t74525;
  double t74526;
  double t75056;
  double t75068;
  double t74665;
  double t74705;
  double t74729;
  double t75109;
  double t75129;
  double t74787;
  double t74789;
  double t74798;
  double t75319;
  double t75321;
  double t75329;
  double t75337;
  double t75339;
  double t75340;
  double t75364;
  double t75366;
  double t75368;
  double t75395;
  double t75398;
  double t75399;
  double t75093;
  double t75471;
  double t75481;
  double t75482;
  double t75147;
  double t75514;
  double t75524;
  double t75534;
  double t75538;
  double t75539;
  double t75546;
  double t74988;
  double t75032;
  double t75629;
  double t75638;
  double t74989;
  double t74992;
  double t75661;
  double t75663;
  double t75033;
  double t75034;
  double t75513;
  double t75551;
  double t75094;
  double t75095;
  double t75585;
  double t75591;
  double t75158;
  double t75160;
  double t75330;
  double t75331;
  double t75333;
  double t75693;
  double t75702;
  double t75848;
  double t75849;
  double t75850;
  double t75342;
  double t75349;
  double t75350;
  double t75718;
  double t75734;
  double t75875;
  double t75878;
  double t75894;
  double t75915;
  double t75922;
  double t75928;
  double t75747;
  double t75757;
  double t75970;
  double t75971;
  double t75973;
  double t75772;
  double t75787;
  double t75501;
  double t76217;
  double t76222;
  double t76228;
  double t76229;
  double t75557;
  double t76232;
  double t76234;
  double t76238;
  double t75610;
  double t75653;
  double t76260;
  double t76261;
  double t76267;
  double t76482;
  double t76491;
  double t76494;
  double t76528;
  double t76530;
  double t76531;
  double t76541;
  double t76543;
  double t76544;
  double t76573;
  double t76584;
  double t76586;
  double t76597;
  double t76614;
  double t76627;
  double t76649;
  double t76660;
  double t76661;
  double t76667;
  double t76668;
  double t76669;
  double t76231;
  double t76243;
  double t75504;
  double t75505;
  double t76269;
  double t76312;
  double t75558;
  double t75565;
  double t76441;
  double t76456;
  double t75611;
  double t75619;
  double t76497;
  double t76499;
  double t75656;
  double t75657;
  double t76862;
  double t76866;
  double t76919;
  double t76921;
  double t76936;
  double t76887;
  double t76895;
  double t76961;
  double t76978;
  double t76979;
  double t76994;
  double t76995;
  double t77002;
  double t76775;
  double t76781;
  double t77013;
  double t77014;
  double t77021;
  double t76812;
  double t76816;
  double t76534;
  double t76535;
  double t76537;
  double t77012;
  double t77055;
  double t77428;
  double t77429;
  double t77430;
  double t76545;
  double t76546;
  double t76560;
  double t77321;
  double t77377;
  double t77435;
  double t77437;
  double t77438;
  double t77443;
  double t77444;
  double t77445;
  double t77397;
  double t77411;
  double t77461;
  double t77489;
  double t77494;
  double t77416;
  double t77418;
  double t76473;
  double t77645;
  double t77646;
  double t77603;
  double t77605;
  double t77606;
  double t77608;
  double t77610;
  double t76504;
  double t76251;
  double t76385;
  double t77929;
  double t77930;
  double t77932;
  double t77696;
  double t77706;
  double t77727;
  double t76250;
  double t76257;
  double t77873;
  double t77877;
  double t76402;
  double t76403;
  double t77924;
  double t77926;
  double t76466;
  double t76474;
  double t77618;
  double t77661;
  double t76512;
  double t76513;
  double t77736;
  double t77791;
  double t78161;
  double t78162;
  double t78163;
  double t78028;
  double t78032;
  double t78316;
  double t78330;
  double t78354;
  double t78058;
  double t78064;
  double t78179;
  double t78184;
  double t78188;
  double t78394;
  double t78398;
  double t78399;
  double t78360;
  double t78365;
  double t78366;
  double t78220;
  double t78224;
  double t78225;
  double t78105;
  double t78110;
  double t78378;
  double t78380;
  double t78392;
  double t78120;
  double t78129;
  double t78230;
  double t78232;
  double t78235;
  double t78173;
  double t78192;
  double t78197;
  double t78228;
  double t78243;
  double t78246;
  double t78488;
  double t78489;
  double t78490;
  double t78498;
  double t78499;
  double t78517;
  double t78525;
  double t78527;
  double t78528;
  double t78541;
  double t78542;
  double t78544;
  double t78445;
  double t78446;
  double t78579;
  double t78582;
  double t78608;
  double t78464;
  double t78467;
  double t78652;
  double t78653;
  double t78654;
  double t78665;
  double t78670;
  double t78672;
  double t78359;
  double t78372;
  double t78636;
  double t78640;
  double t78642;
  double t78431;
  double t78433;
  double t78167;
  double t78204;
  double t78218;
  double t78226;
  double t78251;
  double t78252;
  double t78645;
  double t78673;
  double t78876;
  double t78877;
  double t78880;
  double t78701;
  double t78710;
  double t78898;
  double t78900;
  double t78902;
  double t78906;
  double t78907;
  double t78909;
  double t78750;
  double t78783;
  double t78890;
  double t78892;
  double t78893;
  double t78815;
  double t78818;
  double t77846;
  double t78982;
  double t78984;
  double t78985;
  double t78986;
  double t79004;
  double t79020;
  double t77893;
  double t77669;
  double t77795;
  double t77675;
  double t77683;
  double t79209;
  double t79223;
  double t79189;
  double t79201;
  double t77814;
  double t77831;
  double t77848;
  double t77849;
  double t78987;
  double t79331;
  double t79333;
  double t79054;
  double t79076;
  double t79087;
  double t77901;
  double t77906;
  double t79455;
  double t79456;
  double t79458;
  double t79406;
  double t79435;
  double t79436;
  double t79366;
  double t79367;
  double t79379;
  double t79385;
  double t79479;
  double t79480;
  double t79481;
  double t79496;
  double t79504;
  double t79505;
  double t79508;
  double t79509;
  double t79511;
  double t79339;
  double t79340;
  double t79552;
  double t79553;
  double t79554;
  double t79344;
  double t79349;
  double t79641;
  double t79652;
  double t79654;
  double t79519;
  double t79524;
  double t79525;
  double t79730;
  double t79751;
  double t79752;
  double t79482;
  double t79507;
  double t79814;
  double t79815;
  double t79816;
  double t79515;
  double t79527;
  double t79788;
  double t79790;
  double t79792;
  double t79846;
  double t79847;
  double t79851;
  double t79837;
  double t79839;
  double t79840;
  double t79573;
  double t79582;
  double t79859;
  double t79861;
  double t79862;
  double t79708;
  double t79710;
  double t79711;
  double t79639;
  double t79656;
  double t79716;
  double t79717;
  double t79721;
  double t79715;
  double t79723;
  double t79724;
  double t79772;
  double t79805;
  double t79806;
  double t79945;
  double t79946;
  double t79947;
  double t79957;
  double t79961;
  double t79962;
  double t79967;
  double t79969;
  double t79970;
  double t79972;
  double t79973;
  double t79977;
  double t79890;
  double t79891;
  double t80008;
  double t80009;
  double t80013;
  double t79913;
  double t79919;
  double t80019;
  double t80023;
  double t80027;
  double t80029;
  double t80030;
  double t80031;
  double t79842;
  double t79845;
  double t80033;
  double t80034;
  double t80035;
  double t79881;
  double t79882;
  double t79753;
  double t79807;
  double t79809;
  double t80032;
  double t80037;
  double t80106;
  double t80109;
  double t80110;
  double t79713;
  double t79725;
  double t79726;
  double t80049;
  double t80054;
  double t80116;
  double t80120;
  double t80125;
  double t80132;
  double t80134;
  double t80135;
  double t80069;
  double t80075;
  double t80138;
  double t80143;
  double t80149;
  double t80085;
  double t80088;
  double t79135;
  double t79147;
  double t80227;
  double t80229;
  double t80230;
  double t78977;
  double t78979;
  double t79258;
  double t80238;
  double t80239;
  double t79263;
  double t80225;
  double t80232;
  double t80234;
  double t80237;
  double t80286;
  double t80289;
  double t80290;
  double t80282;
  double t80283;
  double t80284;
  double t80263;
  double t80370;
  double t80371;
  double t80372;
  double t80291;
  double t80305;
  double t80308;
  double t80407;
  double t80416;
  double t80418;
  double t80401;
  double t80403;
  double t80405;
  double t80360;
  double t80397;
  double t80398;
  double t80365;
  double t80389;
  double t80515;
  double t80518;
  double t80519;
  double t80540;
  double t80543;
  double t80544;
  double t80419;
  double t80426;
  double t80429;
  double t80582;
  double t80587;
  double t80588;
  double t80591;
  double t80592;
  double t80597;
  double t80489;
  double t80511;
  double t80514;
  double t80563;
  double t80564;
  double t80565;
  double t80546;
  double t80567;
  double t80568;
  double t80657;
  double t80658;
  double t80663;
  double t80670;
  double t80671;
  double t80672;
  double t73306;
  double t73313;
  double t73617;
  double t80601;
  double t80608;
  double t80609;
  double t80697;
  double t80698;
  double t80699;
  double t80704;
  double t80709;
  double t80710;
  double t80618;
  double t80626;
  double t80627;
  double t80545;
  double t80569;
  double t80570;
  double t80711;
  double t80717;
  double t80719;
  double t80754;
  double t80756;
  double t80758;
  double t80760;
  double t80761;
  double t80763;
  double t80729;
  double t80740;
  double t80743;
  t43295 = Cos(var1[12]);
  t43822 = Cos(var1[9]);
  t43544 = Sin(var1[11]);
  t43303 = Sin(var1[9]);
  t44220 = Cos(var1[10]);
  t44227 = Cos(var1[11]);
  t44286 = t44220*t44227*t43295;
  t65844 = Sin(var1[10]);
  t66062 = Sin(var1[12]);
  t66489 = -1.*t65844*t66062;
  t66505 = t44286 + t66489;
  t67089 = Cos(var1[8]);
  t67385 = t44227*t43295*t65844;
  t67391 = t44220*t66062;
  t67461 = t67385 + t67391;
  t67207 = -1.*t43822*t43295*t43544;
  t67250 = -1.*t43303*t66505;
  t67354 = t67207 + t67250;
  t67466 = Sin(var1[8]);
  t43571 = -1.*t43295*t43303*t43544;
  t66682 = t43822*t66505;
  t66811 = t43571 + t66682;
  t66959 = Sin(var1[5]);
  t33917 = Cos(var1[5]);
  t67357 = t67089*t67354;
  t67572 = t67461*t67466;
  t67609 = t67357 + t67572;
  t28491 = Sin(var1[3]);
  t72352 = -1.*t43295*t65844;
  t72360 = -1.*t44220*t44227*t66062;
  t72372 = t72352 + t72360;
  t67689 = Cos(var1[3]);
  t67700 = Cos(var1[4]);
  t72796 = t44220*t43295;
  t72800 = -1.*t44227*t65844*t66062;
  t72810 = t72796 + t72800;
  t72456 = t43822*t43544*t66062;
  t72457 = -1.*t43303*t72372;
  t72466 = t72456 + t72457;
  t72083 = Sin(var1[4]);
  t72287 = t43303*t43544*t66062;
  t72377 = t43822*t72372;
  t72382 = t72287 + t72377;
  t72515 = t67089*t72466;
  t72843 = t72810*t67466;
  t72851 = t72515 + t72843;
  t66816 = t33917*t66811;
  t67616 = t66959*t67609;
  t67624 = t66816 + t67616;
  t67709 = t67089*t67461;
  t67727 = -1.*t67354*t67466;
  t70633 = t67709 + t67727;
  t71868 = t67700*t70633;
  t72087 = -1.*t66811*t66959;
  t72100 = t33917*t67609;
  t72104 = t72087 + t72100;
  t72139 = -1.*t72083*t72104;
  t72144 = t71868 + t72139;
  t72386 = t33917*t72382;
  t72855 = t66959*t72851;
  t72856 = t72386 + t72855;
  t72865 = t67089*t72810;
  t72866 = -1.*t72466*t67466;
  t72948 = t72865 + t72866;
  t72978 = t67700*t72948;
  t73011 = -1.*t72382*t66959;
  t73023 = t33917*t72851;
  t73024 = t73011 + t73023;
  t73050 = -1.*t72083*t73024;
  t73093 = t72978 + t73050;
  t73701 = -1.*t72083*t70633;
  t73705 = -1.*t67700*t72104;
  t73717 = t73701 + t73705;
  t73722 = -1.*t72083*t72948;
  t73728 = -1.*t67700*t73024;
  t73729 = t73722 + t73728;
  t73764 = t43822*t44227;
  t73765 = -1.*t44220*t43303*t43544;
  t73766 = t73764 + t73765;
  t73763 = t67089*t65844*t43544;
  t73769 = -1.*t73766*t67466;
  t73776 = t73763 + t73769;
  t73777 = t67700*t73776;
  t73778 = t44227*t43303;
  t73856 = t43822*t44220*t43544;
  t73866 = t73778 + t73856;
  t73878 = -1.*t73866*t66959;
  t73879 = t67089*t73766;
  t73880 = t65844*t43544*t67466;
  t73882 = t73879 + t73880;
  t73902 = t33917*t73882;
  t73908 = t73878 + t73902;
  t73909 = -1.*t72083*t73908;
  t73910 = t73777 + t73909;
  t74063 = -1.*t43295;
  t74067 = 1. + t74063;
  t74054 = -1.*t44227;
  t74055 = 1. + t74054;
  t74068 = 0.113*t74067;
  t74084 = 0.11212*t43295;
  t74085 = -0.00308*t66062;
  t74086 = t74068 + t74084 + t74085;
  t74011 = -1.*t44220;
  t74024 = 1. + t74011;
  t74060 = 0.113*t74055;
  t74062 = 0.09029*t43544;
  t74091 = t44227*t74086;
  t74096 = t74060 + t74062 + t74091;
  t74101 = 0.1*t74067;
  t74102 = 0.10308*t43295;
  t74104 = -0.00088*t66062;
  t74116 = t74101 + t74102 + t74104;
  t74127 = 0.105*t74055;
  t74128 = 0.19529*t44227;
  t74135 = 0.113*t43544;
  t74138 = -1.*t43544*t74086;
  t74139 = t74127 + t74128 + t74135 + t74138;
  t74141 = 0.113*t74024;
  t74142 = 0.1*t65844;
  t74145 = t44220*t74096;
  t74150 = -1.*t65844*t74116;
  t74160 = t74141 + t74142 + t74145 + t74150;
  t74126 = 0.098*t43303;
  t74140 = t43822*t74139;
  t74163 = -1.*t43303*t74160;
  t74168 = t74126 + t74140 + t74163;
  t74025 = 0.1*t74024;
  t74033 = -0.113*t65844;
  t74097 = t65844*t74096;
  t74120 = t44220*t74116;
  t74122 = t74025 + t74033 + t74097 + t74120;
  t73988 = -1.*t67089;
  t74005 = 1. + t73988;
  t74010 = 0.1*t74005;
  t74124 = t67089*t74122;
  t74172 = -1.*t74168*t67466;
  t74173 = t74010 + t74124 + t74172;
  t74178 = -1.*t43822;
  t74183 = 1. + t74178;
  t74185 = 0.098*t74183;
  t74189 = t43303*t74139;
  t74196 = t43822*t74160;
  t74198 = t74185 + t74189 + t74196;
  t74200 = -1.*t74198*t66959;
  t74201 = t67089*t74168;
  t74202 = -0.1*t67466;
  t74203 = t74122*t67466;
  t74204 = t74201 + t74202 + t74203;
  t74205 = t33917*t74204;
  t74207 = t74200 + t74205;
  t74242 = t67700*t74173;
  t74246 = -1.*t72083*t74207;
  t74253 = t74242 + t74246;
  t74262 = t72083*t73776;
  t74267 = t67700*t73908;
  t74275 = t74262 + t74267;
  t74215 = t72083*t74173;
  t74216 = t67700*t74207;
  t74217 = t74215 + t74216;
  t73916 = t72083*t70633;
  t73959 = t67700*t72104;
  t73966 = t73916 + t73959;
  t74174 = -1.*t72083*t74173;
  t74210 = -1.*t67700*t74207;
  t74212 = t74174 + t74210;
  t74298 = t33917*t74198;
  t74303 = t66959*t74204;
  t74308 = t74298 + t74303;
  t74224 = -1.*t72083*t73776;
  t74230 = -1.*t67700*t73908;
  t74234 = t74224 + t74230;
  t74286 = t33917*t73866;
  t74291 = t66959*t73882;
  t74294 = t74286 + t74291;
  t74549 = t72083*t72948;
  t74555 = t67700*t73024;
  t74566 = t74549 + t74555;
  t74834 = -1.*t33917*t66811;
  t74836 = -1.*t66959*t67609;
  t74837 = t74834 + t74836;
  t74845 = -1.*t33917*t72382;
  t74848 = -1.*t66959*t72851;
  t74854 = t74845 + t74848;
  t74312 = -1.*t74294*t74308;
  t74964 = -1.*t33917*t74198;
  t74968 = -1.*t66959*t74204;
  t74970 = t74964 + t74968;
  t74514 = t74308*t67624;
  t74939 = -1.*t33917*t73866;
  t74940 = -1.*t66959*t73882;
  t74944 = t74939 + t74940;
  t74639 = t74294*t74308;
  t74781 = -1.*t74308*t72856;
  t74956 = -1.*t74294*t74207;
  t74980 = -1.*t73908*t74308;
  t74320 = -1.*t74275*t74217;
  t74368 = -1.*t73910*t74253;
  t74389 = t74312 + t74320 + t74368;
  t75010 = t74308*t72104;
  t75012 = t74207*t67624;
  t74524 = t74217*t73966;
  t74525 = t74253*t72144;
  t74526 = t74514 + t74524 + t74525;
  t75056 = t74294*t74207;
  t75068 = t73908*t74308;
  t74665 = t74275*t74217;
  t74705 = t73910*t74253;
  t74729 = t74639 + t74665 + t74705;
  t75109 = -1.*t74308*t73024;
  t75129 = -1.*t74207*t72856;
  t74787 = -1.*t74217*t74566;
  t74789 = -1.*t74253*t73093;
  t74798 = t74781 + t74787 + t74789;
  t75319 = -1.*t67089*t72466;
  t75321 = -1.*t72810*t67466;
  t75329 = t75319 + t75321;
  t75337 = -1.*t67089*t67354;
  t75339 = -1.*t67461*t67466;
  t75340 = t75337 + t75339;
  t75364 = t67700*t75329;
  t75366 = -1.*t33917*t72083*t72948;
  t75368 = t75364 + t75366;
  t75395 = t67700*t75340;
  t75398 = -1.*t33917*t72083*t70633;
  t75399 = t75395 + t75398;
  t75093 = t73776*t74173;
  t75471 = -1.*t67089*t73766;
  t75481 = -1.*t65844*t43544*t67466;
  t75482 = t75471 + t75481;
  t75147 = -1.*t74173*t72948;
  t75514 = -0.1*t67089;
  t75524 = t75514 + t74124 + t74172;
  t75534 = -1.*t67089*t74168;
  t75538 = 0.1*t67466;
  t75539 = -1.*t74122*t67466;
  t75546 = t75534 + t75538 + t75539;
  t74988 = -1.*t73776*t74173;
  t75032 = t74173*t70633;
  t75629 = -1.*t75482*t74173;
  t75638 = -1.*t73776*t75546;
  t74989 = -1.*t73908*t74207;
  t74992 = t74988 + t74989 + t74312;
  t75661 = t74173*t75340;
  t75663 = t75546*t70633;
  t75033 = t74207*t72104;
  t75034 = t75032 + t75033 + t74514;
  t75513 = t75482*t74173;
  t75551 = t73776*t75546;
  t75094 = t73908*t74207;
  t75095 = t75093 + t75094 + t74639;
  t75585 = -1.*t74173*t75329;
  t75591 = -1.*t75546*t72948;
  t75158 = -1.*t74207*t73024;
  t75160 = t75147 + t75158 + t74781;
  t75330 = t72083*t75329;
  t75331 = t67700*t33917*t72948;
  t75333 = t75330 + t75331;
  t75693 = -1.*t66959*t75524*t74294;
  t75702 = -1.*t66959*t73776*t74308;
  t75848 = t72083*t75482;
  t75849 = t67700*t33917*t73776;
  t75850 = t75848 + t75849;
  t75342 = t72083*t75340;
  t75349 = t67700*t33917*t70633;
  t75350 = t75342 + t75349;
  t75718 = t66959*t70633*t74308;
  t75734 = t66959*t75524*t67624;
  t75875 = t67700*t33917*t75524;
  t75878 = t72083*t75546;
  t75894 = t75875 + t75878;
  t75915 = -1.*t33917*t72083*t75524;
  t75922 = t67700*t75546;
  t75928 = t75915 + t75922;
  t75747 = t66959*t75524*t74294;
  t75757 = t66959*t73776*t74308;
  t75970 = t67700*t75482;
  t75971 = -1.*t33917*t72083*t73776;
  t75973 = t75970 + t75971;
  t75772 = -1.*t66959*t72948*t74308;
  t75787 = -1.*t66959*t75524*t72856;
  t75501 = t73866*t74198;
  t76217 = 0.098*t43822;
  t76222 = -1.*t43303*t74139;
  t76228 = -1.*t43822*t74160;
  t76229 = t76217 + t76222 + t76228;
  t75557 = -1.*t74198*t72382;
  t76232 = -1.*t44227*t43303;
  t76234 = -1.*t43822*t44220*t43544;
  t76238 = t76232 + t76234;
  t75610 = -1.*t73866*t74198;
  t75653 = t74198*t66811;
  t76260 = -1.*t43303*t43544*t66062;
  t76261 = -1.*t43822*t72372;
  t76267 = t76260 + t76261;
  t76482 = t43295*t43303*t43544;
  t76491 = -1.*t43822*t66505;
  t76494 = t76482 + t76491;
  t76528 = t33917*t67089*t76267;
  t76530 = -1.*t72466*t66959;
  t76531 = t76528 + t76530;
  t76541 = t33917*t67089*t76494;
  t76543 = -1.*t67354*t66959;
  t76544 = t76541 + t76543;
  t76573 = t33917*t72466;
  t76584 = t67089*t76267*t66959;
  t76586 = t76573 + t76584;
  t76597 = -1.*t72083*t76531;
  t76614 = -1.*t67700*t76267*t67466;
  t76627 = t76597 + t76614;
  t76649 = t33917*t67354;
  t76660 = t67089*t76494*t66959;
  t76661 = t76649 + t76660;
  t76667 = -1.*t72083*t76544;
  t76668 = -1.*t67700*t76494*t67466;
  t76669 = t76667 + t76668;
  t76231 = t73766*t74198;
  t76243 = t73866*t74168;
  t75504 = t73882*t74204;
  t75505 = t75501 + t75093 + t75504;
  t76269 = -1.*t74168*t72382;
  t76312 = -1.*t74198*t72466;
  t75558 = -1.*t74204*t72851;
  t75565 = t75557 + t75558 + t75147;
  t76441 = -1.*t73766*t74198;
  t76456 = -1.*t73866*t74168;
  t75611 = -1.*t73882*t74204;
  t75619 = t75610 + t74988 + t75611;
  t76497 = t74168*t66811;
  t76499 = t74198*t67354;
  t75656 = t74204*t67609;
  t75657 = t75653 + t75656 + t75032;
  t76862 = t76229*t67466*t73776;
  t76866 = t76238*t67466*t74173;
  t76919 = t33917*t73766;
  t76921 = t67089*t76238*t66959;
  t76936 = t76919 + t76921;
  t76887 = -1.*t76494*t67466*t74173;
  t76895 = -1.*t76229*t67466*t70633;
  t76961 = t33917*t67089*t76229;
  t76978 = -1.*t74168*t66959;
  t76979 = t76961 + t76978;
  t76994 = t33917*t74168;
  t76995 = t67089*t76229*t66959;
  t77002 = t76994 + t76995;
  t76775 = -1.*t76229*t67466*t73776;
  t76781 = -1.*t76238*t67466*t74173;
  t77013 = t33917*t67089*t76238;
  t77014 = -1.*t73766*t66959;
  t77021 = t77013 + t77014;
  t76812 = t76267*t67466*t74173;
  t76816 = t76229*t67466*t72948;
  t76534 = t67700*t76531;
  t76535 = -1.*t76267*t72083*t67466;
  t76537 = t76534 + t76535;
  t77012 = -1.*t77002*t74294;
  t77055 = -1.*t76936*t74308;
  t77428 = t67700*t77021;
  t77429 = -1.*t76238*t72083*t67466;
  t77430 = t77428 + t77429;
  t76545 = t67700*t76544;
  t76546 = -1.*t76494*t72083*t67466;
  t76560 = t76545 + t76546;
  t77321 = t76661*t74308;
  t77377 = t77002*t67624;
  t77435 = t67700*t76979;
  t77437 = -1.*t76229*t72083*t67466;
  t77438 = t77435 + t77437;
  t77443 = -1.*t72083*t76979;
  t77444 = -1.*t67700*t76229*t67466;
  t77445 = t77443 + t77444;
  t77397 = t77002*t74294;
  t77411 = t76936*t74308;
  t77461 = -1.*t72083*t77021;
  t77489 = -1.*t67700*t76238*t67466;
  t77494 = t77461 + t77489;
  t77416 = -1.*t76586*t74308;
  t77418 = -1.*t77002*t72856;
  t76473 = -1.*t65844*t43544*t74122;
  t77645 = -0.113*t44220;
  t77646 = t77645 + t74142 + t74145 + t74150;
  t77603 = 0.1*t44220;
  t77605 = 0.113*t65844;
  t77606 = -1.*t65844*t74096;
  t77608 = -1.*t44220*t74116;
  t77610 = t77603 + t77605 + t77606 + t77608;
  t76504 = t74122*t67461;
  t76251 = t65844*t43544*t74122;
  t76385 = -1.*t74122*t72810;
  t77929 = -1.*t44220*t43295;
  t77930 = t44227*t65844*t66062;
  t77932 = t77929 + t77930;
  t77696 = -1.*t44227*t43295*t65844;
  t77706 = -1.*t44220*t66062;
  t77727 = t77696 + t77706;
  t76250 = t73766*t74168;
  t76257 = t75501 + t76250 + t76251;
  t77873 = t44220*t43544*t74122;
  t77877 = t65844*t43544*t77646;
  t76402 = -1.*t74168*t72466;
  t76403 = t76385 + t75557 + t76402;
  t77924 = -1.*t74122*t72372;
  t77926 = -1.*t77646*t72810;
  t76466 = -1.*t73766*t74168;
  t76474 = t75610 + t76466 + t76473;
  t77618 = -1.*t44220*t43544*t74122;
  t77661 = -1.*t65844*t43544*t77646;
  t76512 = t74168*t67354;
  t76513 = t76504 + t75653 + t76512;
  t77736 = t77646*t67461;
  t77791 = t74122*t66505;
  t78161 = t67089*t72372;
  t78162 = t43303*t77932*t67466;
  t78163 = t78161 + t78162;
  t78028 = -1.*t43822*t65844*t43544*t74198;
  t78032 = t43822*t73866*t77610;
  t78316 = t44220*t67089*t43544;
  t78330 = -1.*t43303*t65844*t43544*t67466;
  t78354 = t78316 + t78330;
  t78058 = -1.*t43822*t74198*t77932;
  t78064 = -1.*t43822*t77610*t72382;
  t78179 = -1.*t67089*t43303*t77932;
  t78184 = t72372*t67466;
  t78188 = t78179 + t78184;
  t78394 = -1.*t67089*t43303*t77610;
  t78398 = t77646*t67466;
  t78399 = t78394 + t78398;
  t78360 = t67089*t77646;
  t78365 = t43303*t77610*t67466;
  t78366 = t78360 + t78365;
  t78220 = t67089*t66505;
  t78224 = t43303*t77727*t67466;
  t78225 = t78220 + t78224;
  t78105 = t43822*t65844*t43544*t74198;
  t78110 = -1.*t43822*t73866*t77610;
  t78378 = t67089*t43303*t65844*t43544;
  t78380 = t44220*t43544*t67466;
  t78392 = t78378 + t78380;
  t78120 = t43822*t74198*t77727;
  t78129 = t43822*t77610*t66811;
  t78230 = -1.*t67089*t43303*t77727;
  t78232 = t66505*t67466;
  t78235 = t78230 + t78232;
  t78173 = -1.*t43822*t77932*t66959;
  t78192 = t33917*t78188;
  t78197 = t78173 + t78192;
  t78228 = -1.*t43822*t77727*t66959;
  t78243 = t33917*t78235;
  t78246 = t78228 + t78243;
  t78488 = t43822*t33917*t77932;
  t78489 = t66959*t78188;
  t78490 = t78488 + t78489;
  t78498 = t67700*t78163;
  t78499 = -1.*t72083*t78197;
  t78517 = t78498 + t78499;
  t78525 = t43822*t33917*t77727;
  t78527 = t66959*t78235;
  t78528 = t78525 + t78527;
  t78541 = t67700*t78225;
  t78542 = -1.*t72083*t78246;
  t78544 = t78541 + t78542;
  t78445 = -1.*t78354*t74173;
  t78446 = -1.*t73776*t78366;
  t78579 = -1.*t43822*t33917*t65844*t43544;
  t78582 = t66959*t78392;
  t78608 = t78579 + t78582;
  t78464 = t74173*t78225;
  t78467 = t78366*t70633;
  t78652 = -1.*t43822*t77610*t66959;
  t78653 = t33917*t78399;
  t78654 = t78652 + t78653;
  t78665 = t43822*t33917*t77610;
  t78670 = t66959*t78399;
  t78672 = t78665 + t78670;
  t78359 = t78354*t74173;
  t78372 = t73776*t78366;
  t78636 = t43822*t65844*t43544*t66959;
  t78640 = t33917*t78392;
  t78642 = t78636 + t78640;
  t78431 = -1.*t74173*t78163;
  t78433 = -1.*t78366*t72948;
  t78167 = t72083*t78163;
  t78204 = t67700*t78197;
  t78218 = t78167 + t78204;
  t78226 = t72083*t78225;
  t78251 = t67700*t78246;
  t78252 = t78226 + t78251;
  t78645 = -1.*t78608*t74308;
  t78673 = -1.*t74294*t78672;
  t78876 = t72083*t78354;
  t78877 = t67700*t78642;
  t78880 = t78876 + t78877;
  t78701 = t78672*t67624;
  t78710 = t74308*t78528;
  t78898 = t72083*t78366;
  t78900 = t67700*t78654;
  t78902 = t78898 + t78900;
  t78906 = t67700*t78366;
  t78907 = -1.*t72083*t78654;
  t78909 = t78906 + t78907;
  t78750 = t78608*t74308;
  t78783 = t74294*t78672;
  t78890 = t67700*t78354;
  t78892 = -1.*t72083*t78642;
  t78893 = t78890 + t78892;
  t78815 = -1.*t74308*t78490;
  t78818 = -1.*t78672*t72856;
  t77846 = t44227*t74139;
  t78982 = 0.113*t44227;
  t78984 = -0.09029*t43544;
  t78985 = -1.*t44227*t74086;
  t78986 = t78982 + t78984 + t78985;
  t79004 = 0.09029*t44227;
  t79020 = t79004 + t74135 + t74138;
  t77893 = -1.*t43544*t74139*t66062;
  t77669 = -1.*t44227*t74139;
  t77795 = -1.*t43295*t43544*t74139;
  t77675 = -1.*t44220*t43544*t74160;
  t77683 = t77669 + t76473 + t77675;
  t79209 = -1.*t44227*t78986;
  t79223 = t43544*t74139;
  t79189 = -1.*t43295*t43544*t78986;
  t79201 = -1.*t44227*t43295*t74139;
  t77814 = t74160*t66505;
  t77831 = t77795 + t76504 + t77814;
  t77848 = t44220*t43544*t74160;
  t77849 = t77846 + t76251 + t77848;
  t78987 = t44227*t78986;
  t79331 = Power(t44220,2);
  t79333 = Power(t65844,2);
  t79054 = -1.*t43544*t74139;
  t79076 = -1.*t43544*t78986*t66062;
  t79087 = -1.*t44227*t74139*t66062;
  t77901 = -1.*t74160*t72372;
  t77906 = t77893 + t77901 + t76385;
  t79455 = t44227*t43303*t66062;
  t79456 = t43822*t44220*t43544*t66062;
  t79458 = t79455 + t79456;
  t79406 = t43822*t44220*t44227;
  t79435 = -1.*t43303*t43544;
  t79436 = t79406 + t79435;
  t79366 = t79333*t43544*t79020;
  t79367 = t44227*t65844*t74122;
  t79379 = -1.*t65844*t43544*t74122*t66062;
  t79385 = -1.*t65844*t79020*t72810;
  t79479 = t43303*t78986;
  t79480 = t43822*t44220*t79020;
  t79481 = t79479 + t79480;
  t79496 = t43822*t78986;
  t79504 = -1.*t44220*t43303*t79020;
  t79505 = t79496 + t79504;
  t79508 = -1.*t44220*t44227*t43303;
  t79509 = -1.*t43822*t43544;
  t79511 = t79508 + t79509;
  t79339 = -1.*t79333*t43544*t79020;
  t79340 = -1.*t44227*t65844*t74122;
  t79552 = -1.*t44227*t43295*t43303;
  t79553 = -1.*t43822*t44220*t43295*t43544;
  t79554 = t79552 + t79553;
  t79344 = -1.*t43295*t65844*t43544*t74122;
  t79349 = t65844*t79020*t67461;
  t79641 = -1.*t43822*t44227*t43295;
  t79652 = t44220*t43295*t43303*t43544;
  t79654 = t79641 + t79652;
  t79519 = t43822*t44227*t66062;
  t79524 = -1.*t44220*t43303*t43544*t66062;
  t79525 = t79519 + t79524;
  t79730 = t67089*t65844*t43544*t66062;
  t79751 = -1.*t79525*t67466;
  t79752 = t79730 + t79751;
  t79482 = t73866*t79481;
  t79507 = t79436*t74198;
  t79814 = t44227*t67089*t65844;
  t79815 = -1.*t79511*t67466;
  t79816 = t79814 + t79815;
  t79515 = -1.*t74198*t79458;
  t79527 = -1.*t79481*t72382;
  t79788 = t67089*t79525;
  t79790 = t65844*t43544*t66062*t67466;
  t79792 = t79788 + t79790;
  t79846 = t67089*t79505;
  t79847 = t65844*t79020*t67466;
  t79851 = t79846 + t79847;
  t79837 = t67089*t65844*t79020;
  t79839 = -1.*t79505*t67466;
  t79840 = t79837 + t79839;
  t79573 = -1.*t73866*t79481;
  t79582 = -1.*t79436*t74198;
  t79859 = t67089*t79511;
  t79861 = t44227*t65844*t67466;
  t79862 = t79859 + t79861;
  t79708 = -1.*t43295*t67089*t65844*t43544;
  t79710 = -1.*t79654*t67466;
  t79711 = t79708 + t79710;
  t79639 = t79554*t74198;
  t79656 = t79481*t66811;
  t79716 = t67089*t79654;
  t79717 = -1.*t43295*t65844*t43544*t67466;
  t79721 = t79716 + t79717;
  t79715 = -1.*t79554*t66959;
  t79723 = t33917*t79721;
  t79724 = t79715 + t79723;
  t79772 = -1.*t79458*t66959;
  t79805 = t33917*t79792;
  t79806 = t79772 + t79805;
  t79945 = t33917*t79554;
  t79946 = t66959*t79721;
  t79947 = t79945 + t79946;
  t79957 = t67700*t79711;
  t79961 = -1.*t72083*t79724;
  t79962 = t79957 + t79961;
  t79967 = t33917*t79458;
  t79969 = t66959*t79792;
  t79970 = t79967 + t79969;
  t79972 = t67700*t79752;
  t79973 = -1.*t72083*t79806;
  t79977 = t79972 + t79973;
  t79890 = -1.*t73776*t79840;
  t79891 = -1.*t79816*t74173;
  t80008 = t33917*t79436;
  t80009 = t66959*t79862;
  t80013 = t80008 + t80009;
  t79913 = t79711*t74173;
  t79919 = t79840*t70633;
  t80019 = -1.*t79481*t66959;
  t80023 = t33917*t79851;
  t80027 = t80019 + t80023;
  t80029 = t33917*t79481;
  t80030 = t66959*t79851;
  t80031 = t80029 + t80030;
  t79842 = t73776*t79840;
  t79845 = t79816*t74173;
  t80033 = -1.*t79436*t66959;
  t80034 = t33917*t79862;
  t80035 = t80033 + t80034;
  t79881 = -1.*t74173*t79752;
  t79882 = -1.*t79840*t72948;
  t79753 = t72083*t79752;
  t79807 = t67700*t79806;
  t79809 = t79753 + t79807;
  t80032 = -1.*t74294*t80031;
  t80037 = -1.*t80013*t74308;
  t80106 = t72083*t79816;
  t80109 = t67700*t80035;
  t80110 = t80106 + t80109;
  t79713 = t72083*t79711;
  t79725 = t67700*t79724;
  t79726 = t79713 + t79725;
  t80049 = t79947*t74308;
  t80054 = t80031*t67624;
  t80116 = t72083*t79840;
  t80120 = t67700*t80027;
  t80125 = t80116 + t80120;
  t80132 = t67700*t79840;
  t80134 = -1.*t72083*t80027;
  t80135 = t80132 + t80134;
  t80069 = t74294*t80031;
  t80075 = t80013*t74308;
  t80138 = t67700*t79816;
  t80143 = -1.*t72083*t80035;
  t80149 = t80138 + t80143;
  t80085 = -1.*t74308*t79970;
  t80088 = -1.*t80031*t72856;
  t79135 = -1.*t43544*t74096;
  t79147 = t79135 + t77669;
  t80227 = -0.00308*t43295;
  t80229 = 0.00088*t66062;
  t80230 = t80227 + t80229;
  t78977 = t43544*t74096;
  t78979 = t78977 + t77846;
  t79258 = t44227*t43295*t74096;
  t80238 = -0.00088*t43295;
  t80239 = t80238 + t74085;
  t79263 = t74116*t66062;
  t80225 = Power(t44227,2);
  t80232 = Power(t43544,2);
  t80234 = t43295*t80232*t80230;
  t80237 = t43544*t74139*t66062;
  t80286 = t44220*t80239;
  t80289 = t44227*t65844*t80230;
  t80290 = t80286 + t80289;
  t80282 = -1.*t65844*t80239;
  t80283 = t44220*t44227*t80230;
  t80284 = t80282 + t80283;
  t80263 = t80232*t80230*t66062;
  t80370 = -1.*t44220*t44227*t43295;
  t80371 = t65844*t66062;
  t80372 = t80370 + t80371;
  t80291 = -1.*t65844*t43544*t80290;
  t80305 = t80290*t67461;
  t80308 = t74122*t72810;
  t80407 = t43822*t80284;
  t80416 = -1.*t43303*t43544*t80230;
  t80418 = t80407 + t80416;
  t80401 = -1.*t43303*t80284;
  t80403 = -1.*t43822*t43544*t80230;
  t80405 = t80401 + t80403;
  t80360 = t65844*t43544*t80290;
  t80397 = t43822*t80372;
  t80398 = t76482 + t80397;
  t80365 = -1.*t74122*t77727;
  t80389 = -1.*t80290*t72810;
  t80515 = t43822*t43295*t43544;
  t80518 = -1.*t43303*t80372;
  t80519 = t80515 + t80518;
  t80540 = t67089*t77727;
  t80543 = -1.*t80519*t67466;
  t80544 = t80540 + t80543;
  t80419 = -1.*t73866*t80418;
  t80426 = t74198*t72382;
  t80429 = t80418*t66811;
  t80582 = t67089*t80405;
  t80587 = t80290*t67466;
  t80588 = t80582 + t80587;
  t80591 = t67089*t80290;
  t80592 = -1.*t80405*t67466;
  t80597 = t80591 + t80592;
  t80489 = t73866*t80418;
  t80511 = -1.*t80418*t72382;
  t80514 = -1.*t74198*t80398;
  t80563 = t67089*t80519;
  t80564 = t77727*t67466;
  t80565 = t80563 + t80564;
  t80546 = -1.*t80398*t66959;
  t80567 = t33917*t80565;
  t80568 = t80546 + t80567;
  t80657 = t33917*t80398;
  t80658 = t66959*t80565;
  t80663 = t80657 + t80658;
  t80670 = t67700*t80544;
  t80671 = -1.*t72083*t80568;
  t80672 = t80670 + t80671;
  t73306 = t67689*t72856;
  t73313 = -1.*t28491*t73093;
  t73617 = t73306 + t73313;
  t80601 = -1.*t73776*t80597;
  t80608 = t74173*t72948;
  t80609 = t80597*t70633;
  t80697 = -1.*t80418*t66959;
  t80698 = t33917*t80588;
  t80699 = t80697 + t80698;
  t80704 = t33917*t80418;
  t80709 = t66959*t80588;
  t80710 = t80704 + t80709;
  t80618 = t73776*t80597;
  t80626 = -1.*t80597*t72948;
  t80627 = -1.*t74173*t80544;
  t80545 = t72083*t80544;
  t80569 = t67700*t80568;
  t80570 = t80545 + t80569;
  t80711 = -1.*t74294*t80710;
  t80717 = t80710*t67624;
  t80719 = t74308*t72856;
  t80754 = t72083*t80597;
  t80756 = t67700*t80699;
  t80758 = t80754 + t80756;
  t80760 = t67700*t80597;
  t80761 = -1.*t72083*t80699;
  t80763 = t80760 + t80761;
  t80729 = t74294*t80710;
  t80740 = -1.*t74308*t80663;
  t80743 = -1.*t80710*t72856;
  p_output1[0]=0;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=(-0.5*(0.0005708164*(-1.*t28491*t67624 - 1.*t67689*t72144) + 0.0001630904*(-1.*t28491*t72856 - 1.*t67689*t73093))*var2[1] - 0.5*(0.0005708164*(t67624*t67689 - 1.*t28491*t72144) + 0.0001630904*t73617)*var2[2])*var2[12];
  p_output1[4]=(-0.5*(0.0005708164*t72144 + 0.0001630904*t73093)*var2[0] - 0.5*(-0.0005708164*t28491*t73717 - 0.0001630904*t28491*t73729)*var2[1] - 0.5*(0.0005708164*t67689*t73717 + 0.0001630904*t67689*t73729)*var2[2] - 0.5*(3.e-6*t73093 - 0.000069*t73910 + 0.0001630904*((t72144*t74212 + t72144*t74217 + t73717*t74253 + t73966*t74253)*t74275 + t73966*(-1.*t73910*t74212 - 1.*t73910*t74217 - 1.*t74234*t74253 - 1.*t74253*t74275) + t72144*t74389 + t73910*t74526) + 0.0005708164*((t73910*t74212 + t73910*t74217 + t74234*t74253 + t74253*t74275)*t74566 + t74275*(-1.*t73093*t74212 - 1.*t73093*t74217 - 1.*t73729*t74253 - 1.*t74253*t74566) + t73093*t74729 + t73910*t74798))*var2[3])*var2[12];
  p_output1[5]=(-0.5*(0.0005708164*t67700*t74837 + 0.0001630904*t67700*t74854)*var2[0] - 0.5*(0.0005708164*(t67689*t72104 + t28491*t72083*t74837) + 0.0001630904*(t67689*t73024 + t28491*t72083*t74854))*var2[1] - 0.5*(0.0005708164*(t28491*t72104 - 1.*t67689*t72083*t74837) + 0.0001630904*(t28491*t73024 - 1.*t67689*t72083*t74854))*var2[2] - 0.5*(3.e-6*t67700*t74854 - 0.000069*t67700*t74944 + 0.0001630904*(t67700*t74389*t74837 + t67700*t74526*t74944 + t73966*(-1.*t67700*t74217*t74944 + t72083*t74253*t74944 + t74956 + t72083*t73910*t74970 - 1.*t67700*t74275*t74970 + t74980) + t74275*(t67700*t74217*t74837 - 1.*t72083*t74253*t74837 - 1.*t72083*t72144*t74970 + t67700*t73966*t74970 + t75010 + t75012)) + 0.0005708164*(t67700*t74729*t74854 + t67700*t74798*t74944 + t74566*(t67700*t74217*t74944 - 1.*t72083*t74253*t74944 - 1.*t72083*t73910*t74970 + t67700*t74275*t74970 + t75056 + t75068) + t74275*(-1.*t67700*t74217*t74854 + t72083*t74253*t74854 + t72083*t73093*t74970 - 1.*t67700*t74566*t74970 + t75109 + t75129)))*var2[3] - 0.5*(3.e-6*t73024 - 0.000069*t73908 + 0.0001630904*(t67624*(-1.*t74207*t74944 + t74956 - 1.*t73908*t74970 + t74980) + t72104*t74992 + t74294*(t74207*t74837 + t72104*t74970 + t75010 + t75012) + t73908*t75034) + 0.0005708164*(t72856*(t74207*t74944 + t73908*t74970 + t75056 + t75068) + t73024*t75095 + t74294*(-1.*t74207*t74854 - 1.*t73024*t74970 + t75109 + t75129) + t73908*t75160))*var2[4])*var2[12];
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=(-0.5*(0.0001630904*t75333 + 0.0005708164*t75350)*var2[0] - 0.5*(0.0001630904*(t66959*t67689*t72948 - 1.*t28491*t75368) + 0.0005708164*(t66959*t67689*t70633 - 1.*t28491*t75399))*var2[1] - 0.5*(0.0001630904*(t28491*t66959*t72948 + t67689*t75368) + 0.0005708164*(t28491*t66959*t70633 + t67689*t75399))*var2[2] - 0.5*(3.e-6*t75333 - 0.000069*t75850 + 0.0001630904*(t74389*t75350 + t74526*t75850 + t74275*(t74217*t75350 + t74253*t75399 + t75718 + t75734 + t73966*t75894 + t72144*t75928) + t73966*(t75693 + t75702 - 1.*t74217*t75850 - 1.*t74275*t75894 - 1.*t73910*t75928 - 1.*t74253*t75973)) + 0.0005708164*(t74729*t75333 + t74798*t75850 + t74275*(-1.*t74217*t75333 - 1.*t74253*t75368 + t75772 + t75787 - 1.*t74566*t75894 - 1.*t73093*t75928) + t74566*(t75747 + t75757 + t74217*t75850 + t74275*t75894 + t73910*t75928 + t74253*t75973)))*var2[3] - 0.5*(3.e-6*t66959*t72948 - 0.000069*t66959*t73776 + 0.0001630904*(t66959*t70633*t74992 + t66959*t73776*t75034 + t67624*(-1.*t33917*t73776*t74207 - 1.*t33917*t73908*t75524 + t75629 + t75638 + t75693 + t75702) + t74294*(t33917*t70633*t74207 + t33917*t72104*t75524 + t75661 + t75663 + t75718 + t75734)) + 0.0005708164*(t66959*t72948*t75095 + t66959*t73776*t75160 + t72856*(t33917*t73776*t74207 + t75513 + t33917*t73908*t75524 + t75551 + t75747 + t75757) + t74294*(-1.*t33917*t72948*t74207 - 1.*t33917*t73024*t75524 + t75585 + t75591 + t75772 + t75787)))*var2[4] - 0.5*(3.e-6*t75329 - 0.000069*t75482 + 0.0005708164*(t75329*t75505 + t72948*(t73776*t74204 + t75513 + t73882*t75524 + t75551) + t75482*t75565 + t73776*(-1.*t72948*t74204 - 1.*t72851*t75524 + t75585 + t75591)) + 0.0001630904*(t75340*t75619 + t70633*(-1.*t73776*t74204 - 1.*t73882*t75524 + t75629 + t75638) + t75482*t75657 + t73776*(t70633*t74204 + t67609*t75524 + t75661 + t75663)))*var2[5])*var2[12];
  p_output1[9]=(-0.5*(0.0001630904*t76537 + 0.0005708164*t76560)*var2[0] - 0.5*(0.0001630904*(t67689*t76586 - 1.*t28491*t76627) + 0.0005708164*(t67689*t76661 - 1.*t28491*t76669))*var2[1] - 0.5*(0.0001630904*(t28491*t76586 + t67689*t76627) + 0.0005708164*(t28491*t76661 + t67689*t76669))*var2[2] - 0.5*(3.e-6*t76537 - 0.000069*t77430 + 0.0001630904*(t74389*t76560 + t74526*t77430 + t74275*(t74217*t76560 + t74253*t76669 + t77321 + t77377 + t73966*t77438 + t72144*t77445) + t73966*(t77012 + t77055 - 1.*t74217*t77430 - 1.*t74275*t77438 - 1.*t73910*t77445 - 1.*t74253*t77494)) + 0.0005708164*(t74729*t76537 + t74798*t77430 + t74275*(-1.*t74217*t76537 - 1.*t74253*t76627 + t77416 + t77418 - 1.*t74566*t77438 - 1.*t73093*t77445) + t74566*(t77397 + t77411 + t74217*t77430 + t74275*t77438 + t73910*t77445 + t74253*t77494)))*var2[3] - 0.5*(3.e-6*t76586 - 0.000069*t76936 + 0.0001630904*(t74992*t76661 + t75034*t76936 + t67624*(t76862 + t76866 - 1.*t73908*t76979 + t77012 - 1.*t74207*t77021 + t77055) + t74294*(t74207*t76544 + t76887 + t76895 + t72104*t76979 + t77321 + t77377)) + 0.0005708164*(t75095*t76586 + t75160*t76936 + t72856*(t76775 + t76781 + t73908*t76979 + t74207*t77021 + t77397 + t77411) + t74294*(-1.*t74207*t76531 + t76812 + t76816 - 1.*t73024*t76979 + t77416 + t77418)))*var2[4] - 0.5*(0.000069*t67466*t76238 - 3.e-6*t67466*t76267 + 0.0005708164*(-1.*t67466*t75565*t76238 - 1.*t67466*t75505*t76267 + t72948*(t67089*t73882*t76229 + t76231 + t67089*t74204*t76238 + t76243 + t76775 + t76781) + t73776*(-1.*t67089*t72851*t76229 - 1.*t67089*t74204*t76267 + t76269 + t76312 + t76812 + t76816)) + 0.0001630904*(-1.*t67466*t75657*t76238 - 1.*t67466*t75619*t76494 + t70633*(-1.*t67089*t73882*t76229 - 1.*t67089*t74204*t76238 + t76441 + t76456 + t76862 + t76866) + t73776*(t67089*t67609*t76229 + t67089*t74204*t76494 + t76497 + t76499 + t76887 + t76895)))*var2[5] - 0.5*(3.e-6*t72466 - 0.000069*t73766 + 0.0005708164*(0.1*t66811 + t72382*(t73766*t76229 + t76231 + t74168*t76238 + t76243) + t72466*t76257 + t73866*(-1.*t72466*t76229 - 1.*t74168*t76267 + t76269 + t76312) + t73766*t76403) + 0.0001630904*(0.1*t72382 + t66811*(-1.*t73766*t76229 - 1.*t74168*t76238 + t76441 + t76456) + t67354*t76474 + t73866*(t67354*t76229 + t74168*t76494 + t76497 + t76499) + t73766*t76513))*var2[8])*var2[12];
  p_output1[10]=(-0.5*(0.0001630904*t78218 + 0.0005708164*t78252)*var2[0] - 0.5*(0.0001630904*(t67689*t78490 - 1.*t28491*t78517) + 0.0005708164*(t67689*t78528 - 1.*t28491*t78544))*var2[1] - 0.5*(0.0001630904*(t28491*t78490 + t67689*t78517) + 0.0005708164*(t28491*t78528 + t67689*t78544))*var2[2] - 0.5*(3.e-6*t78218 - 0.000069*t78880 + 0.0001630904*(t74389*t78252 + t74526*t78880 + t74275*(t74217*t78252 + t74253*t78544 + t78701 + t78710 + t73966*t78902 + t72144*t78909) + t73966*(t78645 + t78673 - 1.*t74217*t78880 - 1.*t74253*t78893 - 1.*t74275*t78902 - 1.*t73910*t78909)) + 0.0005708164*(t74729*t78218 + t74798*t78880 + t74275*(-1.*t74217*t78218 - 1.*t74253*t78517 + t78815 + t78818 - 1.*t74566*t78902 - 1.*t73093*t78909) + t74566*(t78750 + t78783 + t74217*t78880 + t74253*t78893 + t74275*t78902 + t73910*t78909)))*var2[3] - 0.5*(3.e-6*t78490 - 0.000069*t78608 + 0.0001630904*(t74992*t78528 + t75034*t78608 + t67624*(t78445 + t78446 - 1.*t74207*t78642 + t78645 - 1.*t73908*t78654 + t78673) + t74294*(t74207*t78246 + t78464 + t78467 + t72104*t78654 + t78701 + t78710)) + 0.0005708164*(t75095*t78490 + t75160*t78608 + t72856*(t78359 + t78372 + t74207*t78642 + t73908*t78654 + t78750 + t78783) + t74294*(-1.*t74207*t78197 + t78431 + t78433 - 1.*t73024*t78654 + t78815 + t78818)))*var2[4] - 0.5*(3.e-6*t78163 - 0.000069*t78354 + 0.0005708164*(t75505*t78163 + t75565*t78354 + t72948*(t78028 + t78032 + t78359 + t78372 + t74204*t78392 + t73882*t78399) + t73776*(t78058 + t78064 - 1.*t74204*t78188 - 1.*t72851*t78399 + t78431 + t78433)) + 0.0001630904*(t75619*t78225 + t75657*t78354 + t70633*(t78105 + t78110 - 1.*t74204*t78392 - 1.*t73882*t78399 + t78445 + t78446) + t73776*(t78120 + t78129 + t74204*t78235 + t67609*t78399 + t78464 + t78467)))*var2[5] - 0.5*(0.000069*t43544*t43822*t65844 + 3.e-6*t43822*t77932 + 0.0005708164*(-1.*t43544*t43822*t65844*t76403 + 0.1*t43303*t77727 + t43822*t76257*t77932 + t72382*(t43303*t43544*t65844*t74168 - 1.*t43303*t73766*t77610 + t77873 + t77877 + t78028 + t78032) + t73866*(t43303*t72466*t77610 + t77924 + t77926 + t43303*t74168*t77932 + t78058 + t78064)) + 0.0001630904*(-1.*t43544*t43822*t65844*t76513 + t43822*t76474*t77727 + 0.1*t43303*t77932 + t66811*(-1.*t43303*t43544*t65844*t74168 + t43303*t73766*t77610 + t77618 + t77661 + t78105 + t78110) + t73866*(-1.*t43303*t67354*t77610 - 1.*t43303*t74168*t77727 + t77736 + t77791 + t78120 + t78129)))*var2[8] - 0.5*(-0.000069*t43544*t44220 + 3.e-6*t72372 + 0.0001630904*(t67461*(t43544*t65844*t74160 - 1.*t43544*t44220*t77610 + t77618 + t77661) + t66505*t77683 + t43544*t65844*(t66505*t77610 + t74160*t77727 + t77736 + t77791) + t43544*t44220*t77831) + 0.0005708164*(t72372*t77849 + t72810*(-1.*t43544*t65844*t74160 + t43544*t44220*t77610 + t77873 + t77877) + t43544*t44220*t77906 + t43544*t65844*(-1.*t72372*t77610 + t77924 + t77926 - 1.*t74160*t77932)))*var2[9])*var2[12];
  p_output1[11]=(-0.5*(0.0005708164*t79726 + 0.0001630904*t79809)*var2[0] - 0.5*(0.0005708164*(t67689*t79947 - 1.*t28491*t79962) + 0.0001630904*(t67689*t79970 - 1.*t28491*t79977))*var2[1] - 0.5*(0.0005708164*(t28491*t79947 + t67689*t79962) + 0.0001630904*(t28491*t79970 + t67689*t79977))*var2[2] - 0.5*(3.e-6*t79809 - 0.000069*t80110 + 0.0001630904*(t74389*t79726 + t74526*t80110 + t74275*(t74217*t79726 + t74253*t79962 + t80049 + t80054 + t73966*t80125 + t72144*t80135) + t73966*(t80032 + t80037 - 1.*t74217*t80110 - 1.*t74275*t80125 - 1.*t73910*t80135 - 1.*t74253*t80149)) + 0.0005708164*(t74729*t79809 + t74798*t80110 + t74275*(-1.*t74217*t79809 - 1.*t74253*t79977 + t80085 + t80088 - 1.*t74566*t80125 - 1.*t73093*t80135) + t74566*(t80069 + t80075 + t74217*t80110 + t74275*t80125 + t73910*t80135 + t74253*t80149)))*var2[3] - 0.5*(3.e-6*t79970 - 0.000069*t80013 + 0.0001630904*(t74992*t79947 + t75034*t80013 + t67624*(t79890 + t79891 - 1.*t73908*t80027 + t80032 - 1.*t74207*t80035 + t80037) + t74294*(t74207*t79724 + t79913 + t79919 + t72104*t80027 + t80049 + t80054)) + 0.0005708164*(t75095*t79970 + t75160*t80013 + t72856*(t79842 + t79845 + t73908*t80027 + t74207*t80035 + t80069 + t80075) + t74294*(-1.*t74207*t79806 + t79881 + t79882 - 1.*t73024*t80027 + t80085 + t80088)))*var2[4] - 0.5*(3.e-6*t79752 - 0.000069*t79816 + 0.0005708164*(t75505*t79752 + t75565*t79816 + t72948*(t79482 + t79507 + t79842 + t79845 + t73882*t79851 + t74204*t79862) + t73776*(t79515 + t79527 - 1.*t74204*t79792 - 1.*t72851*t79851 + t79881 + t79882)) + 0.0001630904*(t75619*t79711 + t75657*t79816 + t70633*(t79573 + t79582 - 1.*t73882*t79851 - 1.*t74204*t79862 + t79890 + t79891) + t73776*(t79639 + t79656 + t74204*t79721 + t67609*t79851 + t79913 + t79919)))*var2[5] - 0.5*(-0.000069*t79436 + 3.e-6*t79458 + 0.0005708164*(0.1*(-1.*t43295*t43303*t43544*t44220 + t43295*t43822*t44227) + t76403*t79436 + t76257*t79458 + t72382*(t79366 + t79367 + t79482 + t73766*t79505 + t79507 + t74168*t79511) + t73866*(t79379 + t79385 - 1.*t72466*t79505 + t79515 - 1.*t74168*t79525 + t79527)) + 0.0001630904*(0.1*(t43303*t43544*t44220*t66062 - 1.*t43822*t44227*t66062) + t76513*t79436 + t76474*t79554 + t66811*(t79339 + t79340 - 1.*t73766*t79505 - 1.*t74168*t79511 + t79573 + t79582) + t73866*(t79344 + t79349 + t67354*t79505 + t79639 + t74168*t79654 + t79656)))*var2[8] - 0.5*(-0.000069*t44227*t65844 + 3.e-6*t43544*t65844*t66062 + 0.0001630904*(0.098*t44227*t66062 - 1.*t43295*t43544*t65844*t77683 + t44227*t65844*t77831 + t67461*(-1.*t44220*t44227*t74160 + t79209 + t79223 - 1.*t43544*t79020*t79331 + t79339 + t79340) + t43544*t65844*(-1.*t43295*t43544*t44220*t74160 + t44220*t66505*t79020 + t79189 + t79201 + t79344 + t79349)) + 0.0005708164*(-0.098*t43295*t44227 + t43544*t65844*t66062*t77849 + t44227*t65844*t77906 + t72810*(t44220*t44227*t74160 + t78987 + t79054 + t43544*t79020*t79331 + t79366 + t79367) + t43544*t65844*(-1.*t43544*t44220*t66062*t74160 - 1.*t44220*t72372*t79020 + t79076 + t79087 + t79379 + t79385)))*var2[9] - 0.5*(0.000069*t43544 + 3.e-6*t44227*t66062 + 0.0005708164*(-0.1*t43295*t43544 - 1.*t43544*(t44227*t66062*t74096 - 1.*t43295*t74116 + t77893) + t44227*t66062*t78979 + t43544*t66062*(t44227*t74096 + t78987 + t43544*t79020 + t79054) + t44227*(-1.*t43544*t66062*t74096 + t44227*t66062*t79020 + t79076 + t79087)) + 0.0001630904*(0.1*t43544*t66062 - 1.*t43295*t44227*t79147 + t44227*(-1.*t43295*t43544*t74096 + t43295*t44227*t79020 + t79189 + t79201) - 1.*t43295*t43544*(-1.*t44227*t74096 - 1.*t43544*t79020 + t79209 + t79223) - 1.*t43544*(t77795 + t79258 + t79263)))*var2[10])*var2[12];
  p_output1[12]=(-0.5*(0.0005708164*t74566 + 0.0001630904*t80570)*var2[0] - 0.5*(0.0005708164*t73617 + 0.0001630904*(t67689*t80663 - 1.*t28491*t80672))*var2[1] - 0.5*(0.0005708164*(t28491*t72856 + t67689*t73093) + 0.0001630904*(t28491*t80663 + t67689*t80672))*var2[2] - 0.5*(3.e-6*t80570 + 0.0001630904*(t74389*t74566 + t74275*(t73093*t74253 + t74217*t74566 + t80717 + t80719 + t73966*t80758 + t72144*t80763) + t73966*(t80711 - 1.*t74275*t80758 - 1.*t73910*t80763)) + 0.0005708164*(t74729*t80570 + t74275*(-1.*t74217*t80570 - 1.*t74253*t80672 + t80740 + t80743 - 1.*t74566*t80758 - 1.*t73093*t80763) + t74566*(t80729 + t74275*t80758 + t73910*t80763)))*var2[3] - 0.5*(3.e-6*t80663 + 0.0001630904*(t72856*t74992 + t67624*(t80601 - 1.*t73908*t80699 + t80711) + t74294*(t73024*t74207 + t80608 + t80609 + t72104*t80699 + t80717 + t80719)) + 0.0005708164*(t75095*t80663 + t72856*(t80618 + t73908*t80699 + t80729) + t74294*(-1.*t74207*t80568 + t80626 + t80627 - 1.*t73024*t80699 + t80740 + t80743)))*var2[4] - 0.5*(3.e-6*t80544 + 0.0001630904*(t72948*t75619 + t70633*(t80419 - 1.*t73882*t80588 + t80601) + t73776*(t72851*t74204 + t80426 + t80429 + t67609*t80588 + t80608 + t80609)) + 0.0005708164*(t75505*t80544 + t72948*(t80489 + t73882*t80588 + t80618) + t73776*(t80511 + t80514 - 1.*t74204*t80565 - 1.*t72851*t80588 + t80626 + t80627)))*var2[5] - 0.5*(3.e-6*t80398 + 0.0001630904*(t72382*t76474 + 0.1*(t67207 + t43303*t80372) + t66811*(t80291 - 1.*t73766*t80405 + t80419) + t73866*(t72466*t74168 + t80305 + t80308 + t67354*t80405 + t80426 + t80429)) + 0.0005708164*(0.1*(-1.*t43544*t43822*t66062 + t43303*t72372) + t76257*t80398 + t72382*(t80360 + t73766*t80405 + t80489) + t73866*(t80365 + t80389 - 1.*t72466*t80405 + t80511 + t80514 - 1.*t74168*t80519)))*var2[8] - 0.5*(3.e-6*t77727 + 0.0001630904*(0.098*t43295*t43544 + t72810*t77683 + t67461*(t43544*t44227*t80230 - 1.*t43544*t44220*t80284 + t80291) + t43544*t65844*(t72372*t74160 + t80234 + t80237 + t66505*t80284 + t80305 + t80308)) + 0.0005708164*(0.098*t43544*t66062 + t77727*t77849 + t72810*(-1.*t43544*t44227*t80230 + t43544*t44220*t80284 + t80360) + t43544*t65844*(t77795 + t80263 - 1.*t72372*t80284 + t80365 - 1.*t74160*t80372 + t80389)))*var2[9] - 0.5*(3.e-6*t43295*t43544 + 0.0001630904*(-0.1*t43295*t44227 + 0.113*t66062 + t43544*t66062*t79147 + t44227*(-1.*t44227*t66062*t74096 + t43295*t74116 + t43295*t80225*t80230 + t80234 + t80237 + t66062*t80239)) + 0.0005708164*(-0.113*t43295 - 0.1*t44227*t66062 + t43295*t43544*t78979 + t44227*(t77795 + t79258 + t79263 + t66062*t80225*t80230 - 1.*t43295*t80239 + t80263)))*var2[10] - 0.5*(-0.000014725432216*t43295 - 0.000054539012756*t66062)*var2[11])*var2[12];
  p_output1[13]=0;
  p_output1[14]=0;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
  p_output1[18]=0;
  p_output1[19]=0;
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=0;
  p_output1[24]=0;
  p_output1[25]=0;
  p_output1[26]=0;
  p_output1[27]=0;
  p_output1[28]=0;
  p_output1[29]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 30 && ncols == 1) && 
      !(mrows == 1 && ncols == 30))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 30 && ncols == 1) && 
      !(mrows == 1 && ncols == 30))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 30, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "Ce3_vec13_NaoH25V50.hh"

namespace SymFunction
{

void Ce3_vec13_NaoH25V50_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
