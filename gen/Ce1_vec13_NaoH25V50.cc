/*
 * Automatically Generated from Mathematica.
 * Tue 10 Jul 2018 11:12:31 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;


#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t374;
  double t583;
  double t269;
  double t37;
  double t625;
  double t970;
  double t1479;
  double t1641;
  double t1778;
  double t1786;
  double t1791;
  double t391;
  double t1860;
  double t1930;
  double t19;
  double t28;
  double t35;
  double t2913;
  double t2914;
  double t2967;
  double t2520;
  double t2896;
  double t3049;
  double t3218;
  double t2594;
  double t2601;
  double t3245;
  double t3263;
  double t3320;
  double t2356;
  double t2382;
  double t2519;
  double t5402;
  double t5403;
  double t5404;
  double t5097;
  double t5173;
  double t5270;
  double t5946;
  double t5949;
  double t5950;
  double t6104;
  double t6109;
  double t6122;
  double t6192;
  double t6194;
  double t6196;
  double t6258;
  double t6276;
  double t6277;
  double t6364;
  double t6365;
  double t6366;
  double t6363;
  double t6370;
  double t6378;
  double t5718;
  double t5748;
  double t5784;
  double t5374;
  double t5378;
  double t5379;
  double t5395;
  double t5405;
  double t5522;
  double t5886;
  double t5898;
  double t5899;
  double t4631;
  double t5048;
  double t5075;
  double t5092;
  double t5271;
  double t5337;
  double t6426;
  double t6429;
  double t6433;
  double t1936;
  double t2522;
  double t2525;
  double t6468;
  double t6491;
  double t3228;
  double t3335;
  double t3364;
  double t6444;
  double t6445;
  double t6446;
  double t5091;
  double t5363;
  double t5365;
  double t5384;
  double t5523;
  double t5547;
  double t5593;
  double t5670;
  double t5692;
  double t5812;
  double t5859;
  double t5869;
  double t5962;
  double t5995;
  double t5999;
  double t6019;
  double t6027;
  double t6053;
  double t5934;
  double t5951;
  double t5952;
  double t6012;
  double t6058;
  double t6060;
  double t6142;
  double t6146;
  double t6153;
  double t6158;
  double t6162;
  double t6163;
  double t6102;
  double t6136;
  double t6140;
  double t6154;
  double t6164;
  double t6169;
  double t6221;
  double t6223;
  double t6224;
  double t6191;
  double t6199;
  double t6204;
  double t6217;
  double t6237;
  double t6238;
  double t6297;
  double t6304;
  double t6336;
  double t6257;
  double t6282;
  double t6288;
  double t6295;
  double t6338;
  double t6339;
  double t6439;
  double t6447;
  double t6449;
  double t6453;
  double t6454;
  double t6455;
  double t6389;
  double t6390;
  double t6398;
  double t6401;
  double t6403;
  double t6353;
  double t6383;
  double t6384;
  double t6396;
  double t6405;
  double t6411;
  double t7479;
  double t7502;
  double t7526;
  double t6476;
  double t6485;
  double t6489;
  double t6495;
  double t6501;
  double t6502;
  double t6519;
  double t6520;
  double t6526;
  double t6530;
  double t6531;
  double t6535;
  double t6585;
  double t6587;
  double t6592;
  double t6604;
  double t6606;
  double t6621;
  double t6760;
  double t6761;
  double t6762;
  double t6781;
  double t6807;
  double t6822;
  double t6893;
  double t6898;
  double t6906;
  double t6914;
  double t6916;
  double t6920;
  double t6945;
  double t6957;
  double t6958;
  double t6962;
  double t6965;
  double t6966;
  double t6989;
  double t7005;
  double t7011;
  double t7024;
  double t7025;
  double t7028;
  double t7058;
  double t7059;
  double t7060;
  double t7072;
  double t7073;
  double t7082;
  double t7561;
  double t7564;
  double t7565;
  double t7592;
  double t7593;
  double t7594;
  double t7145;
  double t7153;
  double t7186;
  double t7602;
  double t7605;
  double t7606;
  double t8142;
  double t8143;
  double t8144;
  double t2546;
  double t2714;
  double t2723;
  double t8262;
  double t8264;
  double t8285;
  double t8289;
  double t8292;
  double t8301;
  double t8302;
  double t8303;
  double t8267;
  double t8268;
  double t8278;
  double t8304;
  double t8309;
  double t8326;
  double t8327;
  double t8329;
  double t8330;
  double t8338;
  double t8339;
  double t8341;
  double t8347;
  double t8348;
  double t8350;
  double t8351;
  double t8354;
  double t8355;
  double t8376;
  double t8379;
  double t8151;
  double t8204;
  double t8205;
  double t8261;
  double t8311;
  double t8380;
  double t8409;
  double t8417;
  double t8418;
  double t8419;
  double t8420;
  double t8430;
  double t8431;
  double t8432;
  double t8493;
  double t8494;
  double t8497;
  double t8745;
  double t8748;
  double t8749;
  double t8778;
  double t8801;
  double t8821;
  double t8853;
  double t8857;
  double t8864;
  double t8145;
  double t8206;
  double t8207;
  double t8209;
  double t8211;
  double t8212;
  double t8611;
  double t8636;
  double t8642;
  double t8681;
  double t8686;
  double t8520;
  double t8522;
  double t8545;
  double t8546;
  double t8550;
  double t8566;
  double t8571;
  double t8606;
  double t8713;
  double t8725;
  double t8956;
  double t8958;
  double t8966;
  double t8989;
  double t8998;
  double t8999;
  double t9014;
  double t9015;
  double t9023;
  double t3372;
  double t3514;
  double t3945;
  double t8436;
  double t8499;
  double t8503;
  double t8570;
  double t8726;
  double t8735;
  double t8824;
  double t8933;
  double t8935;
  double t9002;
  double t9025;
  double t9026;
  double t8943;
  double t8944;
  double t8946;
  double t9139;
  double t9155;
  double t9157;
  double t8413;
  double t8421;
  double t8425;
  double t8753;
  double t8754;
  double t8755;
  double t8251;
  double t8252;
  double t8260;
  double t8938;
  double t8939;
  double t8940;
  double t6425;
  double t6434;
  double t6435;
  double t8514;
  double t8515;
  double t8519;
  double t9052;
  double t9076;
  double t9085;
  double t9461;
  double t9462;
  double t9468;
  double t9399;
  double t9400;
  double t9401;
  double t9168;
  double t9179;
  double t9183;
  double t9184;
  double t9231;
  double t9239;
  double t9240;
  double t9242;
  double t9337;
  double t9341;
  double t9344;
  double t9345;
  double t9377;
  double t9378;
  double t9379;
  double t9384;
  double t5706;
  double t5785;
  double t5786;
  double t9656;
  double t9657;
  double t9726;
  double t9727;
  double t9728;
  double t9744;
  double t9602;
  double t9603;
  double t9605;
  double t9607;
  double t9611;
  double t9618;
  double t5870;
  double t5907;
  double t5909;
  double t9723;
  double t9749;
  double t9751;
  double t9762;
  double t9777;
  double t9779;
  double t9785;
  double t9797;
  double t9799;
  double t9994;
  double t9995;
  double t9996;
  double t6141;
  double t6172;
  double t6176;
  double t10040;
  double t10055;
  double t10069;
  double t10078;
  double t10086;
  double t10087;
  double t10002;
  double t10003;
  double t10007;
  double t10029;
  double t10030;
  double t10031;
  double t10092;
  double t10093;
  double t10094;
  double t10085;
  double t10089;
  double t10090;
  double t10095;
  double t10096;
  double t10097;
  double t10138;
  double t10139;
  double t10141;
  double t10143;
  double t10144;
  double t10145;
  double t9992;
  double t9999;
  double t10000;
  double t10001;
  double t10010;
  double t10032;
  double t10033;
  double t10034;
  double t10037;
  double t5955;
  double t6086;
  double t6094;
  double t10091;
  double t10098;
  double t10099;
  double t10142;
  double t10146;
  double t10147;
  double t10150;
  double t10151;
  double t10152;
  double t10101;
  double t10102;
  double t10131;
  double t10158;
  double t10180;
  double t10181;
  double t10371;
  double t10372;
  double t10373;
  double t10463;
  double t10474;
  double t10492;
  double t6211;
  double t6239;
  double t6247;
  double t6294;
  double t6340;
  double t6341;
  double t10731;
  double t10748;
  double t10749;
  double t10788;
  double t10799;
  double t10803;
  double t10804;
  double t10805;
  double t10675;
  double t10685;
  double t10687;
  double t10711;
  double t10717;
  double t10762;
  double t10764;
  double t10768;
  double t10771;
  double t10810;
  double t10811;
  double t10809;
  double t10812;
  double t10813;
  double t10862;
  double t10867;
  double t10868;
  double t10957;
  double t10966;
  double t10967;
  double t10806;
  double t10814;
  double t10815;
  double t10870;
  double t10968;
  double t10974;
  double t10978;
  double t10979;
  double t10980;
  double t10783;
  double t10785;
  double t10786;
  double t10826;
  double t10833;
  double t10839;
  double t6388;
  double t6414;
  double t6421;
  double t11064;
  double t11065;
  double t11067;
  double t11057;
  double t11061;
  double t11063;
  double t11071;
  double t11073;
  double t11107;
  double t11108;
  double t11122;
  double t11083;
  double t11085;
  double t11089;
  double t11074;
  double t11075;
  double t11081;
  double t11103;
  double t11123;
  double t11124;
  double t11148;
  double t11149;
  double t11153;
  double t11160;
  double t11161;
  double t11167;
  double t11082;
  double t11131;
  double t11138;
  double t11159;
  double t11170;
  double t11171;
  double t11179;
  double t11183;
  double t11184;
  double t8506;
  double t8739;
  double t9190;
  double t9192;
  double t9284;
  double t9313;
  double t9350;
  double t9353;
  double t9658;
  double t9715;
  double t11353;
  double t11354;
  double t11355;
  double t9804;
  double t9812;
  double t11369;
  double t11375;
  double t11383;
  double t9854;
  double t9858;
  double t11466;
  double t11473;
  double t11477;
  double t9934;
  double t9937;
  double t11503;
  double t11508;
  double t11509;
  double t10100;
  double t10137;
  double t10201;
  double t10202;
  double t10265;
  double t10283;
  double t10323;
  double t10324;
  double t9456;
  double t9460;
  double t9476;
  double t9477;
  double t9495;
  double t9496;
  double t9553;
  double t9556;
  double t10787;
  double t10818;
  double t11002;
  double t11003;
  double t11023;
  double t11024;
  double t11038;
  double t11040;
  double t11147;
  double t11200;
  double t11201;
  double t11245;
  double t11260;
  double t11263;
  double t11424;
  double t11425;
  double t11480;
  double t11484;
  double t11335;
  double t11336;
  double t11359;
  double t11360;
  double t11691;
  double t11692;
  double t11980;
  double t11981;
  double t11982;
  double t11706;
  double t11707;
  double t11997;
  double t11999;
  double t12000;
  double t11663;
  double t11664;
  double t12021;
  double t12022;
  double t12023;
  double t11675;
  double t11676;
  double t12043;
  double t12049;
  double t12052;
  double t11844;
  double t11845;
  double t11853;
  double t11854;
  double t11820;
  double t11823;
  double t11831;
  double t11832;
  double t11623;
  double t11624;
  double t11630;
  double t11632;
  double t11531;
  double t11532;
  double t11590;
  double t11591;
  double t11870;
  double t11878;
  double t11879;
  double t11915;
  double t11937;
  double t11938;
  double t12066;
  double t12067;
  double t12081;
  double t12083;
  double t12100;
  double t12102;
  double t12373;
  double t12117;
  double t12118;
  double t11972;
  double t11973;
  double t12356;
  double t12360;
  double t12366;
  double t11984;
  double t11985;
  double t12394;
  double t12404;
  double t12406;
  double t12009;
  double t12010;
  double t12425;
  double t12426;
  double t12432;
  double t12032;
  double t12033;
  double t12479;
  double t12482;
  double t12483;
  double t12145;
  double t12148;
  double t12158;
  double t12159;
  double t12169;
  double t12170;
  double t12177;
  double t12178;
  double t12236;
  double t12243;
  double t12246;
  double t12266;
  double t12280;
  double t12281;
  double t12451;
  double t12452;
  double t12460;
  double t12464;
  double t12667;
  double t12374;
  double t12375;
  double t12380;
  double t12381;
  double t12609;
  double t12661;
  double t12662;
  double t12663;
  double t12618;
  double t12621;
  double t12690;
  double t12693;
  double t12694;
  double t12630;
  double t12683;
  double t12732;
  double t12641;
  double t12644;
  double t12589;
  double t12590;
  double t12595;
  double t12596;
  double t12684;
  double t12685;
  double t12567;
  double t12568;
  double t12712;
  double t12713;
  double t12714;
  double t12574;
  double t12575;
  double t12697;
  double t12699;
  double t12704;
  double t12705;
  double t12676;
  double t12678;
  double t12666;
  double t12671;
  double t12841;
  double t12842;
  double t12733;
  double t12734;
  double t12820;
  double t12822;
  double t12875;
  double t12876;
  double t12897;
  double t12748;
  t374 = Sin(var1[12]);
  t583 = Cos(var1[9]);
  t269 = Sin(var1[11]);
  t37 = Sin(var1[9]);
  t625 = Cos(var1[12]);
  t970 = Sin(var1[10]);
  t1479 = -1.*t625*t970;
  t1641 = Cos(var1[10]);
  t1778 = Cos(var1[11]);
  t1786 = -1.*t1641*t1778*t374;
  t1791 = t1479 + t1786;
  t391 = -1.*t37*t269*t374;
  t1860 = -1.*t583*t1791;
  t1930 = t391 + t1860;
  t19 = Cos(var1[4]);
  t28 = Cos(var1[5]);
  t35 = Cos(var1[8]);
  t2913 = t1641*t1778*t625;
  t2914 = -1.*t970*t374;
  t2967 = t2913 + t2914;
  t2520 = Sin(var1[5]);
  t2896 = t625*t37*t269;
  t3049 = -1.*t583*t2967;
  t3218 = t2896 + t3049;
  t2594 = Sin(var1[4]);
  t2601 = Sin(var1[8]);
  t3245 = -1.*t583*t625*t269;
  t3263 = -1.*t37*t2967;
  t3320 = t3245 + t3263;
  t2356 = t583*t269*t374;
  t2382 = -1.*t37*t1791;
  t2519 = t2356 + t2382;
  t5402 = t1641*t625;
  t5403 = -1.*t1778*t970*t374;
  t5404 = t5402 + t5403;
  t5097 = t1778*t625*t970;
  t5173 = t1641*t374;
  t5270 = t5097 + t5173;
  t5946 = -1.*t583*t1778*t625;
  t5949 = t1641*t625*t37*t269;
  t5950 = t5946 + t5949;
  t6104 = t583*t1778*t374;
  t6109 = -1.*t1641*t37*t269*t374;
  t6122 = t6104 + t6109;
  t6192 = -1.*t1641*t625;
  t6194 = t1778*t970*t374;
  t6196 = t6192 + t6194;
  t6258 = -1.*t1778*t625*t970;
  t6276 = -1.*t1641*t374;
  t6277 = t6258 + t6276;
  t6364 = -1.*t1641*t1778*t625;
  t6365 = t970*t374;
  t6366 = t6364 + t6365;
  t6363 = t583*t625*t269;
  t6370 = -1.*t37*t6366;
  t6378 = t6363 + t6370;
  t5718 = t35*t5404;
  t5748 = -1.*t2519*t2601;
  t5784 = t5718 + t5748;
  t5374 = t37*t269*t374;
  t5378 = t583*t1791;
  t5379 = t5374 + t5378;
  t5395 = t35*t2519;
  t5405 = t5404*t2601;
  t5522 = t5395 + t5405;
  t5886 = t35*t5270;
  t5898 = -1.*t3320*t2601;
  t5899 = t5886 + t5898;
  t4631 = -1.*t625*t37*t269;
  t5048 = t583*t2967;
  t5075 = t4631 + t5048;
  t5092 = t35*t3320;
  t5271 = t5270*t2601;
  t5337 = t5092 + t5271;
  t6426 = -1.*t5379*t2520;
  t6429 = t28*t5522;
  t6433 = t6426 + t6429;
  t1936 = t28*t35*t1930;
  t2522 = -1.*t2519*t2520;
  t2525 = t1936 + t2522;
  t6468 = Cos(var1[3]);
  t6491 = Sin(var1[3]);
  t3228 = t28*t35*t3218;
  t3335 = -1.*t3320*t2520;
  t3364 = t3228 + t3335;
  t6444 = -1.*t5075*t2520;
  t6445 = t28*t5337;
  t6446 = t6444 + t6445;
  t5091 = -1.*t28*t5075;
  t5363 = -1.*t2520*t5337;
  t5365 = t5091 + t5363;
  t5384 = -1.*t28*t5379;
  t5523 = -1.*t2520*t5522;
  t5547 = t5384 + t5523;
  t5593 = -1.*t35*t2519;
  t5670 = -1.*t5404*t2601;
  t5692 = t5593 + t5670;
  t5812 = -1.*t35*t3320;
  t5859 = -1.*t5270*t2601;
  t5869 = t5812 + t5859;
  t5962 = -1.*t1778*t625*t37;
  t5995 = -1.*t583*t1641*t625*t269;
  t5999 = t5962 + t5995;
  t6019 = t35*t5950;
  t6027 = -1.*t625*t970*t269*t2601;
  t6053 = t6019 + t6027;
  t5934 = -1.*t625*t35*t970*t269;
  t5951 = -1.*t5950*t2601;
  t5952 = t5934 + t5951;
  t6012 = -1.*t5999*t2520;
  t6058 = t28*t6053;
  t6060 = t6012 + t6058;
  t6142 = t1778*t37*t374;
  t6146 = t583*t1641*t269*t374;
  t6153 = t6142 + t6146;
  t6158 = t35*t6122;
  t6162 = t970*t269*t374*t2601;
  t6163 = t6158 + t6162;
  t6102 = t35*t970*t269*t374;
  t6136 = -1.*t6122*t2601;
  t6140 = t6102 + t6136;
  t6154 = -1.*t6153*t2520;
  t6164 = t28*t6163;
  t6169 = t6154 + t6164;
  t6221 = -1.*t35*t37*t6196;
  t6223 = t1791*t2601;
  t6224 = t6221 + t6223;
  t6191 = t35*t1791;
  t6199 = t37*t6196*t2601;
  t6204 = t6191 + t6199;
  t6217 = -1.*t583*t6196*t2520;
  t6237 = t28*t6224;
  t6238 = t6217 + t6237;
  t6297 = -1.*t35*t37*t6277;
  t6304 = t2967*t2601;
  t6336 = t6297 + t6304;
  t6257 = t35*t2967;
  t6282 = t37*t6277*t2601;
  t6288 = t6257 + t6282;
  t6295 = -1.*t583*t6277*t2520;
  t6338 = t28*t6336;
  t6339 = t6295 + t6338;
  t6439 = t19*t5899;
  t6447 = -1.*t2594*t6446;
  t6449 = t6439 + t6447;
  t6453 = t19*t5784;
  t6454 = -1.*t2594*t6433;
  t6455 = t6453 + t6454;
  t6389 = t583*t6366;
  t6390 = t2896 + t6389;
  t6398 = t35*t6378;
  t6401 = t6277*t2601;
  t6403 = t6398 + t6401;
  t6353 = t35*t6277;
  t6383 = -1.*t6378*t2601;
  t6384 = t6353 + t6383;
  t6396 = -1.*t6390*t2520;
  t6405 = t28*t6403;
  t6411 = t6396 + t6405;
  t7479 = t28*t5379;
  t7502 = t2520*t5522;
  t7526 = t7479 + t7502;
  t6476 = t28*t2519;
  t6485 = t35*t1930*t2520;
  t6489 = t6476 + t6485;
  t6495 = -1.*t2594*t2525;
  t6501 = -1.*t19*t1930*t2601;
  t6502 = t6495 + t6501;
  t6519 = t28*t3320;
  t6520 = t35*t3218*t2520;
  t6526 = t6519 + t6520;
  t6530 = -1.*t2594*t3364;
  t6531 = -1.*t19*t3218*t2601;
  t6535 = t6530 + t6531;
  t6585 = -1.*t2594*t5899;
  t6587 = -1.*t19*t6446;
  t6592 = t6585 + t6587;
  t6604 = -1.*t2594*t5784;
  t6606 = -1.*t19*t6433;
  t6621 = t6604 + t6606;
  t6760 = t19*t5692;
  t6761 = -1.*t28*t2594*t5784;
  t6762 = t6760 + t6761;
  t6781 = t19*t5869;
  t6807 = -1.*t28*t2594*t5899;
  t6822 = t6781 + t6807;
  t6893 = t28*t5999;
  t6898 = t2520*t6053;
  t6906 = t6893 + t6898;
  t6914 = t19*t5952;
  t6916 = -1.*t2594*t6060;
  t6920 = t6914 + t6916;
  t6945 = t28*t6153;
  t6957 = t2520*t6163;
  t6958 = t6945 + t6957;
  t6962 = t19*t6140;
  t6965 = -1.*t2594*t6169;
  t6966 = t6962 + t6965;
  t6989 = t583*t28*t6196;
  t7005 = t2520*t6224;
  t7011 = t6989 + t7005;
  t7024 = t19*t6204;
  t7025 = -1.*t2594*t6238;
  t7028 = t7024 + t7025;
  t7058 = t583*t28*t6277;
  t7059 = t2520*t6336;
  t7060 = t7058 + t7059;
  t7072 = t19*t6288;
  t7073 = -1.*t2594*t6339;
  t7082 = t7072 + t7073;
  t7561 = t28*t6390;
  t7564 = t2520*t6403;
  t7565 = t7561 + t7564;
  t7592 = t19*t6384;
  t7593 = -1.*t2594*t6411;
  t7594 = t7592 + t7593;
  t7145 = t28*t5075;
  t7153 = t2520*t5337;
  t7186 = t7145 + t7153;
  t7602 = t6468*t7526;
  t7605 = -1.*t6491*t6455;
  t7606 = t7602 + t7605;
  t8142 = -1.*t1778*t37;
  t8143 = -1.*t583*t1641*t269;
  t8144 = t8142 + t8143;
  t2546 = t19*t2525;
  t2714 = -1.*t1930*t2594*t2601;
  t2723 = t2546 + t2714;
  t8262 = -1.*t1778;
  t8264 = 1. + t8262;
  t8285 = -1.*t625;
  t8289 = 1. + t8285;
  t8292 = 0.113*t8289;
  t8301 = 0.11212*t625;
  t8302 = -0.00308*t374;
  t8303 = t8292 + t8301 + t8302;
  t8267 = 0.105*t8264;
  t8268 = 0.19529*t1778;
  t8278 = 0.113*t269;
  t8304 = -1.*t269*t8303;
  t8309 = t8267 + t8268 + t8278 + t8304;
  t8326 = -1.*t1641;
  t8327 = 1. + t8326;
  t8329 = 0.113*t8327;
  t8330 = 0.1*t970;
  t8338 = 0.113*t8264;
  t8339 = 0.09029*t269;
  t8341 = t1778*t8303;
  t8347 = t8338 + t8339 + t8341;
  t8348 = t1641*t8347;
  t8350 = 0.1*t8289;
  t8351 = 0.10308*t625;
  t8354 = -0.00088*t374;
  t8355 = t8350 + t8351 + t8354;
  t8376 = -1.*t970*t8355;
  t8379 = t8329 + t8330 + t8348 + t8376;
  t8151 = t583*t1778;
  t8204 = -1.*t1641*t37*t269;
  t8205 = t8151 + t8204;
  t8261 = 0.098*t37;
  t8311 = t583*t8309;
  t8380 = -1.*t37*t8379;
  t8409 = t8261 + t8311 + t8380;
  t8417 = 0.098*t583;
  t8418 = -1.*t37*t8309;
  t8419 = -1.*t583*t8379;
  t8420 = t8417 + t8418 + t8419;
  t8430 = t1778*t37;
  t8431 = t583*t1641*t269;
  t8432 = t8430 + t8431;
  t8493 = t35*t8205;
  t8494 = t970*t269*t2601;
  t8497 = t8493 + t8494;
  t8745 = t28*t35*t8420;
  t8748 = -1.*t8409*t2520;
  t8749 = t8745 + t8748;
  t8778 = t35*t970*t269;
  t8801 = -1.*t8205*t2601;
  t8821 = t8778 + t8801;
  t8853 = -1.*t8432*t2520;
  t8857 = t28*t8497;
  t8864 = t8853 + t8857;
  t8145 = t28*t35*t8144;
  t8206 = -1.*t8205*t2520;
  t8207 = t8145 + t8206;
  t8209 = t19*t8207;
  t8211 = -1.*t8144*t2594*t2601;
  t8212 = t8209 + t8211;
  t8611 = 0.1*t8327;
  t8636 = -0.113*t970;
  t8642 = t970*t8347;
  t8681 = t1641*t8355;
  t8686 = t8611 + t8636 + t8642 + t8681;
  t8520 = -1.*t583;
  t8522 = 1. + t8520;
  t8545 = 0.098*t8522;
  t8546 = t37*t8309;
  t8550 = t583*t8379;
  t8566 = t8545 + t8546 + t8550;
  t8571 = t35*t8409;
  t8606 = -0.1*t2601;
  t8713 = t8686*t2601;
  t8725 = t8571 + t8606 + t8713;
  t8956 = -1.*t35;
  t8958 = 1. + t8956;
  t8966 = 0.1*t8958;
  t8989 = t35*t8686;
  t8998 = -1.*t8409*t2601;
  t8999 = t8966 + t8989 + t8998;
  t9014 = -1.*t8566*t2520;
  t9015 = t28*t8725;
  t9023 = t9014 + t9015;
  t3372 = t19*t3364;
  t3514 = -1.*t3218*t2594*t2601;
  t3945 = t3372 + t3514;
  t8436 = t28*t8432;
  t8499 = t2520*t8497;
  t8503 = t8436 + t8499;
  t8570 = t28*t8566;
  t8726 = t2520*t8725;
  t8735 = t8570 + t8726;
  t8824 = t2594*t8821;
  t8933 = t19*t8864;
  t8935 = t8824 + t8933;
  t9002 = t2594*t8999;
  t9025 = t19*t9023;
  t9026 = t9002 + t9025;
  t8943 = t19*t8821;
  t8944 = -1.*t2594*t8864;
  t8946 = t8943 + t8944;
  t9139 = t19*t8999;
  t9155 = -1.*t2594*t9023;
  t9157 = t9139 + t9155;
  t8413 = t28*t8409;
  t8421 = t35*t8420*t2520;
  t8425 = t8413 + t8421;
  t8753 = t19*t8749;
  t8754 = -1.*t8420*t2594*t2601;
  t8755 = t8753 + t8754;
  t8251 = t2594*t5899;
  t8252 = t19*t6446;
  t8260 = t8251 + t8252;
  t8938 = -1.*t2594*t8749;
  t8939 = -1.*t19*t8420*t2601;
  t8940 = t8938 + t8939;
  t6425 = t2594*t5784;
  t6434 = t19*t6433;
  t6435 = t6425 + t6434;
  t8514 = t28*t8205;
  t8515 = t35*t8144*t2520;
  t8519 = t8514 + t8515;
  t9052 = -1.*t2594*t8207;
  t9076 = -1.*t19*t8144*t2601;
  t9085 = t9052 + t9076;
  t9461 = -1.*t28*t8566;
  t9462 = -1.*t2520*t8725;
  t9468 = t9461 + t9462;
  t9399 = -1.*t28*t8432;
  t9400 = -1.*t2520*t8497;
  t9401 = t9399 + t9400;
  t9168 = -1.*t8503*t8735;
  t9179 = -1.*t8935*t9026;
  t9183 = -1.*t8946*t9157;
  t9184 = t9168 + t9179 + t9183;
  t9231 = t8735*t7186;
  t9239 = t9026*t8260;
  t9240 = t9157*t6449;
  t9242 = t9231 + t9239 + t9240;
  t9337 = t8503*t8735;
  t9341 = t8935*t9026;
  t9344 = t8946*t9157;
  t9345 = t9337 + t9341 + t9344;
  t9377 = -1.*t8735*t7526;
  t9378 = -1.*t9026*t6435;
  t9379 = -1.*t9157*t6455;
  t9384 = t9377 + t9378 + t9379;
  t5706 = t2594*t5692;
  t5785 = t19*t28*t5784;
  t5786 = t5706 + t5785;
  t9656 = -0.1*t35;
  t9657 = t9656 + t8989 + t8998;
  t9726 = -1.*t35*t8409;
  t9727 = 0.1*t2601;
  t9728 = -1.*t8686*t2601;
  t9744 = t9726 + t9727 + t9728;
  t9602 = -1.*t35*t8205;
  t9603 = -1.*t970*t269*t2601;
  t9605 = t9602 + t9603;
  t9607 = t2594*t9605;
  t9611 = t19*t28*t8821;
  t9618 = t9607 + t9611;
  t5870 = t2594*t5869;
  t5907 = t19*t28*t5899;
  t5909 = t5870 + t5907;
  t9723 = t19*t28*t9657;
  t9749 = t2594*t9744;
  t9751 = t9723 + t9749;
  t9762 = -1.*t28*t2594*t9657;
  t9777 = t19*t9744;
  t9779 = t9762 + t9777;
  t9785 = t19*t9605;
  t9797 = -1.*t28*t2594*t8821;
  t9799 = t9785 + t9797;
  t9994 = -1.*t1641*t1778*t37;
  t9995 = -1.*t583*t269;
  t9996 = t9994 + t9995;
  t6141 = t2594*t6140;
  t6172 = t19*t6169;
  t6176 = t6141 + t6172;
  t10040 = 0.113*t1778;
  t10055 = -0.09029*t269;
  t10069 = -1.*t1778*t8303;
  t10078 = t10040 + t10055 + t10069;
  t10086 = 0.09029*t1778;
  t10087 = t10086 + t8278 + t8304;
  t10002 = t583*t1641*t1778;
  t10003 = -1.*t37*t269;
  t10007 = t10002 + t10003;
  t10029 = t35*t9996;
  t10030 = t1778*t970*t2601;
  t10031 = t10029 + t10030;
  t10092 = t583*t10078;
  t10093 = -1.*t1641*t37*t10087;
  t10094 = t10092 + t10093;
  t10085 = t37*t10078;
  t10089 = t583*t1641*t10087;
  t10090 = t10085 + t10089;
  t10095 = t35*t10094;
  t10096 = t970*t10087*t2601;
  t10097 = t10095 + t10096;
  t10138 = t35*t970*t10087;
  t10139 = -1.*t10094*t2601;
  t10141 = t10138 + t10139;
  t10143 = -1.*t10090*t2520;
  t10144 = t28*t10097;
  t10145 = t10143 + t10144;
  t9992 = t1778*t35*t970;
  t9999 = -1.*t9996*t2601;
  t10000 = t9992 + t9999;
  t10001 = t2594*t10000;
  t10010 = -1.*t10007*t2520;
  t10032 = t28*t10031;
  t10033 = t10010 + t10032;
  t10034 = t19*t10033;
  t10037 = t10001 + t10034;
  t5955 = t2594*t5952;
  t6086 = t19*t6060;
  t6094 = t5955 + t6086;
  t10091 = t28*t10090;
  t10098 = t2520*t10097;
  t10099 = t10091 + t10098;
  t10142 = t2594*t10141;
  t10146 = t19*t10145;
  t10147 = t10142 + t10146;
  t10150 = t19*t10141;
  t10151 = -1.*t2594*t10145;
  t10152 = t10150 + t10151;
  t10101 = t28*t10007;
  t10102 = t2520*t10031;
  t10131 = t10101 + t10102;
  t10158 = t19*t10000;
  t10180 = -1.*t2594*t10033;
  t10181 = t10158 + t10180;
  t10371 = -1.*t2594*t8999;
  t10372 = -1.*t19*t9023;
  t10373 = t10371 + t10372;
  t10463 = -1.*t2594*t8821;
  t10474 = -1.*t19*t8864;
  t10492 = t10463 + t10474;
  t6211 = t2594*t6204;
  t6239 = t19*t6238;
  t6247 = t6211 + t6239;
  t6294 = t2594*t6288;
  t6340 = t19*t6339;
  t6341 = t6294 + t6340;
  t10731 = t35*t37*t970*t269;
  t10748 = t1641*t269*t2601;
  t10749 = t10731 + t10748;
  t10788 = 0.1*t1641;
  t10799 = 0.113*t970;
  t10803 = -1.*t970*t8347;
  t10804 = -1.*t1641*t8355;
  t10805 = t10788 + t10799 + t10803 + t10804;
  t10675 = t1641*t35*t269;
  t10685 = -1.*t37*t970*t269*t2601;
  t10687 = t10675 + t10685;
  t10711 = t2594*t10687;
  t10717 = t583*t970*t269*t2520;
  t10762 = t28*t10749;
  t10764 = t10717 + t10762;
  t10768 = t19*t10764;
  t10771 = t10711 + t10768;
  t10810 = -0.113*t1641;
  t10811 = t10810 + t8330 + t8348 + t8376;
  t10809 = -1.*t35*t37*t10805;
  t10812 = t10811*t2601;
  t10813 = t10809 + t10812;
  t10862 = t35*t10811;
  t10867 = t37*t10805*t2601;
  t10868 = t10862 + t10867;
  t10957 = -1.*t583*t10805*t2520;
  t10966 = t28*t10813;
  t10967 = t10957 + t10966;
  t10806 = t583*t28*t10805;
  t10814 = t2520*t10813;
  t10815 = t10806 + t10814;
  t10870 = t2594*t10868;
  t10968 = t19*t10967;
  t10974 = t10870 + t10968;
  t10978 = t19*t10868;
  t10979 = -1.*t2594*t10967;
  t10980 = t10978 + t10979;
  t10783 = -1.*t583*t28*t970*t269;
  t10785 = t2520*t10749;
  t10786 = t10783 + t10785;
  t10826 = t19*t10687;
  t10833 = -1.*t2594*t10764;
  t10839 = t10826 + t10833;
  t6388 = t2594*t6384;
  t6414 = t19*t6411;
  t6421 = t6388 + t6414;
  t11064 = -0.00308*t625;
  t11065 = 0.00088*t374;
  t11067 = t11064 + t11065;
  t11057 = -0.00088*t625;
  t11061 = t11057 + t8302;
  t11063 = -1.*t970*t11061;
  t11071 = t1641*t1778*t11067;
  t11073 = t11063 + t11071;
  t11107 = t1641*t11061;
  t11108 = t1778*t970*t11067;
  t11122 = t11107 + t11108;
  t11083 = -1.*t37*t11073;
  t11085 = -1.*t583*t269*t11067;
  t11089 = t11083 + t11085;
  t11074 = t583*t11073;
  t11075 = -1.*t37*t269*t11067;
  t11081 = t11074 + t11075;
  t11103 = t35*t11089;
  t11123 = t11122*t2601;
  t11124 = t11103 + t11123;
  t11148 = t35*t11122;
  t11149 = -1.*t11089*t2601;
  t11153 = t11148 + t11149;
  t11160 = -1.*t11081*t2520;
  t11161 = t28*t11124;
  t11167 = t11160 + t11161;
  t11082 = t28*t11081;
  t11131 = t2520*t11124;
  t11138 = t11082 + t11131;
  t11159 = t2594*t11153;
  t11170 = t19*t11167;
  t11171 = t11159 + t11170;
  t11179 = t19*t11153;
  t11183 = -1.*t2594*t11167;
  t11184 = t11179 + t11183;
  t8506 = -1.*t8425*t8503;
  t8739 = -1.*t8519*t8735;
  t9190 = t6526*t8735;
  t9192 = t8425*t7186;
  t9284 = t8425*t8503;
  t9313 = t8519*t8735;
  t9350 = -1.*t6489*t8735;
  t9353 = -1.*t8425*t7526;
  t9658 = -1.*t2520*t9657*t8503;
  t9715 = -1.*t2520*t8821*t8735;
  t11353 = -1.*t8821*t8999;
  t11354 = -1.*t8864*t9023;
  t11355 = t11353 + t11354 + t9168;
  t9804 = t2520*t5899*t8735;
  t9812 = t2520*t9657*t7186;
  t11369 = t8999*t5899;
  t11375 = t9023*t6446;
  t11383 = t11369 + t11375 + t9231;
  t9854 = t2520*t9657*t8503;
  t9858 = t2520*t8821*t8735;
  t11466 = t8821*t8999;
  t11473 = t8864*t9023;
  t11477 = t11466 + t11473 + t9337;
  t9934 = -1.*t2520*t5784*t8735;
  t9937 = -1.*t2520*t9657*t7526;
  t11503 = -1.*t8999*t5784;
  t11508 = -1.*t9023*t6433;
  t11509 = t11503 + t11508 + t9377;
  t10100 = -1.*t8503*t10099;
  t10137 = -1.*t10131*t8735;
  t10201 = t6906*t8735;
  t10202 = t10099*t7186;
  t10265 = t8503*t10099;
  t10283 = t10131*t8735;
  t10323 = -1.*t8735*t6958;
  t10324 = -1.*t10099*t7526;
  t9456 = -1.*t8503*t9023;
  t9460 = -1.*t8864*t8735;
  t9476 = t8735*t6446;
  t9477 = t9023*t7186;
  t9495 = t8503*t9023;
  t9496 = t8864*t8735;
  t9553 = -1.*t8735*t6433;
  t9556 = -1.*t9023*t7526;
  t10787 = -1.*t10786*t8735;
  t10818 = -1.*t8503*t10815;
  t11002 = t10815*t7186;
  t11003 = t8735*t7060;
  t11023 = t10786*t8735;
  t11024 = t8503*t10815;
  t11038 = -1.*t8735*t7011;
  t11040 = -1.*t10815*t7526;
  t11147 = -1.*t8503*t11138;
  t11200 = t11138*t7186;
  t11201 = t8735*t7526;
  t11245 = t8503*t11138;
  t11260 = -1.*t8735*t7565;
  t11263 = -1.*t11138*t7526;
  t11424 = -1.*t8420*t2601*t8821;
  t11425 = -1.*t8144*t2601*t8999;
  t11480 = t1930*t2601*t8999;
  t11484 = t8420*t2601*t5784;
  t11335 = t8420*t2601*t8821;
  t11336 = t8144*t2601*t8999;
  t11359 = -1.*t3218*t2601*t8999;
  t11360 = -1.*t8420*t2601*t5899;
  t11691 = t8821*t10141;
  t11692 = t10000*t8999;
  t11980 = t8432*t8566;
  t11981 = t8497*t8725;
  t11982 = t11980 + t11466 + t11981;
  t11706 = -1.*t8999*t6140;
  t11707 = -1.*t10141*t5784;
  t11997 = -1.*t8566*t5379;
  t11999 = -1.*t8725*t5522;
  t12000 = t11997 + t11999 + t11503;
  t11663 = -1.*t8821*t10141;
  t11664 = -1.*t10000*t8999;
  t12021 = -1.*t8432*t8566;
  t12022 = -1.*t8497*t8725;
  t12023 = t12021 + t11353 + t12022;
  t11675 = t5952*t8999;
  t11676 = t10141*t5899;
  t12043 = t8566*t5075;
  t12049 = t8725*t5337;
  t12052 = t12043 + t12049 + t11369;
  t11844 = t10687*t8999;
  t11845 = t8821*t10868;
  t11853 = -1.*t8999*t6204;
  t11854 = -1.*t10868*t5784;
  t11820 = -1.*t10687*t8999;
  t11823 = -1.*t8821*t10868;
  t11831 = t8999*t6288;
  t11832 = t10868*t5899;
  t11623 = t9605*t8999;
  t11624 = t8821*t9744;
  t11630 = -1.*t8999*t5692;
  t11632 = -1.*t9744*t5784;
  t11531 = -1.*t9605*t8999;
  t11532 = -1.*t8821*t9744;
  t11590 = t8999*t5869;
  t11591 = t9744*t5899;
  t11870 = -1.*t8821*t11153;
  t11878 = t8999*t5784;
  t11879 = t11153*t5899;
  t11915 = t8821*t11153;
  t11937 = -1.*t11153*t5784;
  t11938 = -1.*t8999*t6384;
  t12066 = t8432*t10090;
  t12067 = t10007*t8566;
  t12081 = -1.*t8566*t6153;
  t12083 = -1.*t10090*t5379;
  t12100 = -1.*t8432*t10090;
  t12102 = -1.*t10007*t8566;
  t12373 = Power(t970,2);
  t12117 = t5999*t8566;
  t12118 = t10090*t5075;
  t11972 = t8205*t8566;
  t11973 = t8432*t8409;
  t12356 = t8205*t8409;
  t12360 = t970*t269*t8686;
  t12366 = t11980 + t12356 + t12360;
  t11984 = -1.*t8409*t5379;
  t11985 = -1.*t8566*t2519;
  t12394 = -1.*t8686*t5404;
  t12404 = -1.*t8409*t2519;
  t12406 = t12394 + t11997 + t12404;
  t12009 = -1.*t8205*t8566;
  t12010 = -1.*t8432*t8409;
  t12425 = -1.*t8205*t8409;
  t12426 = -1.*t970*t269*t8686;
  t12432 = t12021 + t12425 + t12426;
  t12032 = t8409*t5075;
  t12033 = t8566*t3320;
  t12479 = t8686*t5270;
  t12482 = t8409*t3320;
  t12483 = t12479 + t12043 + t12482;
  t12145 = -1.*t583*t970*t269*t8566;
  t12148 = t583*t8432*t10805;
  t12158 = -1.*t583*t8566*t6196;
  t12159 = -1.*t583*t10805*t5379;
  t12169 = t583*t970*t269*t8566;
  t12170 = -1.*t583*t8432*t10805;
  t12177 = t583*t8566*t6277;
  t12178 = t583*t10805*t5075;
  t12236 = -1.*t8432*t11081;
  t12243 = t8566*t5379;
  t12246 = t11081*t5075;
  t12266 = t8432*t11081;
  t12280 = -1.*t11081*t5379;
  t12281 = -1.*t8566*t6390;
  t12451 = -1.*t12373*t269*t10087;
  t12452 = -1.*t1778*t970*t8686;
  t12460 = -1.*t625*t970*t269*t8686;
  t12464 = t970*t10087*t5270;
  t12667 = Power(t1641,2);
  t12374 = t12373*t269*t10087;
  t12375 = t1778*t970*t8686;
  t12380 = -1.*t970*t269*t8686*t374;
  t12381 = -1.*t970*t10087*t5404;
  t12609 = -1.*t970*t269*t11122;
  t12661 = -1.*t1778*t8309;
  t12662 = -1.*t1641*t269*t8379;
  t12663 = t12661 + t12426 + t12662;
  t12618 = t11122*t5270;
  t12621 = t8686*t5404;
  t12690 = t1778*t8309;
  t12693 = t1641*t269*t8379;
  t12694 = t12690 + t12360 + t12693;
  t12630 = t970*t269*t11122;
  t12683 = -1.*t625*t269*t8309;
  t12732 = Power(t269,2);
  t12641 = -1.*t8686*t6277;
  t12644 = -1.*t11122*t5404;
  t12589 = -1.*t1641*t269*t8686;
  t12590 = -1.*t970*t269*t10811;
  t12595 = t10811*t5270;
  t12596 = t8686*t2967;
  t12684 = t8379*t2967;
  t12685 = t12683 + t12479 + t12684;
  t12567 = t1641*t269*t8686;
  t12568 = t970*t269*t10811;
  t12712 = -1.*t269*t8309*t374;
  t12713 = -1.*t8379*t1791;
  t12714 = t12712 + t12713 + t12394;
  t12574 = -1.*t8686*t1791;
  t12575 = -1.*t10811*t5404;
  t12697 = t1778*t10078;
  t12699 = -1.*t269*t8309;
  t12704 = -1.*t269*t10078*t374;
  t12705 = -1.*t1778*t8309*t374;
  t12676 = -1.*t625*t269*t10078;
  t12678 = -1.*t1778*t625*t8309;
  t12666 = -1.*t1778*t10078;
  t12671 = t269*t8309;
  t12841 = -1.*t269*t8347;
  t12842 = t12841 + t12661;
  t12733 = t625*t12732*t11067;
  t12734 = t269*t8309*t374;
  t12820 = t269*t8347;
  t12822 = t12820 + t12690;
  t12875 = t1778*t625*t8347;
  t12876 = t8355*t374;
  t12897 = Power(t1778,2);
  t12748 = t12732*t11067*t374;
  p_output1[0]=var2[12]*(-0.5*(-0.0005708164*t6449 - 0.0001630904*t6455)*var2[4] - 0.5*(-0.0005708164*t19*t5365 - 0.0001630904*t19*t5547)*var2[5] - 0.5*(-0.0001630904*t5786 - 0.0005708164*t5909)*var2[8] - 0.5*(-0.0001630904*t2723 - 0.0005708164*t3945)*var2[9] - 0.5*(-0.0001630904*t6247 - 0.0005708164*t6341)*var2[10] - 0.5*(-0.0005708164*t6094 - 0.0001630904*t6176)*var2[11] - 0.5*(-0.0001630904*t6421 - 0.0005708164*t6435)*var2[12]);
  p_output1[1]=var2[12]*(-0.5*(-0.0005708164*(-1.*t6449*t6468 - 1.*t6491*t7186) - 0.0001630904*(-1.*t6455*t6468 - 1.*t6491*t7526))*var2[3] - 0.5*(0.0005708164*t6491*t6592 + 0.0001630904*t6491*t6621)*var2[4] - 0.5*(-0.0005708164*(t6446*t6468 + t2594*t5365*t6491) - 0.0001630904*(t6433*t6468 + t2594*t5547*t6491))*var2[5] - 0.5*(-0.0001630904*(t2520*t5784*t6468 - 1.*t6491*t6762) - 0.0005708164*(t2520*t5899*t6468 - 1.*t6491*t6822))*var2[8] - 0.5*(-0.0001630904*(t6468*t6489 - 1.*t6491*t6502) - 0.0005708164*(t6468*t6526 - 1.*t6491*t6535))*var2[9] - 0.5*(-0.0001630904*(t6468*t7011 - 1.*t6491*t7028) - 0.0005708164*(t6468*t7060 - 1.*t6491*t7082))*var2[10] - 0.5*(-0.0005708164*(t6468*t6906 - 1.*t6491*t6920) - 0.0001630904*(t6468*t6958 - 1.*t6491*t6966))*var2[11] - 0.5*(-0.0001630904*(t6468*t7565 - 1.*t6491*t7594) - 0.0005708164*t7606)*var2[12]);
  p_output1[2]=var2[12]*(-0.5*(-0.0005708164*(-1.*t6449*t6491 + t6468*t7186) - 0.0001630904*t7606)*var2[3] - 0.5*(-0.0005708164*t6468*t6592 - 0.0001630904*t6468*t6621)*var2[4] - 0.5*(-0.0001630904*(-1.*t2594*t5547*t6468 + t6433*t6491) - 0.0005708164*(-1.*t2594*t5365*t6468 + t6446*t6491))*var2[5] - 0.5*(-0.0001630904*(t2520*t5784*t6491 + t6468*t6762) - 0.0005708164*(t2520*t5899*t6491 + t6468*t6822))*var2[8] - 0.5*(-0.0001630904*(t6489*t6491 + t6468*t6502) - 0.0005708164*(t6491*t6526 + t6468*t6535))*var2[9] - 0.5*(-0.0001630904*(t6491*t7011 + t6468*t7028) - 0.0005708164*(t6491*t7060 + t6468*t7082))*var2[10] - 0.5*(-0.0005708164*(t6491*t6906 + t6468*t6920) - 0.0001630904*(t6491*t6958 + t6468*t6966))*var2[11] - 0.5*(-0.0005708164*(t6455*t6468 + t6491*t7526) - 0.0001630904*(t6491*t7565 + t6468*t7594))*var2[12]);
  p_output1[3]=var2[12]*(-0.5*(-3.e-6*t6455 + 0.000069*t8946 - 0.0001630904*(t8935*(t10373*t6449 + t6449*t9026 + t6592*t9157 + t8260*t9157) + t8260*(-1.*t10373*t8946 - 1.*t8946*t9026 - 1.*t10492*t9157 - 1.*t8935*t9157) + t6449*t9184 + t8946*t9242) - 0.0005708164*(t8935*(-1.*t10373*t6455 - 1.*t6455*t9026 - 1.*t6435*t9157 - 1.*t6621*t9157) + t6435*(t10373*t8946 + t8946*t9026 + t10492*t9157 + t8935*t9157) + t6455*t9345 + t8946*t9384))*var2[4] - 0.5*(-3.e-6*t19*t5547 + 0.000069*t19*t9401 - 0.0001630904*(t19*t5365*t9184 + t19*t9242*t9401 + t8260*(-1.*t19*t9026*t9401 + t2594*t9157*t9401 + t9456 + t9460 - 1.*t19*t8935*t9468 + t2594*t8946*t9468) + t8935*(t19*t5365*t9026 - 1.*t2594*t5365*t9157 - 1.*t2594*t6449*t9468 + t19*t8260*t9468 + t9476 + t9477)) - 0.0005708164*(t19*t5547*t9345 + t19*t9384*t9401 + t6435*(t19*t9026*t9401 - 1.*t2594*t9157*t9401 + t19*t8935*t9468 - 1.*t2594*t8946*t9468 + t9495 + t9496) + t8935*(-1.*t19*t5547*t9026 + t2594*t5547*t9157 - 1.*t19*t6435*t9468 + t2594*t6455*t9468 + t9553 + t9556)))*var2[5] - 0.5*(-3.e-6*t5786 + 0.000069*t9618 - 0.0001630904*(t5909*t9184 + t9242*t9618 + t8260*(-1.*t9026*t9618 + t9658 + t9715 - 1.*t8935*t9751 - 1.*t8946*t9779 - 1.*t9157*t9799) + t8935*(t5909*t9026 + t6822*t9157 + t8260*t9751 + t6449*t9779 + t9804 + t9812)) - 0.0005708164*(t5786*t9345 + t9384*t9618 + t6435*(t9026*t9618 + t8935*t9751 + t8946*t9779 + t9157*t9799 + t9854 + t9858) + t8935*(-1.*t5786*t9026 - 1.*t6762*t9157 - 1.*t6435*t9751 - 1.*t6455*t9779 + t9934 + t9937)))*var2[8] - 0.5*(-3.e-6*t2723 + 0.000069*t8212 - 0.0001630904*(t8260*(t8506 + t8739 - 1.*t8755*t8935 - 1.*t8940*t8946 - 1.*t8212*t9026 - 1.*t9085*t9157) + t3945*t9184 + t8935*(t8260*t8755 + t6449*t8940 + t3945*t9026 + t6535*t9157 + t9190 + t9192) + t8212*t9242) - 0.0005708164*(t6435*(t8755*t8935 + t8940*t8946 + t8212*t9026 + t9085*t9157 + t9284 + t9313) + t2723*t9345 + t8935*(-1.*t6435*t8755 - 1.*t6455*t8940 - 1.*t2723*t9026 - 1.*t6502*t9157 + t9350 + t9353) + t8212*t9384))*var2[9] - 0.5*(0.000069*t10771 - 3.e-6*t6247 - 0.0001630904*(t8260*(t10787 + t10818 - 1.*t10974*t8935 - 1.*t10980*t8946 - 1.*t10771*t9026 - 1.*t10839*t9157) + t8935*(t11002 + t11003 + t10980*t6449 + t10974*t8260 + t6341*t9026 + t7082*t9157) + t6341*t9184 + t10771*t9242) - 0.0005708164*(t6435*(t11023 + t11024 + t10974*t8935 + t10980*t8946 + t10771*t9026 + t10839*t9157) + t8935*(t11038 + t11040 - 1.*t10974*t6435 - 1.*t10980*t6455 - 1.*t6247*t9026 - 1.*t7028*t9157) + t6247*t9345 + t10771*t9384))*var2[10] - 0.5*(0.000069*t10037 - 3.e-6*t6176 - 0.0001630904*(t8260*(t10100 + t10137 - 1.*t10147*t8935 - 1.*t10152*t8946 - 1.*t10037*t9026 - 1.*t10181*t9157) + t8935*(t10201 + t10202 + t10152*t6449 + t10147*t8260 + t6094*t9026 + t6920*t9157) + t6094*t9184 + t10037*t9242) - 0.0005708164*(t6435*(t10265 + t10283 + t10147*t8935 + t10152*t8946 + t10037*t9026 + t10181*t9157) + t8935*(t10323 + t10324 - 1.*t10147*t6435 - 1.*t10152*t6455 - 1.*t6176*t9026 - 1.*t6966*t9157) + t6176*t9345 + t10037*t9384))*var2[11] - 0.5*(-3.e-6*t6421 - 0.0001630904*(t8260*(t11147 - 1.*t11171*t8935 - 1.*t11184*t8946) + t8935*(t11200 + t11201 + t11184*t6449 + t11171*t8260 + t6435*t9026 + t6455*t9157) + t6435*t9184) - 0.0005708164*(t6435*(t11245 + t11171*t8935 + t11184*t8946) + t8935*(t11260 + t11263 - 1.*t11171*t6435 - 1.*t11184*t6455 - 1.*t6421*t9026 - 1.*t7594*t9157) + t6421*t9345))*var2[12]);
  p_output1[4]=var2[12]*(-0.5*(-3.e-6*t6433 + 0.000069*t8864 - 0.0001630904*(t11355*t6446 + t11383*t8864 + t7186*(-1.*t9023*t9401 + t9456 + t9460 - 1.*t8864*t9468) + t8503*(t5365*t9023 + t6446*t9468 + t9476 + t9477)) - 0.0005708164*(t11477*t6433 + t11509*t8864 + t7526*(t9023*t9401 + t8864*t9468 + t9495 + t9496) + t8503*(-1.*t5547*t9023 - 1.*t6433*t9468 + t9553 + t9556)))*var2[5] - 0.5*(-3.e-6*t2520*t5784 + 0.000069*t2520*t8821 - 0.0001630904*(t11355*t2520*t5899 + t11383*t2520*t8821 + t7186*(t11531 + t11532 - 1.*t28*t8821*t9023 - 1.*t28*t8864*t9657 + t9658 + t9715) + t8503*(t11590 + t11591 + t28*t5899*t9023 + t28*t6446*t9657 + t9804 + t9812)) - 0.0005708164*(t11477*t2520*t5784 + t11509*t2520*t8821 + t7526*(t11623 + t11624 + t28*t8821*t9023 + t28*t8864*t9657 + t9854 + t9858) + t8503*(t11630 + t11632 - 1.*t28*t5784*t9023 - 1.*t28*t6433*t9657 + t9934 + t9937)))*var2[8] - 0.5*(-3.e-6*t6489 + 0.000069*t8519 - 0.0001630904*(t11355*t6526 + t11383*t8519 + t7186*(t11335 + t11336 + t8506 + t8739 - 1.*t8749*t8864 - 1.*t8207*t9023) + t8503*(t11359 + t11360 + t6446*t8749 + t3364*t9023 + t9190 + t9192)) - 0.0005708164*(t11477*t6489 + t11509*t8519 + t7526*(t11424 + t11425 + t8749*t8864 + t8207*t9023 + t9284 + t9313) + t8503*(t11480 + t11484 - 1.*t6433*t8749 - 1.*t2525*t9023 + t9350 + t9353)))*var2[9] - 0.5*(0.000069*t10786 - 3.e-6*t7011 - 0.0005708164*(t10786*t11509 + t11477*t7011 + t7526*(t11023 + t11024 + t11844 + t11845 + t10967*t8864 + t10764*t9023) + t8503*(t11038 + t11040 + t11853 + t11854 - 1.*t10967*t6433 - 1.*t6238*t9023)) - 0.0001630904*(t10786*t11383 + t11355*t7060 + t7186*(t10787 + t10818 + t11820 + t11823 - 1.*t10967*t8864 - 1.*t10764*t9023) + t8503*(t11002 + t11003 + t11831 + t11832 + t10967*t6446 + t6339*t9023)))*var2[10] - 0.5*(0.000069*t10131 - 3.e-6*t6958 - 0.0001630904*(t10131*t11383 + t11355*t6906 + t7186*(t10100 + t10137 + t11663 + t11664 - 1.*t10145*t8864 - 1.*t10033*t9023) + t8503*(t10201 + t10202 + t11675 + t11676 + t10145*t6446 + t6060*t9023)) - 0.0005708164*(t10131*t11509 + t11477*t6958 + t7526*(t10265 + t10283 + t11691 + t11692 + t10145*t8864 + t10033*t9023) + t8503*(t10323 + t10324 + t11706 + t11707 - 1.*t10145*t6433 - 1.*t6169*t9023)))*var2[11] - 0.5*(-3.e-6*t7565 - 0.0005708164*(t11477*t7565 + t7526*(t11245 + t11915 + t11167*t8864) + t8503*(t11260 + t11263 + t11937 + t11938 - 1.*t11167*t6433 - 1.*t6411*t9023)) - 0.0001630904*(t11355*t7526 + t7186*(t11147 + t11870 - 1.*t11167*t8864) + t8503*(t11200 + t11201 + t11878 + t11879 + t11167*t6446 + t6433*t9023)))*var2[12]);
  p_output1[5]=var2[12]*(-0.5*(-3.e-6*t5692 + 0.000069*t9605 - 0.0001630904*(t12023*t5869 + t12052*t9605 + t8821*(t11590 + t11591 + t5899*t8725 + t5337*t9657) + t5899*(t11531 + t11532 - 1.*t8725*t8821 - 1.*t8497*t9657)) - 0.0005708164*(t11982*t5692 + t12000*t9605 + t8821*(t11630 + t11632 - 1.*t5784*t8725 - 1.*t5522*t9657) + t5784*(t11623 + t11624 + t8725*t8821 + t8497*t9657)))*var2[8] - 0.5*(3.e-6*t1930*t2601 - 0.000069*t2601*t8144 - 0.0005708164*(-1.*t11982*t1930*t2601 - 1.*t12000*t2601*t8144 + t5784*(t11424 + t11425 + t11972 + t11973 + t35*t8420*t8497 + t35*t8144*t8725) + (t11480 + t11484 + t11984 + t11985 - 1.*t35*t5522*t8420 - 1.*t1930*t35*t8725)*t8821) - 0.0001630904*(-1.*t12023*t2601*t3218 - 1.*t12052*t2601*t8144 + t5899*(t11335 + t11336 + t12009 + t12010 - 1.*t35*t8420*t8497 - 1.*t35*t8144*t8725) + (t11359 + t11360 + t12032 + t12033 + t35*t5337*t8420 + t3218*t35*t8725)*t8821))*var2[9] - 0.5*(0.000069*t10687 - 3.e-6*t6204 - 0.0005708164*(t10687*t12000 + t11982*t6204 + t5784*(t11844 + t11845 + t12145 + t12148 + t10813*t8497 + t10749*t8725) + (t11853 + t11854 + t12158 + t12159 - 1.*t10813*t5522 - 1.*t6224*t8725)*t8821) - 0.0001630904*(t10687*t12052 + t12023*t6288 + t5899*(t11820 + t11823 + t12169 + t12170 - 1.*t10813*t8497 - 1.*t10749*t8725) + (t11831 + t11832 + t12177 + t12178 + t10813*t5337 + t6336*t8725)*t8821))*var2[10] - 0.5*(0.000069*t10000 - 3.e-6*t6140 - 0.0001630904*(t10000*t12052 + t12023*t5952 + t5899*(t11663 + t11664 + t12100 + t12102 - 1.*t10097*t8497 - 1.*t10031*t8725) + (t11675 + t11676 + t12117 + t12118 + t10097*t5337 + t6053*t8725)*t8821) - 0.0005708164*(t10000*t12000 + t11982*t6140 + t5784*(t11691 + t11692 + t12066 + t12067 + t10097*t8497 + t10031*t8725) + (t11706 + t11707 + t12081 + t12083 - 1.*t10097*t5522 - 1.*t6163*t8725)*t8821))*var2[11] - 0.5*(-3.e-6*t6384 - 0.0001630904*(t12023*t5784 + t5899*(t11870 + t12236 - 1.*t11124*t8497) + (t11878 + t11879 + t12243 + t12246 + t11124*t5337 + t5522*t8725)*t8821) - 0.0005708164*(t11982*t6384 + t5784*(t11915 + t12266 + t11124*t8497) + (t11937 + t11938 + t12280 + t12281 - 1.*t11124*t5522 - 1.*t6403*t8725)*t8821))*var2[12]);
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=var2[12]*(-0.5*(-3.e-6*t2519 + 0.000069*t8205 - 0.0005708164*(t12366*t2519 + 0.1*t5075 + t12406*t8205 + t5379*(t11972 + t11973 + t8144*t8409 + t8205*t8420) + (t11984 + t11985 - 1.*t1930*t8409 - 1.*t2519*t8420)*t8432) - 0.0001630904*(t12432*t3320 + 0.1*t5379 + t12483*t8205 + t5075*(t12009 + t12010 - 1.*t8144*t8409 - 1.*t8205*t8420) + (t12032 + t12033 + t3218*t8409 + t3320*t8420)*t8432))*var2[9] - 0.5*(-3.e-6*t583*t6196 - 0.000069*t269*t583*t970 - 0.0001630904*(0.1*t37*t6196 + t12432*t583*t6277 + (t12177 + t12178 + t12595 + t12596 - 1.*t10805*t3320*t37 - 1.*t37*t6277*t8409)*t8432 - 1.*t12483*t269*t583*t970 + t5075*(t12169 + t12170 + t12589 + t12590 + t10805*t37*t8205 - 1.*t269*t37*t8409*t970)) - 0.0005708164*(t12366*t583*t6196 + 0.1*t37*t6277 + (t12158 + t12159 + t12574 + t12575 + t10805*t2519*t37 + t37*t6196*t8409)*t8432 - 1.*t12406*t269*t583*t970 + t5379*(t12145 + t12148 + t12567 + t12568 - 1.*t10805*t37*t8205 + t269*t37*t8409*t970)))*var2[10] - 0.5*(0.000069*t10007 - 3.e-6*t6153 - 0.0001630904*(t10007*t12483 + 0.1*(t1641*t269*t37*t374 - 1.*t1778*t374*t583) + t12432*t5999 + (t12117 + t12118 + t12460 + t12464 + t10094*t3320 + t5950*t8409)*t8432 + t5075*(t12100 + t12102 + t12451 + t12452 - 1.*t10094*t8205 - 1.*t8409*t9996)) - 0.0005708164*(t10007*t12406 + t12366*t6153 + 0.1*(-1.*t1641*t269*t37*t625 + t1778*t583*t625) + (t12081 + t12083 + t12380 + t12381 - 1.*t10094*t2519 - 1.*t6122*t8409)*t8432 + t5379*(t12066 + t12067 + t12374 + t12375 + t10094*t8205 + t8409*t9996)))*var2[11] - 0.5*(-3.e-6*t6390 - 0.0001630904*(t12432*t5379 + 0.1*(t3245 + t37*t6366) + t5075*(t12236 + t12609 - 1.*t11089*t8205) + (t12243 + t12246 + t12618 + t12621 + t11089*t3320 + t2519*t8409)*t8432) - 0.0005708164*(0.1*(t1791*t37 - 1.*t269*t374*t583) + t12366*t6390 + t5379*(t12266 + t12630 + t11089*t8205) + (t12280 + t12281 + t12641 + t12644 - 1.*t11089*t2519 - 1.*t6378*t8409)*t8432))*var2[12]);
  p_output1[9]=var2[12]*(-0.5*(-3.e-6*t1791 + 0.000069*t1641*t269 - 0.0005708164*(t12694*t1791 + t12714*t1641*t269 + t269*(t12574 + t12575 - 1.*t10805*t1791 - 1.*t6196*t8379)*t970 + t5404*(t12567 + t12568 + t10805*t1641*t269 - 1.*t269*t8379*t970)) - 0.0001630904*(t12685*t1641*t269 + t12663*t2967 + t269*(t12595 + t12596 + t10805*t2967 + t6277*t8379)*t970 + t5270*(t12589 + t12590 - 1.*t10805*t1641*t269 + t269*t8379*t970)))*var2[10] - 0.5*(0.000069*t1778*t970 - 3.e-6*t269*t374*t970 - 0.0005708164*(-0.098*t1778*t625 + t5404*(t12374 + t12375 + t12697 + t12699 + t10087*t12667*t269 + t1641*t1778*t8379) + t12714*t1778*t970 + t12694*t269*t374*t970 + t269*(t12380 + t12381 + t12704 + t12705 - 1.*t10087*t1641*t1791 - 1.*t1641*t269*t374*t8379)*t970) - 0.0001630904*(0.098*t1778*t374 + t5270*(t12451 + t12452 + t12666 + t12671 - 1.*t10087*t12667*t269 - 1.*t1641*t1778*t8379) + t12685*t1778*t970 - 1.*t12663*t269*t625*t970 + t269*(t12460 + t12464 + t12676 + t12678 + t10087*t1641*t2967 - 1.*t1641*t269*t625*t8379)*t970))*var2[11] - 0.5*(-3.e-6*t6277 - 0.0001630904*((t12609 - 1.*t11073*t1641*t269 + t11067*t1778*t269)*t5270 + t12663*t5404 + 0.098*t269*t625 + t269*(t12618 + t12621 + t12733 + t12734 + t11073*t2967 + t1791*t8379)*t970) - 0.0005708164*(0.098*t269*t374 + (t12630 + t11073*t1641*t269 - 1.*t11067*t1778*t269)*t5404 + t12694*t6277 + t269*(t12641 + t12644 + t12683 + t12748 - 1.*t11073*t1791 - 1.*t6366*t8379)*t970))*var2[12]);
  p_output1[10]=var2[12]*(-0.5*(-0.000069*t269 - 3.e-6*t1778*t374 - 0.0001630904*(-1.*(t12683 + t12875 + t12876)*t269 + 0.1*t269*t374 - 1.*t12842*t1778*t625 - 1.*t269*t625*(t12666 + t12671 - 1.*t10087*t269 - 1.*t1778*t8347) + t1778*(t12676 + t12678 + t10087*t1778*t625 - 1.*t269*t625*t8347)) - 0.0005708164*(t12822*t1778*t374 - 0.1*t269*t625 + t269*t374*(t12697 + t12699 + t10087*t269 + t1778*t8347) + t1778*(t12704 + t12705 + t10087*t1778*t374 - 1.*t269*t374*t8347) - 1.*t269*(t12712 + t1778*t374*t8347 - 1.*t625*t8355)))*var2[11] - 0.5*(-3.e-6*t269*t625 - 0.0005708164*(-0.1*t1778*t374 - 0.113*t625 + t12822*t269*t625 + t1778*(t12683 + t12748 + t12875 + t12876 + t11067*t12897*t374 - 1.*t11061*t625)) - 0.0001630904*(0.113*t374 + t12842*t269*t374 - 0.1*t1778*t625 + t1778*(t12733 + t12734 + t11061*t374 + t11067*t12897*t625 - 1.*t1778*t374*t8347 + t625*t8355)))*var2[12]);
  p_output1[11]=-0.5*(0.000054539012756*t374 + 0.000014725432216*t625)*Power(var2[12],2);
  p_output1[12]=0;
  p_output1[13]=0;
  p_output1[14]=0;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
  p_output1[18]=0;
  p_output1[19]=0;
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=0;
  p_output1[24]=0;
  p_output1[25]=0;
  p_output1[26]=0;
  p_output1[27]=0;
  p_output1[28]=0;
  p_output1[29]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 30 && ncols == 1) && 
      !(mrows == 1 && ncols == 30))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 30 && ncols == 1) && 
      !(mrows == 1 && ncols == 30))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 30, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "Ce1_vec13_NaoH25V50.hh"

namespace SymFunction
{

void Ce1_vec13_NaoH25V50_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
