/*
 * Automatically Generated from Mathematica.
 * Tue 10 Jul 2018 11:14:36 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;


#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t2095;
  double t1471;
  double t2637;
  double t3394;
  double t5598;
  double t6258;
  double t6378;
  double t6383;
  double t6384;
  double t8725;
  double t8546;
  double t9014;
  double t9015;
  double t9023;
  double t8735;
  double t8736;
  double t8753;
  double t9026;
  double t9724;
  double t10382;
  double t9603;
  double t11074;
  double t11083;
  double t11085;
  double t11089;
  double t11138;
  double t11147;
  double t8550;
  double t8566;
  double t8570;
  double t8726;
  double t8755;
  double t8783;
  double t8801;
  double t8943;
  double t8944;
  double t8946;
  double t11466;
  double t11383;
  double t9025;
  double t9452;
  double t9556;
  double t9602;
  double t10497;
  double t10788;
  double t11624;
  double t11707;
  double t11757;
  double t12000;
  double t10862;
  double t10883;
  double t10886;
  double t11003;
  double t11023;
  double t11024;
  double t11038;
  double t11040;
  double t11057;
  double t11088;
  double t11103;
  double t11107;
  double t11129;
  double t11131;
  double t11148;
  double t11149;
  double t12685;
  double t12748;
  double t11170;
  double t11171;
  double t11179;
  double t11183;
  double t11200;
  double t11201;
  double t11263;
  double t11354;
  double t11355;
  double t11359;
  double t11424;
  double t11425;
  double t11464;
  double t11473;
  double t11480;
  double t11484;
  double t11491;
  double t19178;
  double t19188;
  double t19210;
  double t19379;
  double t11504;
  double t11505;
  double t11508;
  double t11870;
  double t12010;
  double t12021;
  double t12083;
  double t12100;
  double t12117;
  double t12145;
  double t12177;
  double t12366;
  double t12373;
  double t12374;
  double t12452;
  double t12574;
  double t12609;
  double t20565;
  double t20730;
  double t12732;
  double t12734;
  double t12822;
  double t12841;
  double t12842;
  double t12875;
  double t13052;
  double t13243;
  double t13244;
  double t13496;
  double t13533;
  double t13572;
  double t13582;
  double t16570;
  double t18091;
  double t18229;
  double t18411;
  double t21357;
  double t21391;
  double t19280;
  double t19405;
  double t19488;
  double t19510;
  double t19537;
  double t19538;
  double t19550;
  double t19552;
  double t21731;
  double t21890;
  double t22000;
  double t22006;
  double t19553;
  double t19564;
  double t19675;
  double t19713;
  double t19751;
  double t19758;
  double t20638;
  double t20775;
  double t20785;
  double t20832;
  double t20964;
  double t21001;
  double t21071;
  double t21117;
  double t21135;
  double t21222;
  double t22554;
  double t22384;
  double t21359;
  double t21395;
  double t21415;
  double t21433;
  double t21510;
  double t21512;
  double t21619;
  double t21647;
  double t21661;
  double t21669;
  double t22957;
  double t22831;
  double t22003;
  double t22020;
  double t22030;
  double t22031;
  double t22048;
  double t22154;
  double t22185;
  double t22186;
  double t23279;
  double t23284;
  double t23288;
  double t23391;
  double t22196;
  double t22203;
  double t22204;
  double t22295;
  double t22318;
  double t22321;
  double t12621;
  double t22443;
  double t22478;
  double t22509;
  double t22680;
  double t22685;
  double t22689;
  double t22690;
  double t22701;
  double t22713;
  double t22784;
  double t23672;
  double t23753;
  double t18976;
  double t22843;
  double t22933;
  double t22942;
  double t22959;
  double t22963;
  double t23080;
  double t23126;
  double t23176;
  double t23177;
  double t23185;
  double t24121;
  double t24202;
  double t23701;
  double t23755;
  double t23761;
  double t23780;
  double t24444;
  double t24451;
  double t24459;
  double t24466;
  double t23781;
  double t23819;
  double t23848;
  double t23875;
  double t23876;
  double t23898;
  double t24177;
  double t24275;
  double t24305;
  double t24306;
  double t24800;
  double t25113;
  double t24311;
  double t24322;
  double t24331;
  double t24343;
  double t24418;
  double t24420;
  double t26247;
  double t26255;
  double t26292;
  double t26350;
  double t26422;
  double t26423;
  double t26426;
  double t26707;
  double t26829;
  double t26728;
  double t26747;
  double t26753;
  double t26838;
  double t26839;
  double t26874;
  double t26938;
  double t27009;
  double t27097;
  double t27185;
  double t27270;
  double t27247;
  double t27249;
  double t27251;
  double t27269;
  double t27272;
  double t27303;
  double t27309;
  double t27327;
  double t27412;
  double t27413;
  double t27417;
  double t27455;
  double t27346;
  double t27353;
  double t27365;
  double t27418;
  double t27459;
  double t27475;
  double t27524;
  double t27584;
  double t27599;
  double t27665;
  double t27704;
  double t27837;
  double t27865;
  double t27871;
  double t27886;
  double t27713;
  double t27720;
  double t27755;
  double t27790;
  double t27792;
  double t27793;
  double t27874;
  double t27890;
  double t27894;
  double t27910;
  double t27922;
  double t27924;
  double t27932;
  double t28017;
  double t28141;
  double t28244;
  double t28437;
  double t28448;
  double t28033;
  double t28039;
  double t28040;
  double t28057;
  double t28058;
  double t28064;
  double t29204;
  double t29236;
  double t29264;
  double t29266;
  double t29352;
  double t29901;
  double t29967;
  double t30138;
  double t32210;
  double t31255;
  double t31331;
  double t31345;
  double t31350;
  double t31386;
  double t31464;
  double t31881;
  double t31935;
  double t32055;
  double t32176;
  double t32207;
  double t34324;
  double t34771;
  double t34882;
  double t34914;
  double t34994;
  double t35000;
  double t35169;
  double t35208;
  double t35269;
  double t35271;
  double t35558;
  double t35653;
  double t35691;
  double t35773;
  double t35781;
  double t35822;
  double t35912;
  double t36035;
  double t36082;
  double t36571;
  double t36706;
  double t36754;
  double t36826;
  double t36829;
  double t36885;
  double t37267;
  double t37297;
  double t37361;
  double t37369;
  double t37421;
  double t37768;
  double t37829;
  double t37841;
  double t37866;
  double t37875;
  double t37907;
  double t37914;
  double t37975;
  double t38777;
  double t39044;
  double t39049;
  double t39185;
  double t39186;
  double t39239;
  double t39241;
  double t39245;
  double t39252;
  double t39291;
  double t39292;
  double t39321;
  double t39363;
  double t23319;
  double t23435;
  double t23438;
  double t23450;
  double t23451;
  double t23454;
  double t39426;
  double t39443;
  double t39475;
  double t39483;
  double t39505;
  double t39535;
  double t39625;
  double t39629;
  double t39662;
  double t39695;
  double t39696;
  double t39703;
  double t39747;
  double t39792;
  double t39882;
  double t39911;
  double t39923;
  double t39924;
  double t39925;
  double t39954;
  double t39992;
  double t39997;
  double t39057;
  double t40219;
  double t40220;
  double t40222;
  double t40223;
  double t40224;
  double t40227;
  double t40229;
  double t40230;
  double t39293;
  double t40265;
  double t40273;
  double t40278;
  double t40280;
  double t40281;
  double t40283;
  double t40289;
  double t40297;
  double t24463;
  double t24483;
  double t24570;
  double t40417;
  double t40418;
  double t24573;
  double t24575;
  double t24583;
  double t40435;
  double t40442;
  double t40446;
  double t40460;
  double t40465;
  double t40469;
  double t24850;
  double t25036;
  double t25158;
  double t25344;
  double t41542;
  double t41544;
  double t25553;
  double t25554;
  double t25559;
  double t25684;
  double t25686;
  double t41564;
  double t41927;
  double t41928;
  double t43009;
  double t43025;
  double t43100;
  double t26293;
  double t26296;
  double t49631;
  double t49646;
  double t49665;
  double t49804;
  double t49808;
  double t49810;
  double t49814;
  double t49819;
  double t49822;
  double t49826;
  double t49827;
  double t49835;
  double t49837;
  double t49838;
  double t49859;
  double t49864;
  double t49872;
  double t49877;
  double t49878;
  double t49902;
  double t49906;
  double t49909;
  double t49910;
  double t49914;
  double t49916;
  double t49918;
  double t49920;
  double t49937;
  double t49938;
  double t28446;
  double t28527;
  double t28545;
  double t28588;
  double t28605;
  double t28622;
  double t49941;
  double t49944;
  double t49950;
  double t49952;
  double t49954;
  double t49955;
  double t49989;
  double t49990;
  double t49991;
  double t49993;
  double t49994;
  double t49995;
  double t50078;
  double t50021;
  double t50023;
  double t50024;
  double t50025;
  double t50027;
  double t50032;
  double t50036;
  double t50038;
  double t50042;
  double t50043;
  double t50057;
  double t50069;
  double t50071;
  double t50074;
  double t50083;
  double t50085;
  double t50087;
  double t50093;
  double t50094;
  double t50097;
  double t50098;
  double t50099;
  double t50101;
  double t50103;
  double t50104;
  double t50116;
  double t50120;
  double t50121;
  double t50125;
  double t50126;
  double t50131;
  double t50135;
  double t50136;
  double t50137;
  double t50142;
  double t50146;
  double t50147;
  double t50155;
  double t50160;
  double t50161;
  double t50162;
  double t50164;
  double t50166;
  double t50167;
  double t50168;
  double t50175;
  double t50176;
  double t50177;
  double t50178;
  double t50179;
  double t50209;
  double t50210;
  double t50214;
  double t50218;
  double t50219;
  double t50222;
  double t50223;
  double t50224;
  double t50230;
  double t50235;
  double t50236;
  double t50242;
  double t50243;
  double t50245;
  double t50246;
  double t50248;
  double t50250;
  double t50252;
  double t50253;
  double t50261;
  double t50262;
  double t50271;
  double t50276;
  double t50277;
  double t50279;
  double t50280;
  double t50281;
  double t50170;
  double t50320;
  double t50324;
  double t50325;
  double t50326;
  double t50327;
  double t50331;
  double t50332;
  double t50333;
  double t50215;
  double t50360;
  double t50361;
  double t50372;
  double t50376;
  double t50383;
  double t50385;
  double t50388;
  double t50389;
  double t50397;
  double t50401;
  double t50404;
  double t50405;
  double t50406;
  double t50410;
  double t50411;
  double t50415;
  double t50420;
  double t50421;
  double t50422;
  double t50468;
  double t50469;
  double t50499;
  double t50500;
  double t50505;
  double t50615;
  double t50616;
  double t50617;
  double t50636;
  double t50660;
  double t50661;
  double t50662;
  double t50663;
  double t50666;
  double t50667;
  double t50668;
  double t50695;
  double t50696;
  double t50697;
  double t50698;
  double t50699;
  double t50700;
  double t50711;
  double t50715;
  double t50716;
  double t50739;
  double t50741;
  double t50744;
  double t50747;
  double t50749;
  double t50755;
  double t50756;
  double t50760;
  double t50585;
  double t50813;
  double t50815;
  double t50816;
  double t50826;
  double t50828;
  double t50846;
  double t50847;
  double t50848;
  double t50874;
  double t50875;
  double t50876;
  double t50877;
  double t50878;
  double t50880;
  double t50881;
  double t50882;
  double t50893;
  double t50896;
  double t50897;
  double t50898;
  double t50899;
  double t50900;
  double t50905;
  double t50906;
  double t50907;
  double t50911;
  double t50912;
  double t50914;
  double t50917;
  double t50920;
  double t50922;
  double t50923;
  double t50924;
  double t50960;
  double t50961;
  double t50967;
  double t50969;
  double t50973;
  double t50995;
  double t51001;
  double t51003;
  double t51008;
  double t51015;
  double t51016;
  double t51018;
  double t51019;
  double t51020;
  double t51023;
  double t51024;
  double t51025;
  double t51053;
  double t51054;
  double t51055;
  double t51048;
  double t51049;
  double t51057;
  double t51058;
  double t51059;
  double t51060;
  double t51062;
  double t51063;
  double t51064;
  double t51065;
  double t51068;
  double t51069;
  double t51070;
  double t51083;
  double t51163;
  double t51164;
  double t51165;
  double t51170;
  double t51171;
  double t51172;
  double t51149;
  double t51151;
  double t51158;
  double t51166;
  double t51167;
  double t51168;
  double t51173;
  double t51174;
  double t51175;
  double t51176;
  double t51179;
  double t51180;
  double t51181;
  double t51218;
  double t51219;
  double t51220;
  double t51221;
  double t51223;
  double t51225;
  double t51227;
  double t51228;
  double t51263;
  double t51274;
  double t51286;
  double t51287;
  double t51291;
  double t51292;
  double t51311;
  double t51312;
  double t51313;
  double t51318;
  double t51319;
  double t51321;
  double t51322;
  double t51323;
  double t51326;
  double t51327;
  double t51328;
  double t51355;
  double t51356;
  double t51357;
  double t51359;
  double t51360;
  double t51362;
  double t51364;
  double t51365;
  double t51405;
  double t51443;
  double t51444;
  double t51445;
  double t51447;
  double t51448;
  double t51451;
  double t51452;
  double t51453;
  double t51561;
  double t51587;
  double t51589;
  double t51558;
  double t51559;
  double t51595;
  double t51598;
  double t51602;
  double t51603;
  double t51610;
  double t51619;
  double t51625;
  double t51626;
  double t51629;
  double t51630;
  double t51632;
  double t51650;
  double t51697;
  double t51700;
  double t51701;
  double t51716;
  double t51724;
  double t51725;
  double t51694;
  double t51695;
  double t51696;
  double t51713;
  double t51714;
  double t51715;
  double t51726;
  double t51728;
  double t51730;
  double t51731;
  double t51733;
  double t51741;
  double t51745;
  double t51826;
  double t51828;
  double t51829;
  double t51840;
  double t51841;
  double t51842;
  double t51843;
  double t51845;
  double t51853;
  double t51854;
  double t51855;
  double t51915;
  double t51871;
  double t51912;
  double t51916;
  double t51917;
  double t51938;
  double t51950;
  double t51962;
  double t51963;
  double t51976;
  double t51977;
  double t52010;
  double t52013;
  double t52016;
  double t52017;
  double t51959;
  double t52047;
  double t52048;
  double t52059;
  double t52060;
  double t52061;
  double t52063;
  double t52064;
  double t52107;
  double t52120;
  double t52122;
  double t52123;
  double t52124;
  double t52126;
  double t52128;
  double t52129;
  double t52130;
  double t52282;
  double t52279;
  double t52288;
  double t55408;
  double t55521;
  double t55633;
  double t55735;
  double t52216;
  double t52217;
  double t52278;
  double t55409;
  double t55410;
  double t55457;
  double t55785;
  double t55798;
  double t55869;
  double t55873;
  double t55888;
  double t55890;
  double t55891;
  double t55900;
  double t55880;
  double t56236;
  double t56237;
  double t56241;
  double t56242;
  double t56274;
  double t56319;
  double t56320;
  double t56403;
  double t56546;
  double t56560;
  double t56571;
  double t56610;
  double t56616;
  double t56624;
  double t56627;
  double t56628;
  double t56793;
  double t56817;
  double t56822;
  double t56868;
  double t56876;
  double t56888;
  double t56889;
  double t56925;
  double t56949;
  double t56961;
  double t56962;
  double t56966;
  double t57046;
  double t57050;
  double t57051;
  double t57052;
  double t57068;
  double t57086;
  double t57087;
  double t57090;
  double t57132;
  double t57133;
  double t57134;
  double t57135;
  double t57136;
  double t57138;
  double t57139;
  double t57140;
  double t57155;
  double t57156;
  double t57157;
  double t57162;
  double t57164;
  double t57168;
  double t57169;
  double t57171;
  double t57173;
  double t57201;
  double t57202;
  double t57204;
  double t57205;
  double t57207;
  double t57238;
  double t57255;
  double t57259;
  double t57312;
  double t57316;
  double t57317;
  double t57311;
  double t57331;
  double t57337;
  double t57339;
  double t57345;
  double t57346;
  double t57399;
  double t57400;
  double t57402;
  double t57408;
  double t57409;
  double t57410;
  double t57427;
  double t57428;
  double t57429;
  double t57431;
  double t57437;
  double t57438;
  double t57439;
  double t57443;
  double t57445;
  double t57447;
  double t57448;
  double t57450;
  double t57451;
  double t57452;
  double t57456;
  double t57493;
  double t57499;
  double t57526;
  double t57528;
  double t57529;
  double t57531;
  double t57532;
  double t57533;
  double t57539;
  double t57546;
  double t57560;
  double t57561;
  double t57589;
  double t57605;
  double t57635;
  double t57647;
  double t57536;
  double t57666;
  double t57667;
  double t57670;
  double t57671;
  double t57673;
  double t57676;
  double t57677;
  double t57686;
  double t57696;
  double t57699;
  double t57700;
  double t57703;
  double t57704;
  double t57709;
  double t57710;
  double t57712;
  double t57980;
  double t57981;
  double t57982;
  double t57984;
  double t57991;
  double t58057;
  double t58062;
  double t58076;
  double t57970;
  double t57971;
  double t57972;
  double t57985;
  double t57986;
  double t57988;
  double t58077;
  double t58097;
  double t58102;
  double t58112;
  double t58117;
  double t58122;
  double t58124;
  double t58156;
  double t58115;
  double t58179;
  double t58180;
  double t58181;
  double t58183;
  double t58184;
  double t58187;
  double t58188;
  double t58189;
  double t58201;
  double t58205;
  double t58209;
  double t58211;
  double t58212;
  double t58215;
  double t58216;
  double t58217;
  double t58288;
  double t58289;
  double t58290;
  double t58291;
  double t58293;
  double t58298;
  double t58299;
  double t58309;
  double t58315;
  double t58317;
  double t58322;
  double t58331;
  double t58332;
  double t58341;
  double t58349;
  double t58350;
  double t58355;
  double t58359;
  double t58361;
  double t58370;
  double t58371;
  double t58372;
  double t58374;
  double t58381;
  double t58389;
  double t58395;
  double t58397;
  double t58426;
  double t58427;
  double t58428;
  double t58429;
  double t58446;
  double t58458;
  double t58461;
  double t58469;
  double t58471;
  double t58487;
  double t58489;
  double t58496;
  double t58497;
  double t58502;
  double t58506;
  double t58507;
  double t58508;
  double t58557;
  double t58558;
  double t58565;
  double t58555;
  double t58568;
  double t58576;
  double t58580;
  double t58587;
  double t58597;
  double t58637;
  double t58639;
  double t58640;
  double t58648;
  double t58650;
  double t58651;
  t2095 = Sin(var1[3]);
  t1471 = Cos(var1[4]);
  t2637 = Cos(var1[5]);
  t3394 = Sin(var1[4]);
  t5598 = t2637*t2095*t3394;
  t6258 = Cos(var1[3]);
  t6378 = Sin(var1[5]);
  t6383 = t6258*t6378;
  t6384 = t5598 + t6383;
  t8725 = Sin(var1[13]);
  t8546 = Cos(var1[13]);
  t9014 = Cos(var1[18]);
  t9015 = -1.*t9014;
  t9023 = 1. + t9015;
  t8735 = t6258*t2637;
  t8736 = -1.*t2095*t3394*t6378;
  t8753 = t8735 + t8736;
  t9026 = Sin(var1[18]);
  t9724 = -0.499998895236*t9023;
  t10382 = 1. + t9724;
  t9603 = 0.707106*t9026*t6384;
  t11074 = Cos(var1[24]);
  t11083 = -1.*t11074;
  t11085 = 1. + t11083;
  t11089 = Sin(var1[24]);
  t11138 = -0.499998895236*t11085;
  t11147 = 1. + t11138;
  t8550 = -1.*t8546;
  t8566 = 1. + t8550;
  t8570 = -0.1*t8566*t1471*t2095;
  t8726 = -0.1*t8725*t6384;
  t8755 = t1471*t8725*t2095;
  t8783 = t8546*t6384;
  t8801 = t8755 + t8783;
  t8943 = -1.*t8546*t1471*t2095;
  t8944 = t8725*t6384;
  t8946 = t8943 + t8944;
  t11466 = Sin(var1[14]);
  t11383 = Cos(var1[14]);
  t9025 = 0.0175001277268923*t9023*t1471*t2095;
  t9452 = 0.0247489453163915*t9026*t6384;
  t9556 = -0.0175001277268923*t9023*t8753;
  t9602 = 0.499998895236*t9023*t1471*t2095;
  t10497 = t10382*t8753;
  t10788 = t9602 + t9603 + t10497;
  t11624 = Cos(var1[19]);
  t11707 = -1.*t11624;
  t11757 = 1. + t11707;
  t12000 = Sin(var1[19]);
  t10862 = -1.*t10382*t1471*t2095;
  t10883 = -0.499998895236*t9023*t8753;
  t10886 = t10862 + t9603 + t10883;
  t11003 = 0.707106*t1471*t9026*t2095;
  t11023 = -0.999997790472*t9023;
  t11024 = 1. + t11023;
  t11038 = t11024*t6384;
  t11040 = -0.707106*t9026*t8753;
  t11057 = t11003 + t11038 + t11040;
  t11088 = 0.0175001277268923*t11085*t1471*t2095;
  t11103 = 0.0247489453163915*t11089*t6384;
  t11107 = 0.0175001277268923*t11085*t8753;
  t11129 = -0.499998895236*t11085*t1471*t2095;
  t11131 = -0.707106*t11089*t6384;
  t11148 = t11147*t8753;
  t11149 = t11129 + t11131 + t11148;
  t12685 = Cos(var1[25]);
  t12748 = Sin(var1[25]);
  t11170 = -1.*t11147*t1471*t2095;
  t11171 = 0.707106*t11089*t6384;
  t11179 = 0.499998895236*t11085*t8753;
  t11183 = t11170 + t11171 + t11179;
  t11200 = 0.707106*t1471*t11089*t2095;
  t11201 = -0.999997790472*t11085;
  t11263 = 1. + t11201;
  t11354 = t11263*t6384;
  t11355 = 0.707106*t11089*t8753;
  t11359 = t11200 + t11354 + t11355;
  t11424 = -1.*t11383;
  t11425 = 1. + t11424;
  t11464 = -0.098*t11425*t8753;
  t11473 = -0.098*t11466*t8801;
  t11480 = t11466*t8753;
  t11484 = t11383*t8801;
  t11491 = t11480 + t11484;
  t19178 = Cos(var1[15]);
  t19188 = -1.*t19178;
  t19210 = 1. + t19188;
  t19379 = Sin(var1[15]);
  t11504 = t11383*t8753;
  t11505 = -1.*t11466*t8801;
  t11508 = t11504 + t11505;
  t11870 = 0.05*t11757;
  t12010 = -0.085*t12000;
  t12021 = t11870 + t12010;
  t12083 = t12021*t10788;
  t12100 = -0.085*t11757;
  t12117 = -0.05*t12000;
  t12145 = t12100 + t12117;
  t12177 = t12145*t10886;
  t12366 = -1.*t12000*t10788;
  t12373 = t11624*t10886;
  t12374 = t12366 + t12373;
  t12452 = t11624*t10788;
  t12574 = t12000*t10886;
  t12609 = t12452 + t12574;
  t20565 = Sin(var1[20]);
  t20730 = Cos(var1[20]);
  t12732 = -1. + t12685;
  t12734 = 0.05*t12732;
  t12822 = -0.085*t12748;
  t12841 = t12734 + t12822;
  t12842 = t12841*t11149;
  t12875 = -1.*t12685;
  t13052 = 1. + t12875;
  t13243 = -0.085*t13052;
  t13244 = 0.05*t12748;
  t13496 = t13243 + t13244;
  t13533 = t13496*t11183;
  t13572 = -1.*t12748*t11149;
  t13582 = t12685*t11183;
  t16570 = t13572 + t13582;
  t18091 = t12685*t11149;
  t18229 = t12748*t11183;
  t18411 = t18091 + t18229;
  t21357 = Sin(var1[26]);
  t21391 = Cos(var1[26]);
  t19280 = 0.1*t19210;
  t19405 = 0.113*t19379;
  t19488 = t19280 + t19405;
  t19510 = t19488*t8946;
  t19537 = -0.113*t19210;
  t19538 = 0.1*t19379;
  t19550 = t19537 + t19538;
  t19552 = t19550*t11508;
  t21731 = Cos(var1[16]);
  t21890 = -1.*t21731;
  t22000 = 1. + t21890;
  t22006 = Sin(var1[16]);
  t19553 = t19379*t8946;
  t19564 = t19178*t11508;
  t19675 = t19553 + t19564;
  t19713 = t19178*t8946;
  t19751 = -1.*t19379*t11508;
  t19758 = t19713 + t19751;
  t20638 = 0.085*t20565*t11057;
  t20775 = -1.*t20730;
  t20785 = 1. + t20775;
  t20832 = -0.085*t20785*t12374;
  t20964 = t20565*t11057;
  t21001 = t20730*t12374;
  t21071 = t20964 + t21001;
  t21117 = t20730*t11057;
  t21135 = -1.*t20565*t12374;
  t21222 = t21117 + t21135;
  t22554 = Sin(var1[21]);
  t22384 = Cos(var1[21]);
  t21359 = 0.085*t21357*t11359;
  t21395 = -1.*t21391;
  t21415 = 1. + t21395;
  t21433 = -0.085*t21415*t16570;
  t21510 = t21357*t11359;
  t21512 = t21391*t16570;
  t21619 = t21510 + t21512;
  t21647 = t21391*t11359;
  t21661 = -1.*t21357*t16570;
  t21669 = t21647 + t21661;
  t22957 = Sin(var1[27]);
  t22831 = Cos(var1[27]);
  t22003 = 0.105*t22000;
  t22020 = -0.113*t22006;
  t22030 = t22003 + t22020;
  t22031 = t22030*t11491;
  t22048 = -0.113*t22000;
  t22154 = -0.105*t22006;
  t22185 = t22048 + t22154;
  t22186 = t22185*t19675;
  t23279 = Cos(var1[17]);
  t23284 = -1.*t23279;
  t23288 = 1. + t23284;
  t23391 = Sin(var1[17]);
  t22196 = -1.*t22006*t11491;
  t22203 = t21731*t19675;
  t22204 = t22196 + t22203;
  t22295 = t21731*t11491;
  t22318 = t22006*t19675;
  t22321 = t22295 + t22318;
  t12621 = 0.05029*t12609;
  t22443 = -1.*t22384;
  t22478 = 1. + t22443;
  t22509 = -0.185*t22478*t21071;
  t22680 = 0.185*t22554*t21222;
  t22685 = -1.*t22554*t21071;
  t22689 = t22384*t21222;
  t22690 = t22685 + t22689;
  t22701 = t22384*t21071;
  t22713 = t22554*t21222;
  t22784 = t22701 + t22713;
  t23672 = Sin(var1[22]);
  t23753 = Cos(var1[22]);
  t18976 = -0.05029*t18411;
  t22843 = -1.*t22831;
  t22933 = 1. + t22843;
  t22942 = -0.185*t22933*t21619;
  t22959 = 0.185*t22957*t21669;
  t22963 = -1.*t22957*t21619;
  t23080 = t22831*t21669;
  t23126 = t22963 + t23080;
  t23176 = t22831*t21619;
  t23177 = t22957*t21669;
  t23185 = t23176 + t23177;
  t24121 = Sin(var1[28]);
  t24202 = Cos(var1[28]);
  t23701 = 0.2879*t23672*t22690;
  t23755 = -1.*t23753;
  t23761 = 1. + t23755;
  t23780 = -0.2879*t23761*t22784;
  t24444 = Cos(var1[23]);
  t24451 = -1.*t24444;
  t24459 = 1. + t24451;
  t24466 = Sin(var1[23]);
  t23781 = t23672*t22690;
  t23819 = t23753*t22784;
  t23848 = t23781 + t23819;
  t23875 = t23753*t22690;
  t23876 = -1.*t23672*t22784;
  t23898 = t23875 + t23876;
  t24177 = 0.2879*t24121*t23126;
  t24275 = -1.*t24202;
  t24305 = 1. + t24275;
  t24306 = -0.2879*t24305*t23185;
  t24800 = Cos(var1[29]);
  t25113 = Sin(var1[29]);
  t24311 = t24121*t23126;
  t24322 = t24202*t23185;
  t24331 = t24311 + t24322;
  t24343 = t24202*t23126;
  t24418 = -1.*t24121*t23185;
  t24420 = t24343 + t24418;
  t26247 = Cos(var1[6]);
  t26255 = Sin(var1[6]);
  t26292 = Cos(var1[7]);
  t26350 = t26247*t6384;
  t26422 = t8753*t26255;
  t26423 = t26350 + t26422;
  t26426 = Sin(var1[7]);
  t26707 = Cos(var1[8]);
  t26829 = Sin(var1[8]);
  t26728 = -1.*t26707;
  t26747 = 1. + t26728;
  t26753 = -0.1*t1471*t26747*t2095;
  t26838 = -0.1*t6384*t26829;
  t26839 = t26707*t6384;
  t26874 = t1471*t2095*t26829;
  t26938 = t26839 + t26874;
  t27009 = -1.*t1471*t26707*t2095;
  t27097 = t6384*t26829;
  t27185 = t27009 + t27097;
  t27270 = Sin(var1[9]);
  t27247 = Cos(var1[9]);
  t27249 = -1.*t27247;
  t27251 = 1. + t27249;
  t27269 = 0.098*t27251*t8753;
  t27272 = 0.098*t27270*t26938;
  t27303 = t27270*t8753;
  t27309 = t27247*t26938;
  t27327 = t27303 + t27309;
  t27412 = Cos(var1[10]);
  t27413 = -1.*t27412;
  t27417 = 1. + t27413;
  t27455 = Sin(var1[10]);
  t27346 = t27247*t8753;
  t27353 = -1.*t27270*t26938;
  t27365 = t27346 + t27353;
  t27418 = 0.1*t27417;
  t27459 = -0.113*t27455;
  t27475 = t27418 + t27459;
  t27524 = t27475*t27185;
  t27584 = 0.113*t27417;
  t27599 = 0.1*t27455;
  t27665 = t27584 + t27599;
  t27704 = t27665*t27365;
  t27837 = Cos(var1[11]);
  t27865 = -1.*t27837;
  t27871 = 1. + t27865;
  t27886 = Sin(var1[11]);
  t27713 = t27455*t27185;
  t27720 = t27412*t27365;
  t27755 = t27713 + t27720;
  t27790 = t27412*t27185;
  t27792 = -1.*t27455*t27365;
  t27793 = t27790 + t27792;
  t27874 = 0.105*t27871;
  t27890 = 0.113*t27886;
  t27894 = t27874 + t27890;
  t27910 = t27894*t27327;
  t27922 = 0.113*t27871;
  t27924 = -0.105*t27886;
  t27932 = t27922 + t27924;
  t28017 = t27932*t27755;
  t28141 = Cos(var1[12]);
  t28244 = -1.*t28141;
  t28437 = 1. + t28244;
  t28448 = Sin(var1[12]);
  t28033 = -1.*t27886*t27327;
  t28039 = t27837*t27755;
  t28040 = t28033 + t28039;
  t28057 = t27837*t27327;
  t28058 = t27886*t27755;
  t28064 = t28057 + t28058;
  t29204 = 0.1*t6258*t1471*t2637*t8725;
  t29236 = -0.1*t8566*t6258*t3394;
  t29264 = -1.*t6258*t1471*t2637*t8725;
  t29266 = -1.*t8546*t6258*t3394;
  t29352 = t29264 + t29266;
  t29901 = -1.*t8546*t6258*t1471*t2637;
  t29967 = t6258*t8725*t3394;
  t30138 = t29901 + t29967;
  t32210 = -0.707106*t6258*t1471*t2637*t9026;
  t31255 = -0.098*t11466*t30138;
  t31331 = -0.098*t11425*t6258*t1471*t6378;
  t31345 = -1.*t11466*t30138;
  t31350 = t11383*t6258*t1471*t6378;
  t31386 = t31345 + t31350;
  t31464 = t11383*t30138;
  t31881 = t6258*t1471*t11466*t6378;
  t31935 = t31464 + t31881;
  t32055 = -0.0247489453163915*t6258*t1471*t2637*t9026;
  t32176 = 0.0175001277268923*t9023*t6258*t3394;
  t32207 = -0.0175001277268923*t9023*t6258*t1471*t6378;
  t34324 = 0.499998895236*t9023*t6258*t3394;
  t34771 = t10382*t6258*t1471*t6378;
  t34882 = t32210 + t34324 + t34771;
  t34914 = -1.*t10382*t6258*t3394;
  t34994 = -0.499998895236*t9023*t6258*t1471*t6378;
  t35000 = t32210 + t34914 + t34994;
  t35169 = -1.*t11024*t6258*t1471*t2637;
  t35208 = 0.707106*t6258*t9026*t3394;
  t35269 = -0.707106*t6258*t1471*t9026*t6378;
  t35271 = t35169 + t35208 + t35269;
  t35558 = -0.0247489453163915*t6258*t1471*t2637*t11089;
  t35653 = 0.0175001277268923*t11085*t6258*t3394;
  t35691 = 0.0175001277268923*t11085*t6258*t1471*t6378;
  t35773 = 0.707106*t6258*t1471*t2637*t11089;
  t35781 = -0.499998895236*t11085*t6258*t3394;
  t35822 = t11147*t6258*t1471*t6378;
  t35912 = t35773 + t35781 + t35822;
  t36035 = -0.707106*t6258*t1471*t2637*t11089;
  t36082 = -1.*t11147*t6258*t3394;
  t36571 = 0.499998895236*t11085*t6258*t1471*t6378;
  t36706 = t36035 + t36082 + t36571;
  t36754 = -1.*t11263*t6258*t1471*t2637;
  t36826 = 0.707106*t6258*t11089*t3394;
  t36829 = 0.707106*t6258*t1471*t11089*t6378;
  t36885 = t36754 + t36826 + t36829;
  t37267 = t19488*t29352;
  t37297 = t19550*t31386;
  t37361 = t19379*t29352;
  t37369 = t19178*t31386;
  t37421 = t37361 + t37369;
  t37768 = t19178*t29352;
  t37829 = -1.*t19379*t31386;
  t37841 = t37768 + t37829;
  t37866 = t12021*t34882;
  t37875 = t12145*t35000;
  t37907 = -1.*t12000*t34882;
  t37914 = t11624*t35000;
  t37975 = t37907 + t37914;
  t38777 = t11624*t34882;
  t39044 = t12000*t35000;
  t39049 = t38777 + t39044;
  t39185 = t12841*t35912;
  t39186 = t13496*t36706;
  t39239 = -1.*t12748*t35912;
  t39241 = t12685*t36706;
  t39245 = t39239 + t39241;
  t39252 = t12685*t35912;
  t39291 = t12748*t36706;
  t39292 = t39252 + t39291;
  t39321 = t22030*t31935;
  t39363 = t22185*t37421;
  t23319 = 0.1*t23288;
  t23435 = 0.113*t23391;
  t23438 = t23319 + t23435;
  t23450 = -0.113*t23288;
  t23451 = 0.1*t23391;
  t23454 = t23450 + t23451;
  t39426 = -1.*t22006*t31935;
  t39443 = t21731*t37421;
  t39475 = t39426 + t39443;
  t39483 = t21731*t31935;
  t39505 = t22006*t37421;
  t39535 = t39483 + t39505;
  t39625 = 0.085*t20565*t35271;
  t39629 = -0.085*t20785*t37975;
  t39662 = t20565*t35271;
  t39695 = t20730*t37975;
  t39696 = t39662 + t39695;
  t39703 = t20730*t35271;
  t39747 = -1.*t20565*t37975;
  t39792 = t39703 + t39747;
  t39882 = 0.085*t21357*t36885;
  t39911 = -0.085*t21415*t39245;
  t39923 = t21357*t36885;
  t39924 = t21391*t39245;
  t39925 = t39923 + t39924;
  t39954 = t21391*t36885;
  t39992 = -1.*t21357*t39245;
  t39997 = t39954 + t39992;
  t39057 = 0.05029*t39049;
  t40219 = -0.185*t22478*t39696;
  t40220 = 0.185*t22554*t39792;
  t40222 = -1.*t22554*t39696;
  t40223 = t22384*t39792;
  t40224 = t40222 + t40223;
  t40227 = t22384*t39696;
  t40229 = t22554*t39792;
  t40230 = t40227 + t40229;
  t39293 = -0.05029*t39292;
  t40265 = -0.185*t22933*t39925;
  t40273 = 0.185*t22957*t39997;
  t40278 = -1.*t22957*t39925;
  t40280 = t22831*t39997;
  t40281 = t40278 + t40280;
  t40283 = t22831*t39925;
  t40289 = t22957*t39997;
  t40297 = t40283 + t40289;
  t24463 = 0.05*t24459;
  t24483 = -0.2879*t24466;
  t24570 = t24463 + t24483;
  t40417 = 0.2879*t23672*t40224;
  t40418 = -0.2879*t23761*t40230;
  t24573 = -0.2879*t24459;
  t24575 = -0.05*t24466;
  t24583 = t24573 + t24575;
  t40435 = t23672*t40224;
  t40442 = t23753*t40230;
  t40446 = t40435 + t40442;
  t40460 = t23753*t40224;
  t40465 = -1.*t23672*t40230;
  t40469 = t40460 + t40465;
  t24850 = -1. + t24800;
  t25036 = 0.05*t24850;
  t25158 = -0.2879*t25113;
  t25344 = t25036 + t25158;
  t41542 = 0.2879*t24121*t40281;
  t41544 = -0.2879*t24305*t40297;
  t25553 = -1.*t24800;
  t25554 = 1. + t25553;
  t25559 = -0.2879*t25554;
  t25684 = 0.05*t25113;
  t25686 = t25559 + t25684;
  t41564 = t24121*t40281;
  t41927 = t24202*t40297;
  t41928 = t41564 + t41927;
  t43009 = t24202*t40281;
  t43025 = -1.*t24121*t40297;
  t43100 = t43009 + t43025;
  t26293 = -1.*t26292;
  t26296 = 1. + t26293;
  t49631 = -1.*t6258*t1471*t2637*t26247;
  t49646 = t6258*t1471*t6378*t26255;
  t49665 = t49631 + t49646;
  t49804 = -0.1*t6258*t26747*t3394;
  t49808 = 0.1*t6258*t1471*t2637*t26829;
  t49810 = -1.*t6258*t26707*t3394;
  t49814 = -1.*t6258*t1471*t2637*t26829;
  t49819 = t49810 + t49814;
  t49822 = -1.*t6258*t1471*t2637*t26707;
  t49826 = t6258*t3394*t26829;
  t49827 = t49822 + t49826;
  t49835 = 0.098*t27251*t6258*t1471*t6378;
  t49837 = 0.098*t27270*t49827;
  t49838 = t6258*t1471*t27270*t6378;
  t49859 = t27247*t49827;
  t49864 = t49838 + t49859;
  t49872 = t27247*t6258*t1471*t6378;
  t49877 = -1.*t27270*t49827;
  t49878 = t49872 + t49877;
  t49902 = t27475*t49819;
  t49906 = t27665*t49878;
  t49909 = t27455*t49819;
  t49910 = t27412*t49878;
  t49914 = t49909 + t49910;
  t49916 = t27412*t49819;
  t49918 = -1.*t27455*t49878;
  t49920 = t49916 + t49918;
  t49937 = t27894*t49864;
  t49938 = t27932*t49914;
  t28446 = 0.1*t28437;
  t28527 = -0.113*t28448;
  t28545 = t28446 + t28527;
  t28588 = 0.113*t28437;
  t28605 = 0.1*t28448;
  t28622 = t28588 + t28605;
  t49941 = -1.*t27886*t49864;
  t49944 = t27837*t49914;
  t49950 = t49941 + t49944;
  t49952 = t27837*t49864;
  t49954 = t27886*t49914;
  t49955 = t49952 + t49954;
  t49989 = t2637*t2095;
  t49990 = t6258*t3394*t6378;
  t49991 = t49989 + t49990;
  t49993 = t6258*t2637*t3394;
  t49994 = -1.*t2095*t6378;
  t49995 = t49993 + t49994;
  t50078 = 0.707106*t9026*t49991;
  t50021 = -0.098*t11425*t49995;
  t50023 = -0.098*t8546*t11466*t49991;
  t50024 = t11466*t49995;
  t50025 = t8546*t11383*t49991;
  t50027 = t50024 + t50025;
  t50032 = t11383*t49995;
  t50036 = -1.*t8546*t11466*t49991;
  t50038 = t50032 + t50036;
  t50042 = -0.0175001277268923*t9023*t49995;
  t50043 = 0.0247489453163915*t9026*t49991;
  t50057 = -0.707106*t9026*t49995;
  t50069 = t11024*t49991;
  t50071 = t50057 + t50069;
  t50074 = t10382*t49995;
  t50083 = t50074 + t50078;
  t50085 = -0.499998895236*t9023*t49995;
  t50087 = t50085 + t50078;
  t50093 = 0.0175001277268923*t11085*t49995;
  t50094 = 0.0247489453163915*t11089*t49991;
  t50097 = 0.707106*t11089*t49995;
  t50098 = t11263*t49991;
  t50099 = t50097 + t50098;
  t50101 = t11147*t49995;
  t50103 = -0.707106*t11089*t49991;
  t50104 = t50101 + t50103;
  t50116 = 0.499998895236*t11085*t49995;
  t50120 = 0.707106*t11089*t49991;
  t50121 = t50116 + t50120;
  t50125 = -0.1*t8725*t49991;
  t50126 = t8725*t19488*t49991;
  t50131 = t19550*t50038;
  t50135 = t8725*t19379*t49991;
  t50136 = t19178*t50038;
  t50137 = t50135 + t50136;
  t50142 = t19178*t8725*t49991;
  t50146 = -1.*t19379*t50038;
  t50147 = t50142 + t50146;
  t50155 = t12021*t50083;
  t50160 = t12145*t50087;
  t50161 = -1.*t12000*t50083;
  t50162 = t11624*t50087;
  t50164 = t50161 + t50162;
  t50166 = t11624*t50083;
  t50167 = t12000*t50087;
  t50168 = t50166 + t50167;
  t50175 = t12841*t50104;
  t50176 = t13496*t50121;
  t50177 = -1.*t12748*t50104;
  t50178 = t12685*t50121;
  t50179 = t50177 + t50178;
  t50209 = t12685*t50104;
  t50210 = t12748*t50121;
  t50214 = t50209 + t50210;
  t50218 = t22030*t50027;
  t50219 = t22185*t50137;
  t50222 = -1.*t22006*t50027;
  t50223 = t21731*t50137;
  t50224 = t50222 + t50223;
  t50230 = t21731*t50027;
  t50235 = t22006*t50137;
  t50236 = t50230 + t50235;
  t50242 = 0.085*t20565*t50071;
  t50243 = -0.085*t20785*t50164;
  t50245 = t20565*t50071;
  t50246 = t20730*t50164;
  t50248 = t50245 + t50246;
  t50250 = t20730*t50071;
  t50252 = -1.*t20565*t50164;
  t50253 = t50250 + t50252;
  t50261 = 0.085*t21357*t50099;
  t50262 = -0.085*t21415*t50179;
  t50271 = t21357*t50099;
  t50276 = t21391*t50179;
  t50277 = t50271 + t50276;
  t50279 = t21391*t50099;
  t50280 = -1.*t21357*t50179;
  t50281 = t50279 + t50280;
  t50170 = 0.05029*t50168;
  t50320 = -0.185*t22478*t50248;
  t50324 = 0.185*t22554*t50253;
  t50325 = -1.*t22554*t50248;
  t50326 = t22384*t50253;
  t50327 = t50325 + t50326;
  t50331 = t22384*t50248;
  t50332 = t22554*t50253;
  t50333 = t50331 + t50332;
  t50215 = -0.05029*t50214;
  t50360 = -0.185*t22933*t50277;
  t50361 = 0.185*t22957*t50281;
  t50372 = -1.*t22957*t50277;
  t50376 = t22831*t50281;
  t50383 = t50372 + t50376;
  t50385 = t22831*t50277;
  t50388 = t22957*t50281;
  t50389 = t50385 + t50388;
  t50397 = 0.2879*t23672*t50327;
  t50401 = -0.2879*t23761*t50333;
  t50404 = t23672*t50327;
  t50405 = t23753*t50333;
  t50406 = t50404 + t50405;
  t50410 = t23753*t50327;
  t50411 = -1.*t23672*t50333;
  t50415 = t50410 + t50411;
  t50420 = 0.2879*t24121*t50383;
  t50421 = -0.2879*t24305*t50389;
  t50422 = t24121*t50383;
  t50468 = t24202*t50389;
  t50469 = t50422 + t50468;
  t50499 = t24202*t50383;
  t50500 = -1.*t24121*t50389;
  t50505 = t50499 + t50500;
  t50615 = t26247*t49991;
  t50616 = t49995*t26255;
  t50617 = t50615 + t50616;
  t50636 = 0.098*t27251*t49995;
  t50660 = 0.098*t26707*t27270*t49991;
  t50661 = t27270*t49995;
  t50662 = t27247*t26707*t49991;
  t50663 = t50661 + t50662;
  t50666 = t27247*t49995;
  t50667 = -1.*t26707*t27270*t49991;
  t50668 = t50666 + t50667;
  t50695 = t27665*t50668;
  t50696 = -0.1*t49991*t26829;
  t50697 = t27475*t49991*t26829;
  t50698 = -1.*t27455*t50668;
  t50699 = t27412*t49991*t26829;
  t50700 = t50698 + t50699;
  t50711 = t27412*t50668;
  t50715 = t27455*t49991*t26829;
  t50716 = t50711 + t50715;
  t50739 = t27894*t50663;
  t50741 = t27932*t50716;
  t50744 = -1.*t27886*t50663;
  t50747 = t27837*t50716;
  t50749 = t50744 + t50747;
  t50755 = t27837*t50663;
  t50756 = t27886*t50716;
  t50760 = t50755 + t50756;
  t50585 = -1.*t26247*t49991;
  t50813 = -1.*t6258*t2637*t3394;
  t50815 = t2095*t6378;
  t50816 = t50813 + t50815;
  t50826 = -1.*t50816*t26255;
  t50828 = t50615 + t50826;
  t50846 = t26247*t50816;
  t50847 = t49991*t26255;
  t50848 = t50846 + t50847;
  t50874 = -0.1*t26707*t50816;
  t50875 = 0.1*t6258*t1471*t26829;
  t50876 = t26707*t50816;
  t50877 = -1.*t6258*t1471*t26829;
  t50878 = t50876 + t50877;
  t50880 = -1.*t6258*t1471*t26707;
  t50881 = -1.*t50816*t26829;
  t50882 = t50880 + t50881;
  t50893 = t27475*t50878;
  t50896 = 0.098*t27270*t50882;
  t50897 = -1.*t27270*t27665*t50882;
  t50898 = t27455*t50878;
  t50899 = -1.*t27412*t27270*t50882;
  t50900 = t50898 + t50899;
  t50905 = t27412*t50878;
  t50906 = t27270*t27455*t50882;
  t50907 = t50905 + t50906;
  t50911 = t27247*t27894*t50882;
  t50912 = t27932*t50900;
  t50914 = -1.*t27247*t27886*t50882;
  t50917 = t27837*t50900;
  t50920 = t50914 + t50917;
  t50922 = t27247*t27837*t50882;
  t50923 = t27886*t50900;
  t50924 = t50922 + t50923;
  t50960 = 0.098*t27270*t49991;
  t50961 = 0.098*t27247*t50878;
  t50967 = -1.*t27270*t49991;
  t50969 = -1.*t27247*t50878;
  t50973 = t50967 + t50969;
  t50995 = t27247*t49991;
  t51001 = -1.*t27270*t50878;
  t51003 = t50995 + t51001;
  t51008 = t27665*t50973;
  t51015 = t27412*t27932*t50973;
  t51016 = t27894*t51003;
  t51018 = t27412*t27886*t50973;
  t51019 = t27837*t51003;
  t51020 = t51018 + t51019;
  t51023 = t27412*t27837*t50973;
  t51024 = -1.*t27886*t51003;
  t51025 = t51023 + t51024;
  t51053 = t6258*t1471*t26707;
  t51054 = t50816*t26829;
  t51055 = t51053 + t51054;
  t51048 = -0.113*t27412;
  t51049 = t51048 + t27599;
  t51057 = t51049*t51055;
  t51058 = 0.1*t27412;
  t51059 = 0.113*t27455;
  t51060 = t51058 + t51059;
  t51062 = t51060*t51003;
  t51063 = -1.*t27455*t51055;
  t51064 = -1.*t27412*t51003;
  t51065 = t51063 + t51064;
  t51068 = t27412*t51055;
  t51069 = -1.*t27455*t51003;
  t51070 = t51068 + t51069;
  t51083 = t27932*t51070;
  t51163 = t27270*t49991;
  t51164 = t27247*t50878;
  t51165 = t51163 + t51164;
  t51170 = t27455*t51055;
  t51171 = t27412*t51003;
  t51172 = t51170 + t51171;
  t51149 = 0.113*t27837;
  t51151 = 0.105*t27886;
  t51158 = t51149 + t51151;
  t51166 = t51158*t51165;
  t51167 = -0.105*t27837;
  t51168 = t51167 + t27890;
  t51173 = t51168*t51172;
  t51174 = -1.*t27886*t51165;
  t51175 = t27837*t51172;
  t51176 = t51174 + t51175;
  t51179 = -1.*t27837*t51165;
  t51180 = -1.*t27886*t51172;
  t51181 = t51179 + t51180;
  t51218 = 0.1*t6258*t1471*t8725;
  t51219 = -0.1*t8546*t50816;
  t51220 = -1.*t6258*t1471*t8725;
  t51221 = t8546*t50816;
  t51223 = t51220 + t51221;
  t51225 = -1.*t8546*t6258*t1471;
  t51227 = -1.*t8725*t50816;
  t51228 = t51225 + t51227;
  t51263 = t19488*t51223;
  t51274 = -0.098*t11466*t51228;
  t51286 = -1.*t11466*t19550*t51228;
  t51287 = t19379*t51223;
  t51291 = -1.*t19178*t11466*t51228;
  t51292 = t51287 + t51291;
  t51311 = t19178*t51223;
  t51312 = t11466*t19379*t51228;
  t51313 = t51311 + t51312;
  t51318 = t11383*t22030*t51228;
  t51319 = t22185*t51292;
  t51321 = -1.*t11383*t22006*t51228;
  t51322 = t21731*t51292;
  t51323 = t51321 + t51322;
  t51326 = t11383*t21731*t51228;
  t51327 = t22006*t51292;
  t51328 = t51326 + t51327;
  t51355 = -0.098*t11466*t49991;
  t51356 = -0.098*t11383*t51223;
  t51357 = -1.*t11466*t49991;
  t51359 = -1.*t11383*t51223;
  t51360 = t51357 + t51359;
  t51362 = t11383*t49991;
  t51364 = -1.*t11466*t51223;
  t51365 = t51362 + t51364;
  t51405 = t19550*t51360;
  t51443 = t19178*t22185*t51360;
  t51444 = t22030*t51365;
  t51445 = t19178*t22006*t51360;
  t51447 = t21731*t51365;
  t51448 = t51445 + t51447;
  t51451 = t19178*t21731*t51360;
  t51452 = -1.*t22006*t51365;
  t51453 = t51451 + t51452;
  t51561 = t8546*t6258*t1471;
  t51587 = t8725*t50816;
  t51589 = t51561 + t51587;
  t51558 = 0.113*t19178;
  t51559 = t51558 + t19538;
  t51595 = t51559*t51589;
  t51598 = 0.1*t19178;
  t51602 = -0.113*t19379;
  t51603 = t51598 + t51602;
  t51610 = t51603*t51365;
  t51619 = -1.*t19379*t51589;
  t51625 = -1.*t19178*t51365;
  t51626 = t51619 + t51625;
  t51629 = t19178*t51589;
  t51630 = -1.*t19379*t51365;
  t51632 = t51629 + t51630;
  t51650 = t22185*t51632;
  t51697 = t11466*t49991;
  t51700 = t11383*t51223;
  t51701 = t51697 + t51700;
  t51716 = t19379*t51589;
  t51724 = t19178*t51365;
  t51725 = t51716 + t51724;
  t51694 = -0.113*t21731;
  t51695 = 0.105*t22006;
  t51696 = t51694 + t51695;
  t51713 = t51696*t51701;
  t51714 = -0.105*t21731;
  t51715 = t51714 + t22020;
  t51726 = t51715*t51725;
  t51728 = -1.*t22006*t51701;
  t51730 = t21731*t51725;
  t51731 = t51728 + t51730;
  t51733 = -1.*t21731*t51701;
  t51741 = -1.*t22006*t51725;
  t51745 = t51733 + t51741;
  t51826 = -0.0175001277268923*t6258*t1471*t9026;
  t51828 = 0.0247489453163915*t9014*t50816;
  t51829 = -0.0175001277268923*t9026*t49991;
  t51840 = -0.707106*t9014*t6258*t1471;
  t51841 = -0.999997790472*t9026*t50816;
  t51842 = -0.707106*t9014*t49991;
  t51843 = t51840 + t51841 + t51842;
  t51845 = -0.499998895236*t6258*t1471*t9026;
  t51853 = 0.707106*t9014*t50816;
  t51854 = -0.499998895236*t9026*t49991;
  t51855 = t51845 + t51853 + t51854;
  t51915 = t11624*t51855;
  t51871 = t12021*t51855;
  t51912 = t12145*t51855;
  t51916 = -1.*t12000*t51855;
  t51917 = t51915 + t51916;
  t51938 = t12000*t51855;
  t51950 = t51915 + t51938;
  t51962 = 0.085*t20565*t51843;
  t51963 = -0.085*t20785*t51917;
  t51976 = t20565*t51843;
  t51977 = t20730*t51917;
  t52010 = t51976 + t51977;
  t52013 = t20730*t51843;
  t52016 = -1.*t20565*t51917;
  t52017 = t52013 + t52016;
  t51959 = 0.05029*t51950;
  t52047 = -0.185*t22478*t52010;
  t52048 = 0.185*t22554*t52017;
  t52059 = -1.*t22554*t52010;
  t52060 = t22384*t52017;
  t52061 = t52059 + t52060;
  t52063 = t22384*t52010;
  t52064 = t22554*t52017;
  t52107 = t52063 + t52064;
  t52120 = 0.2879*t23672*t52061;
  t52122 = -0.2879*t23761*t52107;
  t52123 = t23672*t52061;
  t52124 = t23753*t52107;
  t52126 = t52123 + t52124;
  t52128 = t23753*t52061;
  t52129 = -1.*t23672*t52107;
  t52130 = t52128 + t52129;
  t52282 = 0.707106*t9026*t50816;
  t52279 = -0.499998895236*t9023*t6258*t1471;
  t52288 = t10382*t49991;
  t55408 = t52279 + t52282 + t52288;
  t55521 = t10382*t6258*t1471;
  t55633 = -0.499998895236*t9023*t49991;
  t55735 = t55521 + t52282 + t55633;
  t52216 = -0.085*t11624;
  t52217 = 0.05*t12000;
  t52278 = t52216 + t52217;
  t55409 = t52278*t55408;
  t55410 = -0.05*t11624;
  t55457 = t55410 + t12010;
  t55785 = t55457*t55735;
  t55798 = -1.*t12000*t55408;
  t55869 = t11624*t55735;
  t55873 = t55798 + t55869;
  t55888 = -1.*t11624*t55408;
  t55890 = -1.*t12000*t55735;
  t55891 = t55888 + t55890;
  t55900 = -0.085*t20785*t55891;
  t55880 = 0.05029*t55873;
  t56236 = -0.185*t20730*t22478*t55891;
  t56237 = -0.185*t20565*t22554*t55891;
  t56241 = -1.*t22384*t20565*t55891;
  t56242 = -1.*t20730*t22554*t55891;
  t56274 = t56241 + t56242;
  t56319 = t20730*t22384*t55891;
  t56320 = -1.*t20565*t22554*t55891;
  t56403 = t56319 + t56320;
  t56546 = 0.2879*t23672*t56274;
  t56560 = -0.2879*t23761*t56403;
  t56571 = t23672*t56274;
  t56610 = t23753*t56403;
  t56616 = t56571 + t56610;
  t56624 = t23753*t56274;
  t56627 = -1.*t23672*t56403;
  t56628 = t56624 + t56627;
  t56793 = -0.707106*t6258*t1471*t9026;
  t56817 = t11024*t50816;
  t56822 = -0.707106*t9026*t49991;
  t56868 = t56793 + t56817 + t56822;
  t56876 = 0.085*t20730*t56868;
  t56888 = -0.085*t20565*t55873;
  t56889 = -1.*t20565*t56868;
  t56925 = -1.*t20730*t55873;
  t56949 = t56889 + t56925;
  t56961 = t20730*t56868;
  t56962 = -1.*t20565*t55873;
  t56966 = t56961 + t56962;
  t57046 = 0.185*t22554*t56949;
  t57050 = -0.185*t22478*t56966;
  t57051 = t22554*t56949;
  t57052 = t22384*t56966;
  t57068 = t57051 + t57052;
  t57086 = t22384*t56949;
  t57087 = -1.*t22554*t56966;
  t57090 = t57086 + t57087;
  t57132 = -0.2879*t23761*t57068;
  t57133 = 0.2879*t23672*t57090;
  t57134 = -1.*t23672*t57068;
  t57135 = t23753*t57090;
  t57136 = t57134 + t57135;
  t57138 = t23753*t57068;
  t57139 = t23672*t57090;
  t57140 = t57138 + t57139;
  t57155 = t20565*t56868;
  t57156 = t20730*t55873;
  t57157 = t57155 + t57156;
  t57162 = -0.185*t22554*t57157;
  t57164 = 0.185*t22384*t56966;
  t57168 = -1.*t22554*t57157;
  t57169 = t57168 + t57052;
  t57171 = -1.*t22384*t57157;
  t57173 = t57171 + t57087;
  t57201 = -0.2879*t23761*t57169;
  t57202 = 0.2879*t23672*t57173;
  t57204 = -1.*t23672*t57169;
  t57205 = t23753*t57173;
  t57207 = t57204 + t57205;
  t57238 = t23753*t57169;
  t57255 = t23672*t57173;
  t57259 = t57238 + t57255;
  t57312 = t22384*t57157;
  t57316 = t22554*t56966;
  t57317 = t57312 + t57316;
  t57311 = 0.2879*t23753*t57169;
  t57331 = -0.2879*t23672*t57317;
  t57337 = -1.*t23753*t57317;
  t57339 = t57204 + t57337;
  t57345 = -1.*t23672*t57317;
  t57346 = t57238 + t57345;
  t57399 = t11624*t55408;
  t57400 = t12000*t55735;
  t57402 = t57399 + t57400;
  t57408 = t23672*t57169;
  t57409 = t23753*t57317;
  t57410 = t57408 + t57409;
  t57427 = -0.0175001277268923*t6258*t1471*t11089;
  t57428 = 0.0247489453163915*t11074*t50816;
  t57429 = 0.0175001277268923*t11089*t49991;
  t57431 = -0.707106*t11074*t6258*t1471;
  t57437 = -0.999997790472*t11089*t50816;
  t57438 = 0.707106*t11074*t49991;
  t57439 = t57431 + t57437 + t57438;
  t57443 = 0.499998895236*t6258*t1471*t11089;
  t57445 = -0.707106*t11074*t50816;
  t57447 = -0.499998895236*t11089*t49991;
  t57448 = t57443 + t57445 + t57447;
  t57450 = -0.499998895236*t6258*t1471*t11089;
  t57451 = 0.707106*t11074*t50816;
  t57452 = 0.499998895236*t11089*t49991;
  t57456 = t57450 + t57451 + t57452;
  t57493 = t12841*t57448;
  t57499 = t13496*t57456;
  t57526 = -1.*t12748*t57448;
  t57528 = t12685*t57456;
  t57529 = t57526 + t57528;
  t57531 = t12685*t57448;
  t57532 = t12748*t57456;
  t57533 = t57531 + t57532;
  t57539 = 0.085*t21357*t57439;
  t57546 = -0.085*t21415*t57529;
  t57560 = t21357*t57439;
  t57561 = t21391*t57529;
  t57589 = t57560 + t57561;
  t57605 = t21391*t57439;
  t57635 = -1.*t21357*t57529;
  t57647 = t57605 + t57635;
  t57536 = -0.05029*t57533;
  t57666 = -0.185*t22933*t57589;
  t57667 = 0.185*t22957*t57647;
  t57670 = -1.*t22957*t57589;
  t57671 = t22831*t57647;
  t57673 = t57670 + t57671;
  t57676 = t22831*t57589;
  t57677 = t22957*t57647;
  t57686 = t57676 + t57677;
  t57696 = 0.2879*t24121*t57673;
  t57699 = -0.2879*t24305*t57686;
  t57700 = t24121*t57673;
  t57703 = t24202*t57686;
  t57704 = t57700 + t57703;
  t57709 = t24202*t57673;
  t57710 = -1.*t24121*t57686;
  t57712 = t57709 + t57710;
  t57980 = 0.499998895236*t11085*t6258*t1471;
  t57981 = -0.707106*t11089*t50816;
  t57982 = t11147*t49991;
  t57984 = t57980 + t57981 + t57982;
  t57991 = t11147*t6258*t1471;
  t58057 = 0.707106*t11089*t50816;
  t58062 = 0.499998895236*t11085*t49991;
  t58076 = t57991 + t58057 + t58062;
  t57970 = -0.085*t12685;
  t57971 = -0.05*t12748;
  t57972 = t57970 + t57971;
  t57985 = t57972*t57984;
  t57986 = 0.05*t12685;
  t57988 = t57986 + t12822;
  t58077 = t57988*t58076;
  t58097 = -1.*t12748*t57984;
  t58102 = t12685*t58076;
  t58112 = t58097 + t58102;
  t58117 = -1.*t12685*t57984;
  t58122 = -1.*t12748*t58076;
  t58124 = t58117 + t58122;
  t58156 = -0.085*t21415*t58124;
  t58115 = -0.05029*t58112;
  t58179 = -0.185*t21391*t22933*t58124;
  t58180 = -0.185*t21357*t22957*t58124;
  t58181 = -1.*t22831*t21357*t58124;
  t58183 = -1.*t21391*t22957*t58124;
  t58184 = t58181 + t58183;
  t58187 = t21391*t22831*t58124;
  t58188 = -1.*t21357*t22957*t58124;
  t58189 = t58187 + t58188;
  t58201 = 0.2879*t24121*t58184;
  t58205 = -0.2879*t24305*t58189;
  t58209 = t24121*t58184;
  t58211 = t24202*t58189;
  t58212 = t58209 + t58211;
  t58215 = t24202*t58184;
  t58216 = -1.*t24121*t58189;
  t58217 = t58215 + t58216;
  t58288 = -0.707106*t6258*t1471*t11089;
  t58289 = t11263*t50816;
  t58290 = t58288 + t58289 + t50120;
  t58291 = 0.085*t21391*t58290;
  t58293 = -0.085*t21357*t58112;
  t58298 = -1.*t21357*t58290;
  t58299 = -1.*t21391*t58112;
  t58309 = t58298 + t58299;
  t58315 = t21391*t58290;
  t58317 = -1.*t21357*t58112;
  t58322 = t58315 + t58317;
  t58331 = 0.185*t22957*t58309;
  t58332 = -0.185*t22933*t58322;
  t58341 = t22957*t58309;
  t58349 = t22831*t58322;
  t58350 = t58341 + t58349;
  t58355 = t22831*t58309;
  t58359 = -1.*t22957*t58322;
  t58361 = t58355 + t58359;
  t58370 = -0.2879*t24305*t58350;
  t58371 = 0.2879*t24121*t58361;
  t58372 = -1.*t24121*t58350;
  t58374 = t24202*t58361;
  t58381 = t58372 + t58374;
  t58389 = t24202*t58350;
  t58395 = t24121*t58361;
  t58397 = t58389 + t58395;
  t58426 = t21357*t58290;
  t58427 = t21391*t58112;
  t58428 = t58426 + t58427;
  t58429 = -0.185*t22957*t58428;
  t58446 = 0.185*t22831*t58322;
  t58458 = -1.*t22957*t58428;
  t58461 = t58458 + t58349;
  t58469 = -1.*t22831*t58428;
  t58471 = t58469 + t58359;
  t58487 = -0.2879*t24305*t58461;
  t58489 = 0.2879*t24121*t58471;
  t58496 = -1.*t24121*t58461;
  t58497 = t24202*t58471;
  t58502 = t58496 + t58497;
  t58506 = t24202*t58461;
  t58507 = t24121*t58471;
  t58508 = t58506 + t58507;
  t58557 = t22831*t58428;
  t58558 = t22957*t58322;
  t58565 = t58557 + t58558;
  t58555 = 0.2879*t24202*t58461;
  t58568 = -0.2879*t24121*t58565;
  t58576 = -1.*t24202*t58565;
  t58580 = t58496 + t58576;
  t58587 = -1.*t24121*t58565;
  t58597 = t58506 + t58587;
  t58637 = t12685*t57984;
  t58639 = t12748*t58076;
  t58640 = t58637 + t58639;
  t58648 = t24121*t58461;
  t58650 = t24202*t58565;
  t58651 = t58648 + t58650;
  p_output1[0]=0;
  p_output1[1]=0;
  p_output1[2]=-52.0454835;
  p_output1[3]=-0.6848361000000001*(t11088 + t11103 + t11107 - 0.03886*t11149 - 0.05839*t11183 - 0.00781*t11359) - 1.3785992999999999*(t11088 + t11103 + t11107 - 0.01549*t11359 + t12842 + t13533 - 0.09015*t16570 + t18976) - 3.8227608000000006*(t11088 + t11103 + t11107 + t12842 + t13533 - 0.05221*t18411 + t21359 + t21433 - 0.13873*t21619 + 0.00138*t21669) - 2.9569302000000004*(t11088 + t11103 + t11107 + t12842 + t13533 - 0.05225*t18411 + t21359 + t21433 + t22942 + t22959 + 0.00453*t23126 - 0.23436*t23185) - 1.3161096*(t11088 + t11103 + t11107 + t12842 + t13533 + t18976 + t21359 + t21433 + t22942 + t22959 + t24177 + t24306 - 0.28105*t24331 + 0.00045*t24420) - 1.6857504*(t11088 + t11103 + t11107 + t12842 + t13533 + t21359 + t21433 + t22942 + t22959 + t24177 + t24306 + 0.02542*t24420 - 0.32029*(t24331*t24800 - 1.*t18411*t25113) - 0.0533*(t18411*t24800 + t24331*t25113) + t18411*t25344 + t24331*t25686) - 5.938287300000001*(-0.1265*t1471*t2095*t26296 - 0.1265*t26423*t26426 - 0.00112*(t26292*t26423 + t1471*t2095*t26426) + 0.17908*(-1.*t1471*t2095*t26292 + t26423*t26426)) - 1.5477237*(t26753 + t26838 + 0.1033*t27185 + t27269 + t27272 + 0.02455*t27327 + 0.10363*t27365) - 0.6359823*(t26753 + t26838 + t27269 + t27272 + 0.07756*t27327 + t27524 + t27704 + 0.113*t27755 + 0.09986*t27793) - 0.7613541*(t26753 + t26838 + t27269 + t27272 + t27524 + t27704 + 0.10076*t27793 + t27910 + t28017 + 0.11581*t28040 + 0.13056*t28064) - 1.8180873*(t26753 + t26838 + t27269 + t27272 + t27524 + t27704 + t27910 + t28017 + 0.19529*t28064 + 0.11212*(t28040*t28141 + t27793*t28448) + 0.10308*(t27793*t28141 - 1.*t28040*t28448) + t27793*t28545 + t28040*t28622) - 10.2961836*(-0.04342*t1471*t2095 - 0.00413*t6384) - 0.6359823*(t11464 + t11473 + 0.07756*t11491 + t19510 + t19552 - 0.113*t19675 + 0.09986*t19758 + t8570 + t8726) - 0.7613541*(t11464 + t11473 + t19510 + t19552 + 0.10076*t19758 + t22031 + t22186 - 0.11581*t22204 + 0.13056*t22321 + t8570 + t8726) - 1.8180873*(t11464 + t11473 + t19510 + t19552 + t22031 + t22186 + 0.19529*t22321 - 0.11212*(t22204*t23279 + t19758*t23391) + 0.10308*(t19758*t23279 - 1.*t22204*t23391) + t19758*t23438 + t22204*t23454 + t8570 + t8726) - 0.9127224*(t26753 + t26838 - 0.00165*t26938 + 0.10014*t27185 + 0.07137*t8753) - 0.7693002000000001*(-0.09908*t1471*t2095 + 1.e-5*(-1.*t26247*t6384 - 1.*t26255*t8753)) - 0.9127224*(t8570 + t8726 - 0.07137*t8753 - 0.00165*t8801 + 0.10014*t8946) - 1.5477237*(t11464 + t11473 + 0.02455*t11491 - 0.10363*t11508 + t8570 + t8726 + 0.1033*t8946) - 0.6848361000000001*(0.03886*t10788 - 0.05839*t10886 - 0.00781*t11057 + t9025 + t9452 + t9556) - 1.3785992999999999*(-0.01549*t11057 + t12083 + t12177 - 0.09015*t12374 + t12621 + t9025 + t9452 + t9556) - 3.8227608000000006*(t12083 + t12177 + 0.05221*t12609 + t20638 + t20832 - 0.13873*t21071 + 0.00138*t21222 + t9025 + t9452 + t9556) - 2.9569302000000004*(t12083 + t12177 + 0.05225*t12609 + t20638 + t20832 + t22509 + t22680 + 0.00453*t22690 - 0.23436*t22784 + t9025 + t9452 + t9556) - 1.3161096*(t12083 + t12177 + t12621 + t20638 + t20832 + t22509 + t22680 + t23701 + t23780 - 0.28105*t23848 + 0.00045*t23898 + t9025 + t9452 + t9556) - 1.6857504*(t12083 + t12177 + t20638 + t20832 + t22509 + t22680 + t23701 + t23780 + 0.02542*t23898 - 0.32029*(t23848*t24444 - 1.*t12609*t24466) + 0.0533*(t12609*t24444 + t23848*t24466) + t12609*t24570 + t23848*t24583 + t9025 + t9452 + t9556);
  p_output1[4]=-1.5477237*(t29204 + t29236 + 0.1033*t29352 + t31255 + t31331 - 0.10363*t31386 + 0.02455*t31935) - 0.6848361000000001*(t32055 + t32176 + t32207 + 0.03886*t34882 - 0.05839*t35000 - 0.00781*t35271) - 0.6848361000000001*(t35558 + t35653 + t35691 - 0.03886*t35912 - 0.05839*t36706 - 0.00781*t36885) - 0.6359823*(t29204 + t29236 + t31255 + t31331 + 0.07756*t31935 + t37267 + t37297 - 0.113*t37421 + 0.09986*t37841) - 1.3785992999999999*(t32055 + t32176 + t32207 - 0.01549*t35271 + t37866 + t37875 - 0.09015*t37975 + t39057) - 1.3785992999999999*(t35558 + t35653 + t35691 - 0.01549*t36885 + t39185 + t39186 - 0.09015*t39245 + t39293) - 0.7613541*(t29204 + t29236 + t31255 + t31331 + t37267 + t37297 + 0.10076*t37841 + t39321 + t39363 - 0.11581*t39475 + 0.13056*t39535) - 1.8180873*(t29204 + t29236 + t31255 + t31331 + t37267 + t37297 + t23438*t37841 + t39321 + t39363 + t23454*t39475 - 0.11212*(t23391*t37841 + t23279*t39475) + 0.10308*(t23279*t37841 - 1.*t23391*t39475) + 0.19529*t39535) - 3.8227608000000006*(t32055 + t32176 + t32207 + t37866 + t37875 + 0.05221*t39049 + t39625 + t39629 - 0.13873*t39696 + 0.00138*t39792) - 3.8227608000000006*(t35558 + t35653 + t35691 + t39185 + t39186 - 0.05221*t39292 + t39882 + t39911 - 0.13873*t39925 + 0.00138*t39997) - 2.9569302000000004*(t32055 + t32176 + t32207 + t37866 + t37875 + 0.05225*t39049 + t39625 + t39629 + t40219 + t40220 + 0.00453*t40224 - 0.23436*t40230) - 2.9569302000000004*(t35558 + t35653 + t35691 + t39185 + t39186 - 0.05225*t39292 + t39882 + t39911 + t40265 + t40273 + 0.00453*t40281 - 0.23436*t40297) - 1.3161096*(t32055 + t32176 + t32207 + t37866 + t37875 + t39057 + t39625 + t39629 + t40219 + t40220 + t40417 + t40418 - 0.28105*t40446 + 0.00045*t40469) - 1.6857504*(t32055 + t32176 + t32207 + t37866 + t37875 + t24570*t39049 + t39625 + t39629 + t40219 + t40220 + t40417 + t40418 + t24583*t40446 - 0.32029*(-1.*t24466*t39049 + t24444*t40446) + 0.0533*(t24444*t39049 + t24466*t40446) + 0.02542*t40469) - 1.3161096*(t35558 + t35653 + t35691 + t39185 + t39186 + t39293 + t39882 + t39911 + t40265 + t40273 + t41542 + t41544 - 0.28105*t41928 + 0.00045*t43100) - 1.6857504*(t35558 + t35653 + t35691 + t39185 + t39186 + t25344*t39292 + t39882 + t39911 + t40265 + t40273 + t41542 + t41544 + t25686*t41928 - 0.32029*(-1.*t25113*t39292 + t24800*t41928) - 0.0533*(t24800*t39292 + t25113*t41928) + 0.02542*t43100) - 1.5477237*(t49804 + t49808 + 0.1033*t49819 + t49835 + t49837 + 0.02455*t49864 + 0.10363*t49878) - 0.6359823*(t49804 + t49808 + t49835 + t49837 + 0.07756*t49864 + t49902 + t49906 + 0.113*t49914 + 0.09986*t49920) - 0.7613541*(t49804 + t49808 + t49835 + t49837 + t49902 + t49906 + 0.10076*t49920 + t49937 + t49938 + 0.11581*t49950 + 0.13056*t49955) - 1.8180873*(t49804 + t49808 + t49835 + t49837 + t49902 + t49906 + t28545*t49920 + t49937 + t49938 + t28622*t49950 + 0.11212*(t28448*t49920 + t28141*t49950) + 0.10308*(t28141*t49920 - 1.*t28448*t49950) + 0.19529*t49955) - 10.2961836*(0.00413*t1471*t2637*t6258 - 0.04342*t3394*t6258) - 5.938287300000001*(-0.1265*t26426*t49665 - 0.1265*t26296*t3394*t6258 + 0.17908*(t26426*t49665 - 1.*t26292*t3394*t6258) - 0.00112*(t26292*t49665 + t26426*t3394*t6258)) - 0.9127224*(t29204 + t29236 + 0.10014*t29352 - 0.00165*t30138 - 0.07137*t1471*t6258*t6378) - 0.9127224*(t49804 + t49808 + 0.10014*t49819 - 0.00165*t49827 + 0.07137*t1471*t6258*t6378) - 0.7693002000000001*(-0.09908*t3394*t6258 + 1.e-5*(t1471*t26247*t2637*t6258 - 1.*t1471*t26255*t6258*t6378));
  p_output1[5]=0.042523238268*t49991 - 0.9127224*(-0.00165*t26707*t49991 + 0.00014*t26829*t49991 + 0.07137*t49995) - 0.6848361000000001*(t50042 + t50043 - 0.00781*t50071 + 0.03886*t50083 - 0.05839*t50087) - 0.6848361000000001*(t50093 + t50094 - 0.00781*t50099 - 0.03886*t50104 - 0.05839*t50121) - 0.6359823*(t50021 + t50023 + 0.07756*t50027 + t50125 + t50126 + t50131 - 0.113*t50137 + 0.09986*t50147) - 1.3785992999999999*(t50042 + t50043 - 0.01549*t50071 + t50155 + t50160 - 0.09015*t50164 + t50170) - 1.3785992999999999*(t50093 + t50094 - 0.01549*t50099 + t50175 + t50176 - 0.09015*t50179 + t50215) - 0.7613541*(t50021 + t50023 + t50125 + t50126 + t50131 + 0.10076*t50147 + t50218 + t50219 - 0.11581*t50224 + 0.13056*t50236) - 1.8180873*(t50021 + t50023 + t50125 + t50126 + t50131 + t23438*t50147 + t50218 + t50219 + t23454*t50224 - 0.11212*(t23391*t50147 + t23279*t50224) + 0.10308*(t23279*t50147 - 1.*t23391*t50224) + 0.19529*t50236) - 3.8227608000000006*(t50042 + t50043 + t50155 + t50160 + 0.05221*t50168 + t50242 + t50243 - 0.13873*t50248 + 0.00138*t50253) - 3.8227608000000006*(t50093 + t50094 + t50175 + t50176 - 0.05221*t50214 + t50261 + t50262 - 0.13873*t50277 + 0.00138*t50281) - 2.9569302000000004*(t50042 + t50043 + t50155 + t50160 + 0.05225*t50168 + t50242 + t50243 + t50320 + t50324 + 0.00453*t50327 - 0.23436*t50333) - 2.9569302000000004*(t50093 + t50094 + t50175 + t50176 - 0.05225*t50214 + t50261 + t50262 + t50360 + t50361 + 0.00453*t50383 - 0.23436*t50389) - 1.3161096*(t50042 + t50043 + t50155 + t50160 + t50170 + t50242 + t50243 + t50320 + t50324 + t50397 + t50401 - 0.28105*t50406 + 0.00045*t50415) - 1.6857504*(t50042 + t50043 + t50155 + t50160 + t24570*t50168 + t50242 + t50243 + t50320 + t50324 + t50397 + t50401 + t24583*t50406 - 0.32029*(-1.*t24466*t50168 + t24444*t50406) + 0.0533*(t24444*t50168 + t24466*t50406) + 0.02542*t50415) - 1.3161096*(t50093 + t50094 + t50175 + t50176 + t50215 + t50261 + t50262 + t50360 + t50361 + t50420 + t50421 - 0.28105*t50469 + 0.00045*t50505) - 1.6857504*(t50093 + t50094 + t50175 + t50176 + t25344*t50214 + t50261 + t50262 + t50360 + t50361 + t50420 + t50421 + t25686*t50469 - 0.32029*(-1.*t25113*t50214 + t24800*t50469) - 0.0533*(t24800*t50214 + t25113*t50469) + 0.02542*t50505) - 7.693002000000001e-6*(-1.*t26255*t49995 + t50585) - 5.938287300000001*(-0.00112*t26292*t50617 + 0.05258*t26426*t50617) - 1.5477237*(0.0033*t26829*t49991 + t50636 + t50660 + 0.02455*t50663 + 0.10363*t50668) - 0.6359823*(t50636 + t50660 + 0.07756*t50663 + t50695 + t50696 + t50697 + 0.09986*t50700 + 0.113*t50716) - 0.7613541*(t50636 + t50660 + t50695 + t50696 + t50697 + 0.10076*t50700 + t50739 + t50741 + 0.11581*t50749 + 0.13056*t50760) - 1.8180873*(t50636 + t50660 + t50695 + t50696 + t50697 + t28545*t50700 + t50739 + t50741 + t28622*t50749 + 0.11212*(t28448*t50700 + t28141*t50749) + 0.10308*(t28141*t50700 - 1.*t28448*t50749) + 0.19529*t50760) - 0.9127224*(-0.07137*t49995 - 0.00165*t49991*t8546 + 0.00014*t49991*t8725) - 1.5477237*(t50021 + t50023 + 0.02455*t50027 - 0.10363*t50038 + 0.0033*t49991*t8725);
  p_output1[6]=-7.693002000000001e-6*(t50585 + t26255*t50816) - 5.938287300000001*(-0.00112*t26292*t50828 + 0.05258*t26426*t50828);
  p_output1[7]=-5.938287300000001*(-0.1265*t26292*t50848 + 0.1265*t1471*t26426*t6258 - 0.00112*(-1.*t26426*t50848 - 1.*t1471*t26292*t6258) + 0.17908*(t26292*t50848 - 1.*t1471*t26426*t6258));
  p_output1[8]=-0.9127224*(t50874 + t50875 + 0.10014*t50878 - 0.00165*t50882) - 1.5477237*(t50874 + t50875 + 0.1033*t50878 + 0.02455*t27247*t50882 - 0.00563*t27270*t50882) - 0.6359823*(t50874 + t50875 + 0.07756*t27247*t50882 + t50893 + t50896 + t50897 + 0.113*t50900 + 0.09986*t50907) - 0.7613541*(t50874 + t50875 + t50893 + t50896 + t50897 + 0.10076*t50907 + t50911 + t50912 + 0.11581*t50920 + 0.13056*t50924) - 1.8180873*(t50874 + t50875 + t50893 + t50896 + t50897 + t28545*t50907 + t50911 + t50912 + t28622*t50920 + 0.11212*(t28448*t50907 + t28141*t50920) + 0.10308*(t28141*t50907 - 1.*t28448*t50920) + 0.19529*t50924);
  p_output1[9]=-1.5477237*(t50960 + t50961 + 0.10363*t50973 + 0.02455*t51003) - 0.6359823*(t50960 + t50961 + 0.113*t27412*t50973 - 0.09986*t27455*t50973 + 0.07756*t51003 + t51008) - 0.7613541*(t50960 + t50961 - 0.10076*t27455*t50973 + t51008 + t51015 + t51016 + 0.13056*t51020 + 0.11581*t51025) - 1.8180873*(t50960 + t50961 - 1.*t27455*t28545*t50973 + t51008 + t51015 + t51016 + 0.19529*t51020 + t28622*t51025 + 0.11212*(-1.*t27455*t28448*t50973 + t28141*t51025) + 0.10308*(-1.*t27455*t28141*t50973 - 1.*t28448*t51025));
  p_output1[10]=-0.6359823*(t51057 + t51062 + 0.09986*t51065 + 0.113*t51070) - 0.7613541*(t51057 + t51062 + 0.10076*t51065 + 0.11581*t27837*t51070 + 0.13056*t27886*t51070 + t51083) - 1.8180873*(t51057 + t51062 + t28545*t51065 + 0.19529*t27886*t51070 + t27837*t28622*t51070 + 0.11212*(t28448*t51065 + t27837*t28141*t51070) + 0.10308*(t28141*t51065 - 1.*t27837*t28448*t51070) + t51083);
  p_output1[11]=-0.7613541*(t51166 + t51173 + 0.13056*t51176 + 0.11581*t51181) - 1.8180873*(t51166 + t51173 + 0.19529*t51176 + 0.11212*t28141*t51181 - 0.10308*t28448*t51181 + t28622*t51181);
  p_output1[12]=-1.8180873*((-0.113*t28141 + t28605)*t51070 + (0.1*t28141 + 0.113*t28448)*t51176 + 0.10308*(-1.*t28448*t51070 - 1.*t28141*t51176) + 0.11212*(t28141*t51070 - 1.*t28448*t51176));
  p_output1[13]=-0.9127224*(t51218 + t51219 + 0.10014*t51223 - 0.00165*t51228) - 1.5477237*(t51218 + t51219 + 0.1033*t51223 + 0.02455*t11383*t51228 + 0.00563*t11466*t51228) - 0.6359823*(t51218 + t51219 + 0.07756*t11383*t51228 + t51263 + t51274 + t51286 - 0.113*t51292 + 0.09986*t51313) - 0.7613541*(t51218 + t51219 + t51263 + t51274 + t51286 + 0.10076*t51313 + t51318 + t51319 - 0.11581*t51323 + 0.13056*t51328) - 1.8180873*(t51218 + t51219 + t51263 + t51274 + t51286 + t23438*t51313 + t51318 + t51319 + t23454*t51323 - 0.11212*(t23391*t51313 + t23279*t51323) + 0.10308*(t23279*t51313 - 1.*t23391*t51323) + 0.19529*t51328);
  p_output1[14]=-1.5477237*(t51355 + t51356 - 0.10363*t51360 + 0.02455*t51365) - 0.6359823*(t51355 + t51356 - 0.113*t19178*t51360 - 0.09986*t19379*t51360 + 0.07756*t51365 + t51405) - 0.7613541*(t51355 + t51356 - 0.10076*t19379*t51360 + t51405 + t51443 + t51444 + 0.13056*t51448 - 0.11581*t51453) - 1.8180873*(t51355 + t51356 - 1.*t19379*t23438*t51360 + t51405 + t51443 + t51444 + 0.19529*t51448 + t23454*t51453 - 0.11212*(-1.*t19379*t23391*t51360 + t23279*t51453) + 0.10308*(-1.*t19379*t23279*t51360 - 1.*t23391*t51453));
  p_output1[15]=-0.6359823*(t51595 + t51610 + 0.09986*t51626 - 0.113*t51632) - 0.7613541*(t51595 + t51610 + 0.10076*t51626 - 0.11581*t21731*t51632 + 0.13056*t22006*t51632 + t51650) - 1.8180873*(t51595 + t51610 + t23438*t51626 + 0.19529*t22006*t51632 + t21731*t23454*t51632 - 0.11212*(t23391*t51626 + t21731*t23279*t51632) + 0.10308*(t23279*t51626 - 1.*t21731*t23391*t51632) + t51650);
  p_output1[16]=-0.7613541*(t51713 + t51726 + 0.13056*t51731 - 0.11581*t51745) - 1.8180873*(t51713 + t51726 + 0.19529*t51731 - 0.11212*t23279*t51745 - 0.10308*t23391*t51745 + t23454*t51745);
  p_output1[17]=-1.8180873*((0.113*t23279 + t23451)*t51632 + (0.1*t23279 - 0.113*t23391)*t51731 + 0.10308*(-1.*t23391*t51632 - 1.*t23279*t51731) - 0.11212*(t23279*t51632 - 1.*t23391*t51731));
  p_output1[18]=-0.6848361000000001*(t51826 + t51828 + t51829 - 0.00781*t51843 - 0.01953*t51855) - 1.3785992999999999*(t51826 + t51828 + t51829 - 0.01549*t51843 + t51871 + t51912 - 0.09015*t51917 + t51959) - 3.8227608000000006*(t51826 + t51828 + t51829 + t51871 + t51912 + 0.05221*t51950 + t51962 + t51963 - 0.13873*t52010 + 0.00138*t52017) - 2.9569302000000004*(t51826 + t51828 + t51829 + t51871 + t51912 + 0.05225*t51950 + t51962 + t51963 + t52047 + t52048 + 0.00453*t52061 - 0.23436*t52107) - 1.3161096*(t51826 + t51828 + t51829 + t51871 + t51912 + t51959 + t51962 + t51963 + t52047 + t52048 + t52120 + t52122 - 0.28105*t52126 + 0.00045*t52130) - 1.6857504*(t51826 + t51828 + t51829 + t51871 + t51912 + t24570*t51950 + t51962 + t51963 + t52047 + t52048 + t52120 + t52122 + t24583*t52126 - 0.32029*(-1.*t24466*t51950 + t24444*t52126) + 0.0533*(t24444*t51950 + t24466*t52126) + 0.02542*t52130);
  p_output1[19]=-1.3785992999999999*(t55409 + t55785 + t55880 - 0.09015*t55891) - 3.8227608000000006*(t55409 + t55785 + 0.05221*t55873 - 0.00138*t20565*t55891 - 0.13873*t20730*t55891 + t55900) - 2.9569302000000004*(t55409 + t55785 + 0.05225*t55873 + t55900 + t56236 + t56237 + 0.00453*t56274 - 0.23436*t56403) - 1.3161096*(t55409 + t55785 + t55880 + t55900 + t56236 + t56237 + t56546 + t56560 - 0.28105*t56616 + 0.00045*t56628) - 1.6857504*(t55409 + t55785 + t24570*t55873 + t55900 + t56236 + t56237 + t56546 + t56560 + t24583*t56616 - 0.32029*(-1.*t24466*t55873 + t24444*t56616) + 0.0533*(t24444*t55873 + t24466*t56616) + 0.02542*t56628);
  p_output1[20]=-3.8227608000000006*(t56876 + t56888 + 0.00138*t56949 - 0.13873*t56966) - 2.9569302000000004*(t56876 + t56888 + t57046 + t57050 - 0.23436*t57068 + 0.00453*t57090) - 1.3161096*(t56876 + t56888 + t57046 + t57050 + t57132 + t57133 + 0.00045*t57136 - 0.28105*t57140) - 1.6857504*(t56876 + t56888 + t57046 + t57050 + t57132 + t57133 + 0.02542*t57136 - 0.32029*t24444*t57140 + 0.0533*t24466*t57140 + t24583*t57140);
  p_output1[21]=-2.9569302000000004*(t57162 + t57164 - 0.23436*t57169 + 0.00453*t57173) - 1.3161096*(t57162 + t57164 + t57201 + t57202 + 0.00045*t57207 - 0.28105*t57259) - 1.6857504*(t57162 + t57164 + t57201 + t57202 + 0.02542*t57207 - 0.32029*t24444*t57259 + 0.0533*t24466*t57259 + t24583*t57259);
  p_output1[22]=-1.3161096*(t57311 + t57331 + 0.00045*t57339 - 0.28105*t57346) - 1.6857504*(t57311 + t57331 + 0.02542*t57339 - 0.32029*t24444*t57346 + 0.0533*t24466*t57346 + t24583*t57346);
  p_output1[23]=-1.6857504*((-0.2879*t24444 + 0.05*t24466)*t57402 + (-0.05*t24444 + t24483)*t57410 + 0.0533*(-1.*t24466*t57402 + t24444*t57410) - 0.32029*(-1.*t24444*t57402 - 1.*t24466*t57410));
  p_output1[24]=-0.6848361000000001*(t57427 + t57428 + t57429 - 0.00781*t57439 - 0.03886*t57448 - 0.05839*t57456) - 1.3785992999999999*(t57427 + t57428 + t57429 - 0.01549*t57439 + t57493 + t57499 - 0.09015*t57529 + t57536) - 3.8227608000000006*(t57427 + t57428 + t57429 + t57493 + t57499 - 0.05221*t57533 + t57539 + t57546 - 0.13873*t57589 + 0.00138*t57647) - 2.9569302000000004*(t57427 + t57428 + t57429 + t57493 + t57499 - 0.05225*t57533 + t57539 + t57546 + t57666 + t57667 + 0.00453*t57673 - 0.23436*t57686) - 1.3161096*(t57427 + t57428 + t57429 + t57493 + t57499 + t57536 + t57539 + t57546 + t57666 + t57667 + t57696 + t57699 - 0.28105*t57704 + 0.00045*t57712) - 1.6857504*(t57427 + t57428 + t57429 + t57493 + t57499 + t25344*t57533 + t57539 + t57546 + t57666 + t57667 + t57696 + t57699 + t25686*t57704 - 0.32029*(-1.*t25113*t57533 + t24800*t57704) - 0.0533*(t24800*t57533 + t25113*t57704) + 0.02542*t57712);
  p_output1[25]=-1.3785992999999999*(t57985 + t58077 + t58115 - 0.09015*t58124) - 3.8227608000000006*(t57985 + t58077 - 0.05221*t58112 - 0.00138*t21357*t58124 - 0.13873*t21391*t58124 + t58156) - 2.9569302000000004*(t57985 + t58077 - 0.05225*t58112 + t58156 + t58179 + t58180 + 0.00453*t58184 - 0.23436*t58189) - 1.3161096*(t57985 + t58077 + t58115 + t58156 + t58179 + t58180 + t58201 + t58205 - 0.28105*t58212 + 0.00045*t58217) - 1.6857504*(t57985 + t58077 + t25344*t58112 + t58156 + t58179 + t58180 + t58201 + t58205 + t25686*t58212 - 0.32029*(-1.*t25113*t58112 + t24800*t58212) - 0.0533*(t24800*t58112 + t25113*t58212) + 0.02542*t58217);
  p_output1[26]=-3.8227608000000006*(t58291 + t58293 + 0.00138*t58309 - 0.13873*t58322) - 2.9569302000000004*(t58291 + t58293 + t58331 + t58332 - 0.23436*t58350 + 0.00453*t58361) - 1.3161096*(t58291 + t58293 + t58331 + t58332 + t58370 + t58371 + 0.00045*t58381 - 0.28105*t58397) - 1.6857504*(t58291 + t58293 + t58331 + t58332 + t58370 + t58371 + 0.02542*t58381 - 0.32029*t24800*t58397 - 0.0533*t25113*t58397 + t25686*t58397);
  p_output1[27]=-2.9569302000000004*(t58429 + t58446 - 0.23436*t58461 + 0.00453*t58471) - 1.3161096*(t58429 + t58446 + t58487 + t58489 + 0.00045*t58502 - 0.28105*t58508) - 1.6857504*(t58429 + t58446 + t58487 + t58489 + 0.02542*t58502 - 0.32029*t24800*t58508 - 0.0533*t25113*t58508 + t25686*t58508);
  p_output1[28]=-1.3161096*(t58555 + t58568 + 0.00045*t58580 - 0.28105*t58597) - 1.6857504*(t58555 + t58568 + 0.02542*t58580 - 0.32029*t24800*t58597 - 0.0533*t25113*t58597 + t25686*t58597);
  p_output1[29]=-1.6857504*((-0.2879*t24800 - 0.05*t25113)*t58640 + (0.05*t24800 + t25158)*t58651 - 0.0533*(-1.*t25113*t58640 + t24800*t58651) - 0.32029*(-1.*t24800*t58640 - 1.*t25113*t58651));
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 30 && ncols == 1) && 
      !(mrows == 1 && ncols == 30))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 30 && ncols == 1) && 
      !(mrows == 1 && ncols == 30))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 30, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "Ge_vec_NaoH25V50.hh"

namespace SymFunction
{

void Ge_vec_NaoH25V50_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
