/*
 * Automatically Generated from Mathematica.
 * Thu 12 Jul 2018 17:09:56 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;


#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t15;
  double t28;
  double t40;
  double t56;
  double t46;
  double t58;
  double t71;
  double t54;
  double t61;
  double t62;
  double t86;
  double t78;
  double t82;
  double t87;
  double t93;
  double t99;
  double t121;
  double t122;
  double t101;
  double t103;
  double t137;
  double t138;
  double t70;
  double t85;
  double t100;
  double t105;
  double t113;
  double t115;
  double t116;
  double t119;
  double t124;
  double t125;
  double t132;
  double t133;
  double t140;
  double t142;
  double t145;
  double t148;
  double t149;
  double t150;
  double t153;
  double t155;
  double t161;
  double t162;
  double t163;
  double t164;
  double t166;
  double t168;
  double t169;
  double t172;
  double t173;
  double t176;
  double t212;
  double t213;
  double t216;
  double t222;
  double t226;
  double t227;
  double t185;
  double t186;
  double t219;
  double t228;
  double t230;
  double t234;
  double t235;
  double t238;
  double t239;
  double t241;
  double t242;
  double t243;
  double t244;
  double t247;
  double t249;
  double t250;
  double t251;
  double t253;
  double t254;
  double t255;
  double t189;
  double t274;
  double t275;
  double t276;
  double t280;
  double t281;
  double t282;
  double t272;
  double t279;
  double t283;
  double t284;
  double t288;
  double t289;
  double t290;
  double t293;
  double t309;
  double t311;
  double t313;
  double t314;
  double t316;
  double t317;
  double t318;
  double t315;
  double t319;
  double t321;
  double t327;
  double t330;
  double t332;
  double t302;
  double t271;
  double t305;
  double t307;
  double t308;
  double t258;
  double t260;
  double t261;
  double t337;
  double t338;
  double t257;
  double t262;
  double t265;
  double t285;
  double t294;
  double t299;
  double t325;
  double t333;
  double t334;
  double t336;
  double t339;
  double t341;
  double t342;
  double t343;
  double t344;
  double t365;
  double t366;
  double t367;
  double t348;
  double t349;
  double t351;
  double t353;
  double t354;
  double t355;
  double t359;
  double t360;
  double t361;
  double t368;
  double t369;
  double t370;
  double t371;
  double t372;
  double t373;
  double t375;
  double t388;
  double t389;
  double t394;
  double t395;
  double t396;
  double t397;
  double t398;
  double t399;
  double t352;
  double t362;
  double t363;
  double t377;
  double t378;
  double t380;
  double t418;
  double t419;
  double t421;
  double t422;
  double t425;
  double t426;
  double t427;
  double t429;
  double t430;
  double t431;
  double t433;
  double t434;
  double t435;
  double t436;
  double t438;
  double t424;
  double t440;
  double t442;
  double t444;
  double t445;
  double t446;
  double t191;
  double t193;
  double t194;
  double t187;
  double t196;
  double t199;
  double t443;
  double t447;
  double t448;
  double t449;
  double t450;
  double t451;
  double t452;
  double t453;
  double t454;
  double t462;
  double t463;
  double t464;
  double t465;
  double t469;
  double t470;
  double t471;
  double t475;
  double t478;
  double t500;
  double t501;
  double t502;
  double t503;
  double t504;
  double t505;
  double t506;
  double t507;
  double t511;
  double t512;
  double t513;
  double t514;
  double t515;
  double t517;
  double t518;
  double t519;
  double t520;
  double t521;
  double t536;
  double t537;
  double t538;
  double t539;
  double t541;
  double t542;
  double t544;
  double t545;
  double t546;
  double t547;
  double t550;
  double t551;
  double t553;
  double t554;
  double t555;
  double t556;
  double t558;
  double t559;
  double t572;
  double t573;
  double t574;
  double t575;
  double t576;
  double t577;
  double t578;
  double t579;
  double t580;
  double t581;
  double t582;
  double t583;
  double t584;
  double t585;
  double t586;
  double t587;
  double t589;
  double t590;
  double t593;
  double t594;
  double t595;
  double t592;
  double t597;
  double t600;
  double t603;
  double t604;
  double t606;
  double t608;
  double t609;
  double t610;
  double t611;
  double t613;
  double t614;
  double t301;
  double t346;
  double t347;
  double t403;
  double t404;
  double t407;
  double t618;
  double t620;
  double t623;
  double t607;
  double t615;
  double t616;
  double t408;
  double t393;
  double t563;
  double t564;
  double t565;
  double t562;
  double t566;
  double t567;
  double t461;
  double t474;
  double t479;
  double t484;
  double t485;
  double t486;
  double t487;
  double t488;
  double t490;
  double t491;
  double t492;
  double t493;
  double t494;
  double t524;
  double t525;
  double t526;
  double t523;
  double t527;
  double t528;
  double t664;
  double t665;
  double t666;
  double t668;
  double t669;
  double t670;
  double t672;
  double t673;
  double t674;
  double t675;
  double t676;
  double t677;
  double t678;
  double t679;
  double t689;
  double t690;
  double t691;
  double t693;
  double t694;
  double t695;
  double t696;
  double t697;
  double t701;
  double t702;
  double t705;
  double t706;
  double t710;
  double t711;
  double t714;
  double t715;
  double t719;
  double t736;
  double t738;
  double t739;
  double t740;
  double t741;
  double t742;
  double t743;
  double t744;
  double t745;
  double t746;
  double t747;
  double t748;
  double t749;
  double t752;
  double t753;
  double t754;
  double t751;
  double t755;
  double t756;
  double t759;
  double t760;
  double t761;
  double t763;
  double t764;
  double t767;
  double t768;
  double t769;
  double t770;
  double t762;
  double t771;
  double t772;
  double t776;
  double t777;
  double t778;
  double t682;
  double t683;
  double t684;
  double t681;
  double t685;
  double t686;
  double t655;
  double t656;
  double t657;
  double t724;
  double t725;
  double t727;
  double t723;
  double t729;
  double t730;
  double t810;
  double t811;
  double t812;
  double t813;
  double t814;
  double t815;
  double t816;
  double t817;
  double t818;
  double t819;
  double t820;
  double t821;
  double t822;
  double t823;
  double t826;
  double t829;
  double t832;
  double t833;
  double t847;
  double t848;
  double t849;
  double t850;
  double t851;
  double t852;
  double t853;
  double t854;
  double t855;
  double t856;
  double t857;
  double t858;
  double t859;
  double t860;
  double t861;
  double t862;
  double t863;
  double t864;
  double t876;
  double t877;
  double t878;
  double t879;
  double t880;
  double t881;
  double t882;
  double t883;
  double t884;
  double t885;
  double t886;
  double t887;
  double t888;
  double t889;
  double t890;
  double t891;
  double t892;
  double t893;
  double t896;
  double t897;
  double t898;
  double t895;
  double t899;
  double t900;
  double t903;
  double t904;
  double t905;
  double t907;
  double t908;
  double t909;
  double t910;
  double t911;
  double t912;
  double t906;
  double t913;
  double t914;
  double t916;
  double t917;
  double t918;
  double t840;
  double t841;
  double t842;
  double t839;
  double t843;
  double t844;
  double t869;
  double t870;
  double t871;
  double t868;
  double t872;
  double t873;
  double t945;
  double t946;
  double t947;
  double t954;
  double t955;
  double t956;
  double t963;
  double t964;
  double t965;
  double t967;
  double t968;
  double t969;
  double t973;
  double t974;
  double t975;
  double t976;
  double t977;
  double t978;
  double t982;
  double t983;
  double t984;
  double t972;
  double t979;
  double t980;
  double t958;
  double t959;
  double t960;
  double t949;
  double t950;
  double t951;
  double t1030;
  double t1031;
  double t1032;
  double t1033;
  double t1034;
  double t1035;
  double t1038;
  double t1039;
  double t1040;
  double t1041;
  double t1042;
  double t1043;
  double t1021;
  double t1022;
  double t1023;
  double t1024;
  double t1025;
  double t1026;
  double t1012;
  double t1013;
  double t1014;
  double t1015;
  double t1016;
  double t1017;
  double t1077;
  double t1078;
  double t1080;
  double t1081;
  double t1082;
  double t1083;
  double t1084;
  double t1085;
  double t1074;
  double t1075;
  double t1071;
  double t1072;
  double t1113;
  double t1114;
  t15 = Cos(var1[3]);
  t28 = Cos(var1[4]);
  t40 = Cos(var1[5]);
  t56 = Sin(var1[4]);
  t46 = Sin(var1[3]);
  t58 = Sin(var1[5]);
  t71 = Sin(var1[24]);
  t54 = -1.*t40*t46;
  t61 = -1.*t15*t56*t58;
  t62 = t54 + t61;
  t86 = Cos(var1[24]);
  t78 = -0.707107*t71;
  t82 = 0. + t78;
  t87 = t15*t40*t56;
  t93 = -1.*t46*t58;
  t99 = t87 + t93;
  t121 = 0.707107*t86;
  t122 = 0. + t121;
  t101 = 0.707107*t71;
  t103 = 0. + t101;
  t137 = -0.707107*t86;
  t138 = 0. + t137;
  t70 = Sin(var1[26]);
  t85 = -1.*t15*t28*t82;
  t100 = t86*t99;
  t105 = t103*t62;
  t113 = t85 + t100 + t105;
  t115 = t70*t113;
  t116 = Cos(var1[26]);
  t119 = Sin(var1[25]);
  t124 = -0.707107*t122;
  t125 = 0.5000003094490001 + t124;
  t132 = -1.*t125*t15*t28;
  t133 = t82*t99;
  t140 = -0.707107*t138;
  t142 = 0.5000003094490001 + t140;
  t145 = t142*t62;
  t148 = t132 + t133 + t145;
  t149 = -1.*t119*t148;
  t150 = Cos(var1[25]);
  t153 = 0.707107*t122;
  t155 = 0.5000003094490001 + t153;
  t161 = -1.*t155*t15*t28;
  t162 = t103*t99;
  t163 = 0.707107*t138;
  t164 = 0.5000003094490001 + t163;
  t166 = t164*t62;
  t168 = t161 + t162 + t166;
  t169 = t150*t168;
  t172 = t149 + t169;
  t173 = t116*t172;
  t176 = t115 + t173;
  t212 = t15*t40;
  t213 = -1.*t46*t56*t58;
  t216 = t212 + t213;
  t222 = t40*t46*t56;
  t226 = t15*t58;
  t227 = t222 + t226;
  t185 = Cos(var1[27]);
  t186 = 0. + t185;
  t219 = -1.*t28*t82*t46;
  t228 = t86*t227;
  t230 = t103*t216;
  t234 = t219 + t228 + t230;
  t235 = t70*t234;
  t238 = -1.*t125*t28*t46;
  t239 = t82*t227;
  t241 = t142*t216;
  t242 = t238 + t239 + t241;
  t243 = -1.*t119*t242;
  t244 = -1.*t155*t28*t46;
  t247 = t103*t227;
  t249 = t164*t216;
  t250 = t244 + t247 + t249;
  t251 = t150*t250;
  t253 = t243 + t251;
  t254 = t116*t253;
  t255 = t235 + t254;
  t189 = Sin(var1[27]);
  t274 = -1.*t15*t40*t56;
  t275 = t46*t58;
  t276 = t274 + t275;
  t280 = t40*t46;
  t281 = t15*t56*t58;
  t282 = t280 + t281;
  t272 = t125*t15*t28;
  t279 = t82*t276;
  t283 = t142*t282;
  t284 = 0. + t272 + t279 + t283;
  t288 = t155*t15*t28;
  t289 = t103*t276;
  t290 = t164*t282;
  t293 = 0. + t288 + t289 + t290;
  t309 = t15*t28*t82;
  t311 = t86*t276;
  t313 = t103*t282;
  t314 = t309 + t311 + t313;
  t316 = -1.*t119*t284;
  t317 = t150*t293;
  t318 = t316 + t317;
  t315 = t70*t314;
  t319 = t116*t318;
  t321 = t315 + t319;
  t327 = t116*t314;
  t330 = -1.*t70*t318;
  t332 = t327 + t330;
  t302 = Sin(var1[29]);
  t271 = Cos(var1[29]);
  t305 = Sin(var1[28]);
  t307 = -1.*t189;
  t308 = 0. + t307;
  t258 = t116*t234;
  t260 = -1.*t70*t253;
  t261 = t258 + t260;
  t337 = Cos(var1[28]);
  t338 = 0. + t337;
  t257 = t186*t255;
  t262 = t189*t261;
  t265 = t257 + t262;
  t285 = t150*t284;
  t294 = t119*t293;
  t299 = 0. + t285 + t294;
  t325 = t308*t321;
  t333 = t185*t332;
  t334 = t325 + t333;
  t336 = t305*t334;
  t339 = t186*t321;
  t341 = t189*t332;
  t342 = t339 + t341;
  t343 = t338*t342;
  t344 = t336 + t343;
  t365 = -1.*t302*t299;
  t366 = t271*t344;
  t367 = t365 + t366;
  t348 = t150*t242;
  t349 = t119*t250;
  t351 = t348 + t349;
  t353 = t308*t255;
  t354 = t185*t261;
  t355 = t353 + t354;
  t359 = t305*t355;
  t360 = t338*t265;
  t361 = t359 + t360;
  t368 = Power(t367,2);
  t369 = t271*t299;
  t370 = t302*t344;
  t371 = t369 + t370;
  t372 = Power(t371,2);
  t373 = t368 + t372;
  t375 = 1/t373;
  t388 = -1.*t305;
  t389 = 0. + t388;
  t394 = -1.*t337*t334;
  t395 = -1.*t389*t342;
  t396 = t394 + t395;
  t397 = Power(t396,2);
  t398 = t397 + t368 + t372;
  t399 = 1/t398;
  t352 = -1.*t302*t351;
  t362 = t271*t361;
  t363 = t352 + t362;
  t377 = t271*t351;
  t378 = t302*t361;
  t380 = t377 + t378;
  t418 = t86*t28*t40;
  t419 = t82*t56;
  t421 = -1.*t28*t103*t58;
  t422 = t418 + t419 + t421;
  t425 = t28*t40*t82;
  t426 = t125*t56;
  t427 = -1.*t142*t28*t58;
  t429 = 0. + t425 + t426 + t427;
  t430 = -1.*t119*t429;
  t431 = t28*t40*t103;
  t433 = t155*t56;
  t434 = -1.*t164*t28*t58;
  t435 = 0. + t431 + t433 + t434;
  t436 = t150*t435;
  t438 = t430 + t436;
  t424 = t70*t422;
  t440 = t116*t438;
  t442 = t424 + t440;
  t444 = t116*t422;
  t445 = -1.*t70*t438;
  t446 = t444 + t445;
  t191 = t116*t113;
  t193 = -1.*t70*t172;
  t194 = t191 + t193;
  t187 = t186*t176;
  t196 = t189*t194;
  t199 = t187 + t196;
  t443 = t308*t442;
  t447 = t185*t446;
  t448 = t443 + t447;
  t449 = t337*t448;
  t450 = t186*t442;
  t451 = t189*t446;
  t452 = t450 + t451;
  t453 = t389*t452;
  t454 = t449 + t453;
  t462 = 0. + t238 + t239 + t241;
  t463 = -1.*t119*t462;
  t464 = 0. + t244 + t247 + t249;
  t465 = t150*t464;
  t469 = t463 + t465;
  t470 = t116*t469;
  t471 = t235 + t470;
  t475 = -1.*t70*t469;
  t478 = t258 + t475;
  t500 = t28*t82;
  t501 = -1.*t86*t40*t56;
  t502 = t103*t56*t58;
  t503 = t500 + t501 + t502;
  t504 = t70*t503;
  t505 = t125*t28;
  t506 = -1.*t40*t82*t56;
  t507 = t142*t56*t58;
  t511 = t505 + t506 + t507;
  t512 = -1.*t119*t511;
  t513 = t155*t28;
  t514 = -1.*t40*t103*t56;
  t515 = t164*t56*t58;
  t517 = t513 + t514 + t515;
  t518 = t150*t517;
  t519 = t512 + t518;
  t520 = t116*t519;
  t521 = t504 + t520;
  t536 = t86*t28*t40*t46;
  t537 = t82*t46*t56;
  t538 = -1.*t28*t103*t46*t58;
  t539 = t536 + t537 + t538;
  t541 = t70*t539;
  t542 = t28*t40*t82*t46;
  t544 = t125*t46*t56;
  t545 = -1.*t142*t28*t46*t58;
  t546 = t542 + t544 + t545;
  t547 = -1.*t119*t546;
  t550 = t28*t40*t103*t46;
  t551 = t155*t46*t56;
  t553 = -1.*t164*t28*t46*t58;
  t554 = t550 + t551 + t553;
  t555 = t150*t554;
  t556 = t547 + t555;
  t558 = t116*t556;
  t559 = t541 + t558;
  t572 = -1.*t86*t15*t28*t40;
  t573 = -1.*t15*t82*t56;
  t574 = t15*t28*t103*t58;
  t575 = t572 + t573 + t574;
  t576 = t70*t575;
  t577 = -1.*t15*t28*t40*t82;
  t578 = -1.*t125*t15*t56;
  t579 = t142*t15*t28*t58;
  t580 = t577 + t578 + t579;
  t581 = -1.*t119*t580;
  t582 = -1.*t15*t28*t40*t103;
  t583 = -1.*t155*t15*t56;
  t584 = t164*t15*t28*t58;
  t585 = t582 + t583 + t584;
  t586 = t150*t585;
  t587 = t581 + t586;
  t589 = t116*t587;
  t590 = t576 + t589;
  t593 = t116*t575;
  t594 = -1.*t70*t587;
  t595 = t593 + t594;
  t592 = t186*t590;
  t597 = t189*t595;
  t600 = t592 + t597;
  t603 = t150*t580;
  t604 = t119*t585;
  t606 = t603 + t604;
  t608 = t308*t590;
  t609 = t185*t595;
  t610 = t608 + t609;
  t611 = t305*t610;
  t613 = t338*t600;
  t614 = t611 + t613;
  t301 = -1.*t271*t299;
  t346 = -1.*t302*t344;
  t347 = t301 + t346;
  t403 = t337*t334;
  t404 = t389*t342;
  t407 = t403 + t404;
  t618 = -1.*t302*t606;
  t620 = t271*t614;
  t623 = t618 + t620;
  t607 = t271*t606;
  t615 = t302*t614;
  t616 = t607 + t615;
  t408 = 1/Sqrt(t373);
  t393 = Sqrt(t373);
  t563 = t116*t539;
  t564 = -1.*t70*t556;
  t565 = t563 + t564;
  t562 = t186*t559;
  t566 = t189*t565;
  t567 = t562 + t566;
  t461 = Power(t454,2);
  t474 = t308*t471;
  t479 = t185*t478;
  t484 = t474 + t479;
  t485 = t337*t484;
  t486 = t186*t471;
  t487 = t189*t478;
  t488 = t486 + t487;
  t490 = t389*t488;
  t491 = t485 + t490;
  t492 = Power(t491,2);
  t493 = t461 + t492;
  t494 = 1/t493;
  t524 = t116*t503;
  t525 = -1.*t70*t519;
  t526 = t524 + t525;
  t523 = t186*t521;
  t527 = t189*t526;
  t528 = t523 + t527;
  t664 = -1.*t28*t40*t103;
  t665 = -1.*t86*t28*t58;
  t666 = t664 + t665;
  t668 = t70*t666;
  t669 = -1.*t142*t28*t40;
  t670 = -1.*t28*t82*t58;
  t672 = t669 + t670;
  t673 = -1.*t119*t672;
  t674 = -1.*t164*t28*t40;
  t675 = t674 + t421;
  t676 = t150*t675;
  t677 = t673 + t676;
  t678 = t116*t677;
  t679 = t668 + t678;
  t689 = -1.*t40*t46*t56;
  t690 = -1.*t15*t58;
  t691 = t689 + t690;
  t693 = t103*t691;
  t694 = t86*t216;
  t695 = t693 + t694;
  t696 = t70*t695;
  t697 = t142*t691;
  t701 = t82*t216;
  t702 = t697 + t701;
  t705 = -1.*t119*t702;
  t706 = t164*t691;
  t710 = t706 + t230;
  t711 = t150*t710;
  t714 = t705 + t711;
  t715 = t116*t714;
  t719 = t696 + t715;
  t736 = t86*t282;
  t738 = t162 + t736;
  t739 = t70*t738;
  t740 = t142*t99;
  t741 = t82*t282;
  t742 = t740 + t741;
  t743 = -1.*t119*t742;
  t744 = t164*t99;
  t745 = t744 + t313;
  t746 = t150*t745;
  t747 = t743 + t746;
  t748 = t116*t747;
  t749 = t739 + t748;
  t752 = t116*t738;
  t753 = -1.*t70*t747;
  t754 = t752 + t753;
  t751 = t186*t749;
  t755 = t189*t754;
  t756 = t751 + t755;
  t759 = t150*t742;
  t760 = t119*t745;
  t761 = t759 + t760;
  t763 = t308*t749;
  t764 = t185*t754;
  t767 = t763 + t764;
  t768 = t305*t767;
  t769 = t338*t756;
  t770 = t768 + t769;
  t762 = -1.*t302*t761;
  t771 = t271*t770;
  t772 = t762 + t771;
  t776 = t271*t761;
  t777 = t302*t770;
  t778 = t776 + t777;
  t682 = t116*t666;
  t683 = -1.*t70*t677;
  t684 = t682 + t683;
  t681 = t186*t679;
  t685 = t189*t684;
  t686 = t681 + t685;
  t655 = -1.*t337*t484;
  t656 = -1.*t389*t488;
  t657 = t655 + t656;
  t724 = t116*t695;
  t725 = -1.*t70*t714;
  t727 = t724 + t725;
  t723 = t186*t719;
  t729 = t189*t727;
  t730 = t723 + t729;
  t810 = -1.*t28*t40*t71;
  t811 = -0.707107*t86*t56;
  t812 = -0.707107*t86*t28*t58;
  t813 = t810 + t811 + t812;
  t814 = t70*t813;
  t815 = 0.707107*t86*t28*t40;
  t816 = -0.5000003094490001*t71*t56;
  t817 = -0.5000003094490001*t28*t71*t58;
  t818 = t815 + t816 + t817;
  t819 = t150*t818;
  t820 = -0.707107*t86*t28*t40;
  t821 = 0.5000003094490001*t71*t56;
  t822 = 0.5000003094490001*t28*t71*t58;
  t823 = t820 + t821 + t822;
  t826 = -1.*t119*t823;
  t829 = t819 + t826;
  t832 = t116*t829;
  t833 = t814 + t832;
  t847 = 0.707107*t86*t28*t46;
  t848 = -1.*t71*t227;
  t849 = 0.707107*t86*t216;
  t850 = t847 + t848 + t849;
  t851 = t70*t850;
  t852 = -0.5000003094490001*t28*t71*t46;
  t853 = -0.707107*t86*t227;
  t854 = -0.5000003094490001*t71*t216;
  t855 = t852 + t853 + t854;
  t856 = -1.*t119*t855;
  t857 = 0.5000003094490001*t28*t71*t46;
  t858 = 0.707107*t86*t227;
  t859 = 0.5000003094490001*t71*t216;
  t860 = t857 + t858 + t859;
  t861 = t150*t860;
  t862 = t856 + t861;
  t863 = t116*t862;
  t864 = t851 + t863;
  t876 = -0.707107*t86*t15*t28;
  t877 = -1.*t71*t276;
  t878 = 0.707107*t86*t282;
  t879 = t876 + t877 + t878;
  t880 = t70*t879;
  t881 = 0.5000003094490001*t15*t28*t71;
  t882 = -0.707107*t86*t276;
  t883 = -0.5000003094490001*t71*t282;
  t884 = t881 + t882 + t883;
  t885 = -1.*t119*t884;
  t886 = -0.5000003094490001*t15*t28*t71;
  t887 = 0.707107*t86*t276;
  t888 = 0.5000003094490001*t71*t282;
  t889 = t886 + t887 + t888;
  t890 = t150*t889;
  t891 = t885 + t890;
  t892 = t116*t891;
  t893 = t880 + t892;
  t896 = t116*t879;
  t897 = -1.*t70*t891;
  t898 = t896 + t897;
  t895 = t186*t893;
  t899 = t189*t898;
  t900 = t895 + t899;
  t903 = t150*t884;
  t904 = t119*t889;
  t905 = t903 + t904;
  t907 = t308*t893;
  t908 = t185*t898;
  t909 = t907 + t908;
  t910 = t305*t909;
  t911 = t338*t900;
  t912 = t910 + t911;
  t906 = -1.*t302*t905;
  t913 = t271*t912;
  t914 = t906 + t913;
  t916 = t271*t905;
  t917 = t302*t912;
  t918 = t916 + t917;
  t840 = t116*t813;
  t841 = -1.*t70*t829;
  t842 = t840 + t841;
  t839 = t186*t833;
  t843 = t189*t842;
  t844 = t839 + t843;
  t869 = t116*t850;
  t870 = -1.*t70*t862;
  t871 = t869 + t870;
  t868 = t186*t864;
  t872 = t189*t871;
  t873 = t868 + t872;
  t945 = -1.*t150*t429;
  t946 = -1.*t119*t435;
  t947 = t945 + t946;
  t954 = -1.*t150*t462;
  t955 = -1.*t119*t464;
  t956 = t954 + t955;
  t963 = -1.*t150*t284;
  t964 = -1.*t119*t293;
  t965 = t963 + t964;
  t967 = t116*t186*t965;
  t968 = -1.*t70*t189*t965;
  t969 = t967 + t968;
  t973 = -1.*t185*t70*t965;
  t974 = t116*t308*t965;
  t975 = t973 + t974;
  t976 = t305*t975;
  t977 = t338*t969;
  t978 = t976 + t977;
  t982 = -1.*t302*t318;
  t983 = t271*t978;
  t984 = t982 + t983;
  t972 = t271*t318;
  t979 = t302*t978;
  t980 = t972 + t979;
  t958 = t116*t186*t956;
  t959 = -1.*t70*t189*t956;
  t960 = t958 + t959;
  t949 = t116*t186*t947;
  t950 = -1.*t70*t189*t947;
  t951 = t949 + t950;
  t1030 = -1.*t70*t314;
  t1031 = -1.*t116*t318;
  t1032 = t1030 + t1031;
  t1033 = t189*t1032;
  t1034 = t186*t332;
  t1035 = t1033 + t1034;
  t1038 = t338*t1035;
  t1039 = t185*t1032;
  t1040 = t308*t332;
  t1041 = t1039 + t1040;
  t1042 = t305*t1041;
  t1043 = t1038 + t1042;
  t1021 = -1.*t70*t234;
  t1022 = -1.*t116*t469;
  t1023 = t1021 + t1022;
  t1024 = t189*t1023;
  t1025 = t186*t478;
  t1026 = t1024 + t1025;
  t1012 = -1.*t70*t422;
  t1013 = -1.*t116*t438;
  t1014 = t1012 + t1013;
  t1015 = t189*t1014;
  t1016 = t186*t446;
  t1017 = t1015 + t1016;
  t1077 = -1.*t189*t321;
  t1078 = t1077 + t333;
  t1080 = t338*t1078;
  t1081 = -1.*t185*t321;
  t1082 = -1.*t189*t332;
  t1083 = t1081 + t1082;
  t1084 = t305*t1083;
  t1085 = t1080 + t1084;
  t1074 = -1.*t189*t471;
  t1075 = t1074 + t479;
  t1071 = -1.*t189*t442;
  t1072 = t1071 + t447;
  t1113 = -1.*t305*t342;
  t1114 = t403 + t1113;
  p_output1[0]=1.;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=1.;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=0;
  p_output1[13]=0;
  p_output1[14]=0;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
  p_output1[18]=0;
  p_output1[19]=0;
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=0;
  p_output1[24]=1.;
  p_output1[25]=0;
  p_output1[26]=0;
  p_output1[27]=0;
  p_output1[28]=0;
  p_output1[29]=1.;
  p_output1[30]=0;
  p_output1[31]=0;
  p_output1[32]=0;
  p_output1[33]=0;
  p_output1[34]=0;
  p_output1[35]=0;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=1.;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=1.;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
  p_output1[60]=0;
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=0;
  p_output1[64]=0;
  p_output1[65]=0;
  p_output1[66]=0;
  p_output1[67]=0;
  p_output1[68]=0;
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=1.;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=-0.1*t176 - 0.1029*t199 + 0.085*t15*t28 - 0.05*t62;
  p_output1[76]=-0.05*t216 - 0.1*t255 - 0.1029*t265 + 0.085*t28*t46;
  p_output1[77]=t347*t363*t375 + t367*t375*t380;
  p_output1[78]=(-1.*t337*t355 - 1.*t265*t389)*t393*t399 + 0.5*(2.*t363*t367 + 2.*t371*t380)*t399*t407*t408;
  p_output1[79]=((t185*t194 + t176*t308)*t337 + t199*t389)*t454*t494;
  p_output1[80]=0;
  p_output1[81]=0;
  p_output1[82]=0;
  p_output1[83]=0;
  p_output1[84]=0;
  p_output1[85]=0;
  p_output1[86]=0;
  p_output1[87]=0;
  p_output1[88]=0;
  p_output1[89]=0;
  p_output1[90]=0;
  p_output1[91]=0;
  p_output1[92]=0;
  p_output1[93]=0;
  p_output1[94]=0;
  p_output1[95]=0;
  p_output1[96]=1.;
  p_output1[97]=-0.085*t28 - 0.1*t521 - 0.1029*t528 - 0.05*t56*t58;
  p_output1[98]=-0.1*t559 - 0.085*t46*t56 - 0.1029*t567 + 0.05*t28*t46*t58;
  p_output1[99]=0.085*t15*t56 - 0.05*t15*t28*t58 - 0.1*t590 - 0.1029*t600;
  p_output1[100]=t367*t375*t616 + t347*t375*t623;
  p_output1[101]=t393*t399*(-1.*t389*t600 - 1.*t337*t610) + 0.5*t399*t407*t408*(2.*t371*t616 + 2.*t367*t623);
  p_output1[102]=t454*t494*(t337*(t308*t559 + t185*t565) + t389*t567) + t494*(t337*(t308*t521 + t185*t526) + t389*t528)*t657;
  p_output1[103]=0;
  p_output1[104]=0;
  p_output1[105]=0;
  p_output1[106]=0;
  p_output1[107]=0;
  p_output1[108]=0;
  p_output1[109]=0;
  p_output1[110]=0;
  p_output1[111]=0;
  p_output1[112]=0;
  p_output1[113]=0;
  p_output1[114]=0;
  p_output1[115]=0;
  p_output1[116]=0;
  p_output1[117]=0;
  p_output1[118]=0;
  p_output1[119]=0;
  p_output1[120]=0.05*t28*t40 - 0.1*t679 - 0.1029*t686;
  p_output1[121]=-0.05*t691 - 0.1*t719 - 0.1029*t730;
  p_output1[122]=-0.1*t749 - 0.1029*t756 - 0.05*t99;
  p_output1[123]=t347*t375*t772 + t367*t375*t778;
  p_output1[124]=t393*t399*(-1.*t389*t756 - 1.*t337*t767) + 0.5*t399*t407*t408*(2.*t367*t772 + 2.*t371*t778);
  p_output1[125]=t494*t657*(t337*(t308*t679 + t185*t684) + t389*t686) + t454*t494*(t337*(t308*t719 + t185*t727) + t389*t730);
  p_output1[126]=0;
  p_output1[127]=0;
  p_output1[128]=0;
  p_output1[129]=0;
  p_output1[130]=0;
  p_output1[131]=0;
  p_output1[132]=0;
  p_output1[133]=0;
  p_output1[134]=0;
  p_output1[135]=0;
  p_output1[136]=0;
  p_output1[137]=0;
  p_output1[138]=0;
  p_output1[139]=0;
  p_output1[140]=0;
  p_output1[141]=0;
  p_output1[142]=0;
  p_output1[143]=0;
  p_output1[144]=0;
  p_output1[145]=0;
  p_output1[146]=0;
  p_output1[147]=0;
  p_output1[148]=0;
  p_output1[149]=1.;
  p_output1[150]=0;
  p_output1[151]=0;
  p_output1[152]=0;
  p_output1[153]=0;
  p_output1[154]=0;
  p_output1[155]=0;
  p_output1[156]=0;
  p_output1[157]=0;
  p_output1[158]=0;
  p_output1[159]=0;
  p_output1[160]=0;
  p_output1[161]=0;
  p_output1[162]=0;
  p_output1[163]=0;
  p_output1[164]=0;
  p_output1[165]=0;
  p_output1[166]=0;
  p_output1[167]=0;
  p_output1[168]=0;
  p_output1[169]=0;
  p_output1[170]=0;
  p_output1[171]=0;
  p_output1[172]=0;
  p_output1[173]=1.;
  p_output1[174]=0;
  p_output1[175]=0;
  p_output1[176]=0;
  p_output1[177]=0;
  p_output1[178]=0;
  p_output1[179]=0;
  p_output1[180]=0;
  p_output1[181]=0;
  p_output1[182]=0;
  p_output1[183]=0;
  p_output1[184]=0;
  p_output1[185]=0;
  p_output1[186]=0;
  p_output1[187]=0;
  p_output1[188]=0;
  p_output1[189]=0;
  p_output1[190]=0;
  p_output1[191]=0;
  p_output1[192]=0;
  p_output1[193]=0;
  p_output1[194]=0;
  p_output1[195]=0;
  p_output1[196]=0;
  p_output1[197]=1.;
  p_output1[198]=0;
  p_output1[199]=0;
  p_output1[200]=0;
  p_output1[201]=0;
  p_output1[202]=0;
  p_output1[203]=0;
  p_output1[204]=0;
  p_output1[205]=0;
  p_output1[206]=0;
  p_output1[207]=0;
  p_output1[208]=0;
  p_output1[209]=0;
  p_output1[210]=0;
  p_output1[211]=0;
  p_output1[212]=0;
  p_output1[213]=0;
  p_output1[214]=0;
  p_output1[215]=0;
  p_output1[216]=0;
  p_output1[217]=0;
  p_output1[218]=0;
  p_output1[219]=0;
  p_output1[220]=0;
  p_output1[221]=1.;
  p_output1[222]=0;
  p_output1[223]=0;
  p_output1[224]=0;
  p_output1[225]=0;
  p_output1[226]=0;
  p_output1[227]=0;
  p_output1[228]=0;
  p_output1[229]=0;
  p_output1[230]=0;
  p_output1[231]=0;
  p_output1[232]=0;
  p_output1[233]=0;
  p_output1[234]=0;
  p_output1[235]=0;
  p_output1[236]=0;
  p_output1[237]=0;
  p_output1[238]=0;
  p_output1[239]=0;
  p_output1[240]=0;
  p_output1[241]=0;
  p_output1[242]=0;
  p_output1[243]=0;
  p_output1[244]=0;
  p_output1[245]=1.;
  p_output1[246]=0;
  p_output1[247]=0;
  p_output1[248]=0;
  p_output1[249]=0;
  p_output1[250]=0;
  p_output1[251]=0;
  p_output1[252]=0;
  p_output1[253]=0;
  p_output1[254]=0;
  p_output1[255]=0;
  p_output1[256]=0;
  p_output1[257]=0;
  p_output1[258]=0;
  p_output1[259]=0;
  p_output1[260]=0;
  p_output1[261]=0;
  p_output1[262]=0;
  p_output1[263]=0;
  p_output1[264]=0;
  p_output1[265]=0;
  p_output1[266]=0;
  p_output1[267]=0;
  p_output1[268]=0;
  p_output1[269]=1.;
  p_output1[270]=0;
  p_output1[271]=0;
  p_output1[272]=0;
  p_output1[273]=0;
  p_output1[274]=0;
  p_output1[275]=0;
  p_output1[276]=0;
  p_output1[277]=0;
  p_output1[278]=0;
  p_output1[279]=0;
  p_output1[280]=0;
  p_output1[281]=0;
  p_output1[282]=0;
  p_output1[283]=0;
  p_output1[284]=0;
  p_output1[285]=0;
  p_output1[286]=0;
  p_output1[287]=0;
  p_output1[288]=0;
  p_output1[289]=0;
  p_output1[290]=0;
  p_output1[291]=0;
  p_output1[292]=0;
  p_output1[293]=1.;
  p_output1[294]=0;
  p_output1[295]=0;
  p_output1[296]=0;
  p_output1[297]=0;
  p_output1[298]=0;
  p_output1[299]=0;
  p_output1[300]=0;
  p_output1[301]=0;
  p_output1[302]=0;
  p_output1[303]=0;
  p_output1[304]=0;
  p_output1[305]=0;
  p_output1[306]=0;
  p_output1[307]=0;
  p_output1[308]=0;
  p_output1[309]=0;
  p_output1[310]=0;
  p_output1[311]=0;
  p_output1[312]=0;
  p_output1[313]=0;
  p_output1[314]=0;
  p_output1[315]=0;
  p_output1[316]=0;
  p_output1[317]=1.;
  p_output1[318]=0;
  p_output1[319]=0;
  p_output1[320]=0;
  p_output1[321]=0;
  p_output1[322]=0;
  p_output1[323]=0;
  p_output1[324]=0;
  p_output1[325]=0;
  p_output1[326]=0;
  p_output1[327]=0;
  p_output1[328]=0;
  p_output1[329]=0;
  p_output1[330]=0;
  p_output1[331]=0;
  p_output1[332]=0;
  p_output1[333]=0;
  p_output1[334]=0;
  p_output1[335]=0;
  p_output1[336]=0;
  p_output1[337]=0;
  p_output1[338]=0;
  p_output1[339]=0;
  p_output1[340]=0;
  p_output1[341]=1.;
  p_output1[342]=0;
  p_output1[343]=0;
  p_output1[344]=0;
  p_output1[345]=0;
  p_output1[346]=0;
  p_output1[347]=0;
  p_output1[348]=0;
  p_output1[349]=0;
  p_output1[350]=0;
  p_output1[351]=0;
  p_output1[352]=0;
  p_output1[353]=0;
  p_output1[354]=0;
  p_output1[355]=0;
  p_output1[356]=0;
  p_output1[357]=0;
  p_output1[358]=0;
  p_output1[359]=0;
  p_output1[360]=0;
  p_output1[361]=0;
  p_output1[362]=0;
  p_output1[363]=0;
  p_output1[364]=0;
  p_output1[365]=1.;
  p_output1[366]=0;
  p_output1[367]=0;
  p_output1[368]=0;
  p_output1[369]=0;
  p_output1[370]=0;
  p_output1[371]=0;
  p_output1[372]=0;
  p_output1[373]=0;
  p_output1[374]=0;
  p_output1[375]=0;
  p_output1[376]=0;
  p_output1[377]=0;
  p_output1[378]=0;
  p_output1[379]=0;
  p_output1[380]=0;
  p_output1[381]=0;
  p_output1[382]=0;
  p_output1[383]=0;
  p_output1[384]=0;
  p_output1[385]=0;
  p_output1[386]=0;
  p_output1[387]=0;
  p_output1[388]=0;
  p_output1[389]=1.;
  p_output1[390]=0;
  p_output1[391]=0;
  p_output1[392]=0;
  p_output1[393]=0;
  p_output1[394]=0;
  p_output1[395]=0;
  p_output1[396]=0;
  p_output1[397]=0;
  p_output1[398]=0;
  p_output1[399]=0;
  p_output1[400]=0;
  p_output1[401]=0;
  p_output1[402]=0;
  p_output1[403]=0;
  p_output1[404]=0;
  p_output1[405]=0;
  p_output1[406]=0;
  p_output1[407]=0;
  p_output1[408]=0;
  p_output1[409]=0;
  p_output1[410]=0;
  p_output1[411]=0;
  p_output1[412]=0;
  p_output1[413]=1.;
  p_output1[414]=0;
  p_output1[415]=0;
  p_output1[416]=0;
  p_output1[417]=0;
  p_output1[418]=0;
  p_output1[419]=0;
  p_output1[420]=0;
  p_output1[421]=0;
  p_output1[422]=0;
  p_output1[423]=0;
  p_output1[424]=0;
  p_output1[425]=0;
  p_output1[426]=0;
  p_output1[427]=0;
  p_output1[428]=0;
  p_output1[429]=0;
  p_output1[430]=0;
  p_output1[431]=0;
  p_output1[432]=0;
  p_output1[433]=0;
  p_output1[434]=0;
  p_output1[435]=0;
  p_output1[436]=0;
  p_output1[437]=0;
  p_output1[438]=0;
  p_output1[439]=0;
  p_output1[440]=0;
  p_output1[441]=0;
  p_output1[442]=0;
  p_output1[443]=0;
  p_output1[444]=0;
  p_output1[445]=0;
  p_output1[446]=0;
  p_output1[447]=0;
  p_output1[448]=0;
  p_output1[449]=0;
  p_output1[450]=0;
  p_output1[451]=0;
  p_output1[452]=0;
  p_output1[453]=0;
  p_output1[454]=0;
  p_output1[455]=0;
  p_output1[456]=0;
  p_output1[457]=0;
  p_output1[458]=0;
  p_output1[459]=0;
  p_output1[460]=0;
  p_output1[461]=0;
  p_output1[462]=0;
  p_output1[463]=0;
  p_output1[464]=0;
  p_output1[465]=0;
  p_output1[466]=0;
  p_output1[467]=0;
  p_output1[468]=0;
  p_output1[469]=0;
  p_output1[470]=0;
  p_output1[471]=0;
  p_output1[472]=0;
  p_output1[473]=0;
  p_output1[474]=0;
  p_output1[475]=0;
  p_output1[476]=0;
  p_output1[477]=0;
  p_output1[478]=0;
  p_output1[479]=0;
  p_output1[480]=0;
  p_output1[481]=0;
  p_output1[482]=0;
  p_output1[483]=0;
  p_output1[484]=0;
  p_output1[485]=0;
  p_output1[486]=0;
  p_output1[487]=0;
  p_output1[488]=0;
  p_output1[489]=0;
  p_output1[490]=0;
  p_output1[491]=0;
  p_output1[492]=0;
  p_output1[493]=0;
  p_output1[494]=0;
  p_output1[495]=0;
  p_output1[496]=0;
  p_output1[497]=0;
  p_output1[498]=0;
  p_output1[499]=0;
  p_output1[500]=0;
  p_output1[501]=0;
  p_output1[502]=0;
  p_output1[503]=0;
  p_output1[504]=0;
  p_output1[505]=0;
  p_output1[506]=0;
  p_output1[507]=0;
  p_output1[508]=0;
  p_output1[509]=0;
  p_output1[510]=0;
  p_output1[511]=0;
  p_output1[512]=0;
  p_output1[513]=0;
  p_output1[514]=0;
  p_output1[515]=0;
  p_output1[516]=0;
  p_output1[517]=0;
  p_output1[518]=0;
  p_output1[519]=0;
  p_output1[520]=0;
  p_output1[521]=0;
  p_output1[522]=0;
  p_output1[523]=0;
  p_output1[524]=0;
  p_output1[525]=0;
  p_output1[526]=0;
  p_output1[527]=0;
  p_output1[528]=0;
  p_output1[529]=0;
  p_output1[530]=0;
  p_output1[531]=0;
  p_output1[532]=0;
  p_output1[533]=0;
  p_output1[534]=0;
  p_output1[535]=0;
  p_output1[536]=0;
  p_output1[537]=0;
  p_output1[538]=0;
  p_output1[539]=0;
  p_output1[540]=0;
  p_output1[541]=0;
  p_output1[542]=0;
  p_output1[543]=0;
  p_output1[544]=0;
  p_output1[545]=0;
  p_output1[546]=0;
  p_output1[547]=0;
  p_output1[548]=0;
  p_output1[549]=0;
  p_output1[550]=0;
  p_output1[551]=0;
  p_output1[552]=0;
  p_output1[553]=0;
  p_output1[554]=0;
  p_output1[555]=0;
  p_output1[556]=0;
  p_output1[557]=-0.1*t833 - 0.1029*t844;
  p_output1[558]=-0.1*t864 - 0.1029*t873;
  p_output1[559]=-0.1*t893 - 0.1029*t900;
  p_output1[560]=t347*t375*t914 + t367*t375*t918;
  p_output1[561]=t393*t399*(-1.*t389*t900 - 1.*t337*t909) + 0.5*t399*t407*t408*(2.*t367*t914 + 2.*t371*t918);
  p_output1[562]=t494*t657*(t337*(t308*t833 + t185*t842) + t389*t844) + t454*t494*(t337*(t308*t864 + t185*t871) + t389*t873);
  p_output1[563]=0;
  p_output1[564]=0;
  p_output1[565]=0;
  p_output1[566]=0;
  p_output1[567]=0;
  p_output1[568]=0;
  p_output1[569]=0;
  p_output1[570]=0;
  p_output1[571]=0;
  p_output1[572]=0;
  p_output1[573]=0;
  p_output1[574]=0;
  p_output1[575]=0;
  p_output1[576]=0;
  p_output1[577]=0;
  p_output1[578]=0;
  p_output1[579]=0;
  p_output1[580]=-0.1*t116*t947 - 0.1029*t951;
  p_output1[581]=-0.1*t116*t956 - 0.1029*t960;
  p_output1[582]=-0.1*t116*t965 - 0.1029*t969;
  p_output1[583]=t367*t375*t980 + t347*t375*t984;
  p_output1[584]=t393*t399*(-1.*t389*t969 - 1.*t337*t975) + 0.5*t399*t407*t408*(2.*t371*t980 + 2.*t367*t984);
  p_output1[585]=t494*t657*(t337*(t116*t308*t947 - 1.*t185*t70*t947) + t389*t951) + t454*t494*(t337*(t116*t308*t956 - 1.*t185*t70*t956) + t389*t960);
  p_output1[586]=0;
  p_output1[587]=0;
  p_output1[588]=0;
  p_output1[589]=0;
  p_output1[590]=0;
  p_output1[591]=0;
  p_output1[592]=0;
  p_output1[593]=0;
  p_output1[594]=0;
  p_output1[595]=0;
  p_output1[596]=0;
  p_output1[597]=0;
  p_output1[598]=0;
  p_output1[599]=0;
  p_output1[600]=0;
  p_output1[601]=0;
  p_output1[602]=0;
  p_output1[603]=-0.1029*t1017 - 0.1*t446;
  p_output1[604]=-0.1029*t1026 - 0.1*t478;
  p_output1[605]=-0.1029*t1035 - 0.1*t332;
  p_output1[606]=t1043*t271*t347*t375 + t1043*t302*t367*t375;
  p_output1[607]=(-1.*t1041*t337 - 1.*t1035*t389)*t393*t399 + 0.5*(2.*t1043*t271*t367 + 2.*t1043*t302*t371)*t399*t407*t408;
  p_output1[608]=t454*(t1026*t389 + t337*(t1023*t185 + t308*t478))*t494 + (t1017*t389 + t337*(t1014*t185 + t308*t446))*t494*t657;
  p_output1[609]=0;
  p_output1[610]=0;
  p_output1[611]=0;
  p_output1[612]=0;
  p_output1[613]=0;
  p_output1[614]=0;
  p_output1[615]=0;
  p_output1[616]=0;
  p_output1[617]=0;
  p_output1[618]=0;
  p_output1[619]=0;
  p_output1[620]=0;
  p_output1[621]=0;
  p_output1[622]=0;
  p_output1[623]=0;
  p_output1[624]=0;
  p_output1[625]=0;
  p_output1[626]=-0.1029*t1072;
  p_output1[627]=-0.1029*t1075;
  p_output1[628]=-0.1029*t1078;
  p_output1[629]=t1085*t271*t347*t375 + t1085*t302*t367*t375;
  p_output1[630]=(-1.*t1083*t337 - 1.*t1078*t389)*t393*t399 + 0.5*(2.*t1085*t271*t367 + 2.*t1085*t302*t371)*t399*t407*t408;
  p_output1[631]=t454*(t1075*t389 + t337*(-1.*t185*t471 - 1.*t189*t478))*t494 + (t1072*t389 + t337*(-1.*t185*t442 - 1.*t189*t446))*t494*t657;
  p_output1[632]=0;
  p_output1[633]=0;
  p_output1[634]=0;
  p_output1[635]=0;
  p_output1[636]=0;
  p_output1[637]=0;
  p_output1[638]=0;
  p_output1[639]=0;
  p_output1[640]=0;
  p_output1[641]=0;
  p_output1[642]=0;
  p_output1[643]=0;
  p_output1[644]=0;
  p_output1[645]=0;
  p_output1[646]=0;
  p_output1[647]=0;
  p_output1[648]=0;
  p_output1[649]=0;
  p_output1[650]=0;
  p_output1[651]=0;
  p_output1[652]=t1114*t271*t347*t375 + t1114*t302*t367*t375;
  p_output1[653]=(t336 + t337*t342)*t393*t399 + 0.5*(2.*t1114*t271*t367 + 2.*t1114*t302*t371)*t399*t407*t408;
  p_output1[654]=t454*(-1.*t305*t484 - 1.*t337*t488)*t494 + (-1.*t305*t448 - 1.*t337*t452)*t494*t657;
  p_output1[655]=0;
  p_output1[656]=0;
  p_output1[657]=0;
  p_output1[658]=0;
  p_output1[659]=0;
  p_output1[660]=0;
  p_output1[661]=0;
  p_output1[662]=0;
  p_output1[663]=0;
  p_output1[664]=0;
  p_output1[665]=0;
  p_output1[666]=0;
  p_output1[667]=0;
  p_output1[668]=0;
  p_output1[669]=0;
  p_output1[670]=0;
  p_output1[671]=0;
  p_output1[672]=0;
  p_output1[673]=0;
  p_output1[674]=0;
  p_output1[675]=Power(t347,2)*t375 + t368*t375;
  p_output1[676]=0.5*(2.*t347*t367 + 2.*t367*t371)*t399*t407*t408;
  p_output1[677]=0;
  p_output1[678]=0;
  p_output1[679]=0;
  p_output1[680]=0;
  p_output1[681]=0;
  p_output1[682]=0;
  p_output1[683]=0;
  p_output1[684]=0;
  p_output1[685]=0;
  p_output1[686]=0;
  p_output1[687]=0;
  p_output1[688]=0;
  p_output1[689]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 30 && ncols == 1) && 
      !(mrows == 1 && ncols == 30))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 23, (mwSize) 30, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "j_H_left_foot_stance_func.hh"

namespace SymFunction
{

void j_H_left_foot_stance_func_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
