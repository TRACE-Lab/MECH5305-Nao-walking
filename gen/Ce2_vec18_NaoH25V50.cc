/*
 * Automatically Generated from Mathematica.
 * Tue 10 Jul 2018 11:13:07 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;


#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t36571;
  double t21736;
  double t36443;
  double t4372;
  double t36228;
  double t37937;
  double t35853;
  double t36991;
  double t37841;
  double t704;
  double t39128;
  double t39703;
  double t40653;
  double t48985;
  double t49551;
  double t49762;
  double t49763;
  double t49764;
  double t49765;
  double t49768;
  double t49874;
  double t50048;
  double t50300;
  double t50301;
  double t50302;
  double t50316;
  double t50329;
  double t50330;
  double t50331;
  double t50335;
  double t50342;
  double t50273;
  double t50444;
  double t50449;
  double t50455;
  double t50456;
  double t50459;
  double t50463;
  double t50471;
  double t50473;
  double t50474;
  double t50475;
  double t50519;
  double t50514;
  double t50515;
  double t50508;
  double t50509;
  double t50510;
  double t50520;
  double t50544;
  double t50545;
  double t50546;
  double t50593;
  double t50594;
  double t50595;
  double t50597;
  double t50598;
  double t50599;
  double t50600;
  double t50601;
  double t50602;
  double t50303;
  double t50356;
  double t50369;
  double t50382;
  double t50395;
  double t50396;
  double t50397;
  double t50398;
  double t50399;
  double t50400;
  double t50401;
  double t50402;
  double t50403;
  double t50416;
  double t50429;
  double t50467;
  double t50636;
  double t50637;
  double t50512;
  double t50638;
  double t50639;
  double t50640;
  double t50641;
  double t50643;
  double t50644;
  double t50645;
  double t50646;
  double t50653;
  double t50516;
  double t50694;
  double t50699;
  double t50538;
  double t50671;
  double t50679;
  double t50543;
  double t50547;
  double t50548;
  double t50565;
  double t50566;
  double t50567;
  double t50568;
  double t50569;
  double t50570;
  double t50571;
  double t50572;
  double t50573;
  double t50574;
  double t50575;
  double t50576;
  double t50686;
  double t50688;
  double t37914;
  double t49766;
  double t49767;
  double t49843;
  double t50220;
  double t50221;
  double t50222;
  double t50226;
  double t50233;
  double t50247;
  double t50260;
  double t50286;
  double t50287;
  double t50297;
  double t50298;
  double t50642;
  double t50659;
  double t50726;
  double t50727;
  double t50728;
  double t50596;
  double t50603;
  double t50604;
  double t50605;
  double t50606;
  double t50607;
  double t50608;
  double t50624;
  double t50625;
  double t50626;
  double t50627;
  double t50628;
  double t50629;
  double t50630;
  double t50631;
  double t50771;
  double t50748;
  double t50749;
  double t50750;
  double t50773;
  double t50774;
  double t50775;
  double t50779;
  double t50803;
  double t50804;
  double t50719;
  double t50805;
  double t50806;
  double t50807;
  double t50808;
  double t50809;
  double t50811;
  double t50812;
  double t50813;
  double t50814;
  double t50815;
  double t50683;
  double t50825;
  double t50826;
  double t50827;
  double t50820;
  double t50821;
  double t50822;
  double t50845;
  double t50854;
  double t50753;
  double t50863;
  double t50867;
  double t50889;
  double t50894;
  double t50901;
  double t50778;
  double t50941;
  double t50919;
  double t50926;
  double t50927;
  double t50810;
  double t50971;
  double t50972;
  double t50973;
  double t50974;
  double t50975;
  double t50976;
  double t50978;
  double t50979;
  double t50980;
  double t50981;
  double t50837;
  double t50819;
  double t50828;
  double t50991;
  double t50992;
  double t50993;
  double t50995;
  double t50996;
  double t50997;
  double t50989;
  double t50990;
  double t50915;
  double t50929;
  double t50977;
  double t50982;
  double t50944;
  double t51034;
  double t51038;
  double t51042;
  double t50954;
  double t50957;
  double t51108;
  double t51109;
  double t51110;
  double t51111;
  double t51075;
  double t51076;
  double t51077;
  double t50963;
  double t50994;
  double t51130;
  double t51131;
  double t51132;
  double t51133;
  double t51135;
  double t51136;
  double t51137;
  double t51138;
  double t51139;
  double t51140;
  double t50985;
  double t51001;
  double t51009;
  double t51146;
  double t51147;
  double t51148;
  double t51150;
  double t51151;
  double t51152;
  double t51144;
  double t51145;
  double t51086;
  double t51098;
  double t51134;
  double t51141;
  double t51105;
  double t51190;
  double t51194;
  double t51198;
  double t51113;
  double t51115;
  double t51222;
  double t51226;
  double t51233;
  double t51122;
  double t51271;
  double t51272;
  double t51273;
  double t51274;
  double t51275;
  double t51276;
  double t51277;
  double t51278;
  double t51279;
  double t51280;
  double t51281;
  double t51306;
  double t51307;
  double t51308;
  double t51284;
  double t51285;
  double t51286;
  double t51288;
  double t51289;
  double t51290;
  double t51294;
  double t51295;
  double t51296;
  double t51298;
  double t51299;
  double t51300;
  double t51351;
  double t51352;
  double t51353;
  double t51369;
  double t51370;
  double t51371;
  double t51358;
  double t51363;
  double t51367;
  double t51236;
  double t51240;
  double t51389;
  double t51390;
  double t51391;
  double t51385;
  double t51386;
  double t51387;
  double t51381;
  double t51382;
  double t51383;
  double t51260;
  double t51368;
  double t51372;
  double t51373;
  double t51246;
  double t51251;
  double t51253;
  double t51395;
  double t51397;
  double t51153;
  double t51375;
  double t51376;
  double t51157;
  double t51161;
  double t51169;
  double t51446;
  double t51450;
  double t51454;
  double t51459;
  double t51460;
  double t51461;
  double t51456;
  double t51457;
  double t51458;
  double t51405;
  double t51471;
  double t51472;
  double t51473;
  double t51388;
  double t51398;
  double t51482;
  double t51483;
  double t51484;
  double t51486;
  double t51487;
  double t51488;
  double t51455;
  double t51462;
  double t51463;
  double t51411;
  double t51417;
  double t51418;
  double t51492;
  double t51493;
  double t51430;
  double t51426;
  double t51465;
  double t51466;
  double t51435;
  double t51436;
  double t51334;
  double t51338;
  double t51342;
  double t50479;
  double t50484;
  double t50489;
  double t50511;
  double t50513;
  double t50517;
  double t50518;
  double t50536;
  double t50537;
  double t50539;
  double t50540;
  double t50541;
  double t50542;
  double t51317;
  double t51324;
  double t51329;
  double t50664;
  double t50670;
  double t50675;
  double t50689;
  double t50690;
  double t50704;
  double t50717;
  double t50718;
  double t50720;
  double t50721;
  double t50722;
  double t51539;
  double t51540;
  double t51541;
  double t50724;
  double t50725;
  double t50729;
  double t50742;
  double t50743;
  double t50744;
  double t50746;
  double t50747;
  double t50751;
  double t50752;
  double t50754;
  double t50767;
  double t50768;
  double t50769;
  double t50772;
  double t50776;
  double t50777;
  double t50792;
  double t50793;
  double t50794;
  double t50796;
  double t50797;
  double t50798;
  double t50799;
  double t50816;
  double t50817;
  double t50818;
  double t50823;
  double t50824;
  double t50829;
  double t50830;
  double t50850;
  double t50855;
  double t50859;
  double t50870;
  double t50878;
  double t50879;
  double t50884;
  double t50902;
  double t50903;
  double t50904;
  double t50905;
  double t50907;
  double t50914;
  double t50916;
  double t50917;
  double t50918;
  double t50928;
  double t50930;
  double t50931;
  double t50932;
  double t50939;
  double t50942;
  double t50943;
  double t50951;
  double t50952;
  double t50953;
  double t50955;
  double t50956;
  double t50958;
  double t50959;
  double t50960;
  double t50962;
  double t50964;
  double t50965;
  double t50966;
  double t50967;
  double t50983;
  double t50984;
  double t50986;
  double t50987;
  double t50988;
  double t50998;
  double t50999;
  double t51000;
  double t51002;
  double t51017;
  double t51022;
  double t51026;
  double t51027;
  double t51050;
  double t51051;
  double t51052;
  double t51056;
  double t51061;
  double t51066;
  double t51073;
  double t51078;
  double t51079;
  double t51087;
  double t51088;
  double t51089;
  double t51090;
  double t51091;
  double t51099;
  double t51100;
  double t51101;
  double t51102;
  double t51104;
  double t51106;
  double t51107;
  double t51112;
  double t51114;
  double t51116;
  double t51117;
  double t51118;
  double t51119;
  double t51121;
  double t51123;
  double t51124;
  double t51125;
  double t51126;
  double t51142;
  double t51143;
  double t51149;
  double t51154;
  double t51155;
  double t51156;
  double t51158;
  double t51159;
  double t51160;
  double t51162;
  double t51177;
  double t51182;
  double t51186;
  double t51202;
  double t51210;
  double t51211;
  double t51212;
  double t51234;
  double t51235;
  double t51237;
  double t51238;
  double t51239;
  double t51241;
  double t51242;
  double t51243;
  double t51245;
  double t51247;
  double t51248;
  double t51249;
  double t51250;
  double t51252;
  double t51254;
  double t51255;
  double t51256;
  double t51258;
  double t51259;
  double t51261;
  double t51262;
  double t51263;
  double t51309;
  double t51310;
  double t51333;
  double t51345;
  double t51348;
  double t51287;
  double t51291;
  double t51292;
  double t51297;
  double t51301;
  double t51302;
  double t51374;
  double t51377;
  double t51378;
  double t51379;
  double t51384;
  double t51392;
  double t51393;
  double t51394;
  double t51396;
  double t51399;
  double t51400;
  double t51401;
  double t51403;
  double t51404;
  double t51406;
  double t51407;
  double t51408;
  double t51410;
  double t51412;
  double t51413;
  double t51414;
  double t51415;
  double t51416;
  double t51419;
  double t51420;
  double t51421;
  double t51423;
  double t51424;
  double t51425;
  double t51427;
  double t51428;
  double t51429;
  double t51431;
  double t51432;
  double t51433;
  double t51434;
  double t51437;
  double t51438;
  double t51439;
  double t51464;
  double t51467;
  double t51468;
  double t51469;
  double t51474;
  double t51475;
  double t51476;
  double t51477;
  double t51478;
  double t51479;
  double t51481;
  double t51485;
  double t51489;
  double t51490;
  double t51491;
  double t51494;
  double t51495;
  double t51496;
  double t51497;
  double t51498;
  double t51500;
  double t51501;
  double t51502;
  double t51503;
  double t51504;
  double t51505;
  double t51506;
  double t51507;
  double t51508;
  double t51509;
  double t51510;
  double t51511;
  double t51513;
  double t51514;
  double t51515;
  double t51516;
  double t51517;
  double t51518;
  double t51519;
  double t51520;
  double t51521;
  double t51522;
  double t51523;
  double t51524;
  double t51525;
  double t51526;
  double t51527;
  double t51528;
  double t51529;
  double t51606;
  double t51607;
  double t51608;
  double t51282;
  double t51283;
  double t51293;
  double t51303;
  double t51304;
  double t51576;
  double t51577;
  double t51578;
  double t51579;
  double t51580;
  double t51664;
  double t51665;
  double t51676;
  double t51670;
  double t51671;
  double t51672;
  double t51673;
  double t51675;
  double t51677;
  double t51678;
  double t51682;
  double t51683;
  double t51684;
  double t51686;
  double t51687;
  double t51690;
  double t51691;
  double t51692;
  double t51680;
  double t51470;
  double t51480;
  double t51499;
  double t51512;
  double t51530;
  double t51531;
  double t51655;
  double t51656;
  double t51657;
  double t51658;
  double t51659;
  double t51660;
  double t51593;
  double t51594;
  double t51595;
  double t51596;
  double t51597;
  double t51598;
  double t51803;
  double t51804;
  double t51815;
  double t51785;
  double t51786;
  double t51787;
  double t51697;
  double t51698;
  double t51699;
  double t51700;
  double t51809;
  double t51810;
  double t51811;
  double t51812;
  double t51814;
  double t51816;
  double t51817;
  double t51821;
  double t51822;
  double t51823;
  double t51825;
  double t51826;
  double t51713;
  double t51714;
  double t51715;
  double t51819;
  double t51729;
  double t51730;
  double t51731;
  double t51732;
  double t51746;
  double t51747;
  double t51748;
  double t51749;
  double t51750;
  double t51751;
  double t51752;
  double t51766;
  double t51767;
  double t51768;
  double t51380;
  double t51402;
  double t51409;
  double t51422;
  double t51440;
  double t51441;
  double t51648;
  double t51649;
  double t51650;
  double t51651;
  double t51652;
  double t51653;
  double t51586;
  double t51587;
  double t51588;
  double t51589;
  double t51590;
  double t51591;
  double t51780;
  double t51781;
  double t51782;
  double t51783;
  double t51784;
  double t51788;
  double t51909;
  double t51910;
  double t51921;
  double t51915;
  double t51916;
  double t51917;
  double t51918;
  double t51920;
  double t51922;
  double t51923;
  double t51927;
  double t51928;
  double t51929;
  double t51931;
  double t51932;
  double t51925;
  double t51187;
  double t51217;
  double t51244;
  double t51257;
  double t51264;
  double t51265;
  double t51635;
  double t51636;
  double t51637;
  double t51638;
  double t51639;
  double t51640;
  double t51568;
  double t51569;
  double t51570;
  double t51571;
  double t51572;
  double t51573;
  double t51879;
  double t51880;
  double t51881;
  double t51882;
  double t51883;
  double t51884;
  double t51761;
  double t51762;
  double t51763;
  double t51764;
  double t51765;
  double t51769;
  double t52009;
  double t52010;
  double t52021;
  double t52015;
  double t52016;
  double t52017;
  double t52018;
  double t52020;
  double t52022;
  double t52023;
  double t52027;
  double t52028;
  double t52029;
  double t52031;
  double t52032;
  double t52025;
  double t51972;
  double t51973;
  double t51974;
  double t51975;
  double t51976;
  double t51977;
  double t51030;
  double t51074;
  double t51103;
  double t51120;
  double t51127;
  double t51128;
  double t51628;
  double t51629;
  double t51630;
  double t51631;
  double t51632;
  double t51633;
  double t51561;
  double t51562;
  double t51563;
  double t51564;
  double t51565;
  double t51566;
  double t51866;
  double t51867;
  double t51868;
  double t51869;
  double t51870;
  double t51871;
  double t51741;
  double t51742;
  double t51743;
  double t51744;
  double t51745;
  double t51753;
  double t52110;
  double t52109;
  double t52111;
  double t52113;
  double t52114;
  double t52115;
  double t52103;
  double t52104;
  double t52117;
  double t52118;
  double t52119;
  double t52120;
  double t52122;
  double t52123;
  double t52124;
  double t52136;
  double t52059;
  double t52060;
  double t52061;
  double t52062;
  double t52063;
  double t52064;
  double t51959;
  double t51960;
  double t51961;
  double t51962;
  double t51963;
  double t51964;
  double t50880;
  double t50906;
  double t50940;
  double t50961;
  double t50968;
  double t50969;
  double t51621;
  double t51622;
  double t51623;
  double t51624;
  double t51625;
  double t51626;
  double t51554;
  double t51555;
  double t51556;
  double t51557;
  double t51558;
  double t51559;
  double t51853;
  double t51854;
  double t51855;
  double t51856;
  double t51857;
  double t51858;
  double t51724;
  double t51725;
  double t51726;
  double t51727;
  double t51728;
  double t51733;
  double t52199;
  double t52197;
  double t52198;
  double t52200;
  double t52202;
  double t52203;
  double t52191;
  double t52192;
  double t52205;
  double t52206;
  double t52207;
  double t52208;
  double t52210;
  double t52211;
  double t52212;
  double t52224;
  double t52140;
  double t52141;
  double t52142;
  double t52143;
  double t52144;
  double t52145;
  double t52034;
  double t52035;
  double t52036;
  double t52037;
  double t52038;
  double t52039;
  double t51934;
  double t51935;
  double t51936;
  double t51937;
  double t51938;
  double t51939;
  double t50723;
  double t50745;
  double t50770;
  double t50795;
  double t50800;
  double t50801;
  double t51614;
  double t51615;
  double t51616;
  double t51617;
  double t51618;
  double t51619;
  double t51547;
  double t51548;
  double t51549;
  double t51550;
  double t51551;
  double t51552;
  double t51828;
  double t51829;
  double t51830;
  double t51831;
  double t51832;
  double t51833;
  double t51689;
  double t51693;
  double t51694;
  double t51695;
  double t51696;
  double t51701;
  double t52277;
  double t52284;
  double t52285;
  double t52286;
  double t52288;
  double t52289;
  double t52290;
  double t52278;
  double t52279;
  double t52281;
  double t52282;
  double t52214;
  double t52215;
  double t52216;
  double t52217;
  double t52218;
  double t52219;
  double t52296;
  double t52297;
  double t52298;
  double t52126;
  double t52127;
  double t52128;
  double t52129;
  double t52130;
  double t52131;
  double t52046;
  double t52047;
  double t52048;
  double t52049;
  double t52050;
  double t52051;
  double t51946;
  double t51947;
  double t51948;
  double t51949;
  double t51950;
  double t51951;
  double t50577;
  double t50632;
  double t50633;
  double t50634;
  double t51609;
  double t51610;
  double t51611;
  double t51612;
  double t51542;
  double t51543;
  double t51544;
  double t51545;
  double t51840;
  double t51841;
  double t51842;
  double t51843;
  double t51844;
  double t51845;
  double t51708;
  double t51709;
  double t51710;
  double t51711;
  double t51712;
  double t51716;
  double t52273;
  double t52274;
  double t52275;
  double t52193;
  double t52194;
  double t52195;
  double t52105;
  double t52106;
  double t52107;
  double t52011;
  double t52012;
  double t52013;
  double t51911;
  double t51912;
  double t51913;
  double t50299;
  double t50430;
  double t50431;
  double t51602;
  double t51603;
  double t51604;
  double t51535;
  double t51536;
  double t51537;
  double t51805;
  double t51806;
  double t51807;
  double t51666;
  double t51667;
  double t51668;
  t36571 = Sin(var1[17]);
  t21736 = Cos(var1[17]);
  t36443 = Sin(var1[15]);
  t4372 = Cos(var1[15]);
  t36228 = Cos(var1[16]);
  t37937 = Sin(var1[13]);
  t35853 = t4372*t21736;
  t36991 = -1.*t36228*t36443*t36571;
  t37841 = t35853 + t36991;
  t704 = Cos(var1[13]);
  t39128 = Cos(var1[14]);
  t39703 = Sin(var1[16]);
  t40653 = t39128*t39703*t36571;
  t48985 = Sin(var1[14]);
  t49551 = -1.*t21736*t36443;
  t49762 = -1.*t4372*t36228*t36571;
  t49763 = t49551 + t49762;
  t49764 = -1.*t48985*t49763;
  t49765 = t40653 + t49764;
  t49768 = Sin(var1[4]);
  t49874 = Cos(var1[4]);
  t50048 = Cos(var1[5]);
  t50300 = -1.*t36228*t21736*t36443;
  t50301 = -1.*t4372*t36571;
  t50302 = t50300 + t50301;
  t50316 = t39128*t21736*t39703;
  t50329 = -1.*t4372*t36228*t21736;
  t50330 = t36443*t36571;
  t50331 = t50329 + t50330;
  t50335 = -1.*t48985*t50331;
  t50342 = t50316 + t50335;
  t50273 = Sin(var1[5]);
  t50444 = -1.*t21736;
  t50449 = 1. + t50444;
  t50455 = 0.1*t50449;
  t50456 = 0.10308*t21736;
  t50459 = 0.00088*t36571;
  t50463 = t50455 + t50456 + t50459;
  t50471 = -0.113*t50449;
  t50473 = -0.11212*t21736;
  t50474 = -0.00308*t36571;
  t50475 = t50471 + t50473 + t50474;
  t50519 = -1.*t21736*t50475;
  t50514 = 0.00088*t21736;
  t50515 = t50514 + t50474;
  t50508 = -0.00308*t21736;
  t50509 = -0.00088*t36571;
  t50510 = t50508 + t50509;
  t50520 = -1.*t50463*t36571;
  t50544 = t39128*t36228;
  t50545 = -1.*t4372*t48985*t39703;
  t50546 = t50544 + t50545;
  t50593 = t36228*t21736*t36443;
  t50594 = t4372*t36571;
  t50595 = t50593 + t50594;
  t50597 = -1.*t39128*t21736*t39703;
  t50598 = t4372*t36228*t21736;
  t50599 = -1.*t36443*t36571;
  t50600 = t50598 + t50599;
  t50601 = -1.*t48985*t50600;
  t50602 = t50597 + t50601;
  t50303 = t704*t50302;
  t50356 = -1.*t37937*t50342;
  t50369 = t50303 + t50356;
  t50382 = t50369*t49768;
  t50395 = t37937*t50302;
  t50396 = t704*t50342;
  t50397 = t50395 + t50396;
  t50398 = t50048*t50397;
  t50399 = t21736*t48985*t39703;
  t50400 = t39128*t50331;
  t50401 = t50399 + t50400;
  t50402 = -1.*t50401*t50273;
  t50403 = t50398 + t50402;
  t50416 = t49874*t50403;
  t50429 = t50382 + t50416;
  t50467 = t21736*t50463;
  t50636 = -1.*t36228;
  t50637 = 1. + t50636;
  t50512 = -1.*t21736*t50463;
  t50638 = -0.113*t50637;
  t50639 = 0.09029*t39703;
  t50640 = t36228*t50475;
  t50641 = t50638 + t50639 + t50640;
  t50643 = 0.105*t50637;
  t50644 = 0.19529*t36228;
  t50645 = -0.113*t39703;
  t50646 = -1.*t39703*t50475;
  t50653 = t50643 + t50644 + t50645 + t50646;
  t50516 = -1.*t50515*t36571;
  t50694 = -1.*t36228*t21736*t50641;
  t50699 = t21736*t39703*t50653;
  t50538 = t21736*t50515;
  t50671 = Power(t36228,2);
  t50679 = Power(t39703,2);
  t50543 = t704*t36443*t39703;
  t50547 = -1.*t37937*t50546;
  t50548 = t50543 + t50547;
  t50565 = t50548*t49768;
  t50566 = t37937*t36443*t39703;
  t50567 = t704*t50546;
  t50568 = t50566 + t50567;
  t50569 = t50048*t50568;
  t50570 = t36228*t48985;
  t50571 = t39128*t4372*t39703;
  t50572 = t50570 + t50571;
  t50573 = -1.*t50572*t50273;
  t50574 = t50569 + t50573;
  t50575 = t49874*t50574;
  t50576 = t50565 + t50575;
  t50686 = t36228*t50641*t36571;
  t50688 = -1.*t39703*t50653*t36571;
  t37914 = t704*t37841;
  t49766 = -1.*t37937*t49765;
  t49767 = t37914 + t49766;
  t49843 = t49767*t49768;
  t50220 = t37937*t37841;
  t50221 = t704*t49765;
  t50222 = t50220 + t50221;
  t50226 = t50048*t50222;
  t50233 = t48985*t39703*t36571;
  t50247 = t39128*t49763;
  t50260 = t50233 + t50247;
  t50286 = -1.*t50260*t50273;
  t50287 = t50226 + t50286;
  t50297 = t49874*t50287;
  t50298 = t49843 + t50297;
  t50642 = -1.*t36228*t50641*t36571;
  t50659 = t39703*t50653*t36571;
  t50726 = t39703*t50641;
  t50727 = t36228*t50653;
  t50728 = t50726 + t50727;
  t50596 = t704*t50595;
  t50603 = -1.*t37937*t50602;
  t50604 = t50596 + t50603;
  t50605 = t50604*t49768;
  t50606 = t37937*t50595;
  t50607 = t704*t50602;
  t50608 = t50606 + t50607;
  t50624 = t50048*t50608;
  t50625 = -1.*t21736*t48985*t39703;
  t50626 = t39128*t50600;
  t50627 = t50625 + t50626;
  t50628 = -1.*t50627*t50273;
  t50629 = t50624 + t50628;
  t50630 = t49874*t50629;
  t50631 = t50605 + t50630;
  t50771 = 0.113*t21736;
  t50748 = -1.*t39703*t50641;
  t50749 = -1.*t36228*t50653;
  t50750 = t50748 + t50749;
  t50773 = -0.1*t36228*t36571;
  t50774 = t36228*t21736*t50641;
  t50775 = -1.*t21736*t39703*t50653;
  t50779 = t50463*t36571;
  t50803 = -1.*t4372;
  t50804 = 1. + t50803;
  t50719 = -1.*t50679*t50510*t36571;
  t50805 = 0.1*t50804;
  t50806 = 0.113*t36443;
  t50807 = t36443*t50641;
  t50808 = t4372*t50463;
  t50809 = t50805 + t50806 + t50807 + t50808;
  t50811 = -0.113*t50804;
  t50812 = 0.1*t36443;
  t50813 = t4372*t50641;
  t50814 = -1.*t36443*t50463;
  t50815 = t50811 + t50812 + t50813 + t50814;
  t50683 = -1.*t21736*t50679*t50510;
  t50825 = t4372*t50515;
  t50826 = t36228*t36443*t50510;
  t50827 = t50825 + t50826;
  t50820 = -1.*t36443*t50515;
  t50821 = t4372*t36228*t50510;
  t50822 = t50820 + t50821;
  t50845 = -1.*t50815*t49763;
  t50854 = -1.*t50809*t37841;
  t50753 = t21736*t50679*t50510;
  t50863 = t50815*t49763;
  t50867 = t50809*t37841;
  t50889 = t36443*t39703*t50809;
  t50894 = t4372*t39703*t50815;
  t50901 = t50727 + t50889 + t50894;
  t50778 = t50679*t50510*t36571;
  t50941 = -0.098*t39703*t36571;
  t50919 = -1.*t36443*t39703*t50809;
  t50926 = -1.*t4372*t39703*t50815;
  t50927 = t50749 + t50919 + t50926;
  t50810 = -1.*t50809*t50595;
  t50971 = -1.*t39128;
  t50972 = 1. + t50971;
  t50973 = -0.098*t50972;
  t50974 = t48985*t50653;
  t50975 = t39128*t50815;
  t50976 = t50973 + t50974 + t50975;
  t50978 = -0.098*t48985;
  t50979 = t39128*t50653;
  t50980 = -1.*t48985*t50815;
  t50981 = t50978 + t50979 + t50980;
  t50837 = -1.*t50827*t50595;
  t50819 = t50809*t50302;
  t50828 = t50827*t37841;
  t50991 = t39128*t50822;
  t50992 = -1.*t48985*t39703*t50510;
  t50993 = t50991 + t50992;
  t50995 = -1.*t48985*t50822;
  t50996 = -1.*t39128*t39703*t50510;
  t50997 = t50995 + t50996;
  t50989 = -1.*t50976*t50260;
  t50990 = -1.*t50981*t49765;
  t50915 = -1.*t36443*t39703*t50827;
  t50929 = t50827*t50595;
  t50977 = t50976*t50260;
  t50982 = t50981*t49765;
  t50944 = t36443*t39703*t50827;
  t51034 = t50572*t50976;
  t51038 = t50546*t50981;
  t51042 = t51034 + t51038 + t50889;
  t50954 = -1.*t50809*t50302;
  t50957 = -1.*t50827*t37841;
  t51108 = -1.*t39128*t39703*t36571;
  t51109 = t48985*t49763;
  t51110 = t51108 + t51109;
  t51111 = 0.1*t51110;
  t51075 = -1.*t50572*t50976;
  t51076 = -1.*t50546*t50981;
  t51077 = t51075 + t51076 + t50919;
  t50963 = t50809*t50595;
  t50994 = -1.*t50993*t50627;
  t51130 = -0.1*t37937;
  t51131 = t704*t50981;
  t51132 = t37937*t50809;
  t51133 = t51130 + t51131 + t51132;
  t51135 = -1.*t704;
  t51136 = 1. + t51135;
  t51137 = 0.1*t51136;
  t51138 = -1.*t37937*t50981;
  t51139 = t704*t50809;
  t51140 = t51137 + t51138 + t51139;
  t50985 = -1.*t50976*t50627;
  t51001 = t50993*t50260;
  t51009 = t50976*t50401;
  t51146 = t37937*t50827;
  t51147 = t704*t50997;
  t51148 = t51146 + t51147;
  t51150 = t704*t50827;
  t51151 = -1.*t37937*t50997;
  t51152 = t51150 + t51151;
  t51144 = -1.*t51133*t50222;
  t51145 = -1.*t51140*t49767;
  t51086 = -1.*t50572*t50993;
  t51098 = t50993*t50627;
  t51134 = t51133*t50222;
  t51141 = t51140*t49767;
  t51105 = t50572*t50993;
  t51190 = t50548*t51140;
  t51194 = t50568*t51133;
  t51198 = t51190 + t51194 + t51034;
  t51113 = -1.*t50993*t50260;
  t51115 = -1.*t50976*t50401;
  t51222 = -1.*t50548*t51140;
  t51226 = -1.*t50568*t51133;
  t51233 = t51222 + t51226 + t51075;
  t51122 = t50976*t50627;
  t51271 = Sin(var1[3]);
  t51272 = t50048*t50260;
  t51273 = t50222*t50273;
  t51274 = t51272 + t51273;
  t51275 = t51271*t51274;
  t51276 = Cos(var1[3]);
  t51277 = t49874*t49767;
  t51278 = -1.*t49768*t50287;
  t51279 = t51277 + t51278;
  t51280 = t51276*t51279;
  t51281 = t51275 + t51280;
  t51306 = t51276*t51274;
  t51307 = -1.*t51271*t51279;
  t51308 = t51306 + t51307;
  t51284 = t50048*t50627;
  t51285 = t50608*t50273;
  t51286 = t51284 + t51285;
  t51288 = t49874*t50604;
  t51289 = -1.*t49768*t50629;
  t51290 = t51288 + t51289;
  t51294 = t50048*t50401;
  t51295 = t50397*t50273;
  t51296 = t51294 + t51295;
  t51298 = t49874*t50369;
  t51299 = -1.*t49768*t50403;
  t51300 = t51298 + t51299;
  t51351 = t50048*t50572;
  t51352 = t50568*t50273;
  t51353 = t51351 + t51352;
  t51369 = t50048*t51133;
  t51370 = -1.*t50976*t50273;
  t51371 = t51369 + t51370;
  t51358 = t50048*t50976;
  t51363 = t51133*t50273;
  t51367 = t51358 + t51363;
  t51236 = -1.*t50548*t51152;
  t51240 = t51152*t50604;
  t51389 = t50048*t51148;
  t51390 = -1.*t50993*t50273;
  t51391 = t51389 + t51390;
  t51385 = t50048*t50993;
  t51386 = t51148*t50273;
  t51387 = t51385 + t51386;
  t51381 = -1.*t51353*t51367;
  t51382 = -1.*t50574*t51371;
  t51383 = t51222 + t51381 + t51382;
  t51260 = t51140*t50604;
  t51368 = t51353*t51367;
  t51372 = t50574*t51371;
  t51373 = t51190 + t51368 + t51372;
  t51246 = t50548*t51152;
  t51251 = -1.*t51152*t49767;
  t51253 = -1.*t51140*t50369;
  t51395 = t51371*t50287;
  t51397 = t51367*t51274;
  t51153 = -1.*t51152*t50604;
  t51375 = -1.*t51371*t50287;
  t51376 = -1.*t51367*t51274;
  t51157 = -1.*t51140*t50604;
  t51161 = t51152*t49767;
  t51169 = t51140*t50369;
  t51446 = t51140*t49768;
  t51450 = t49874*t51371;
  t51454 = t51446 + t51450;
  t51459 = t49874*t51140;
  t51460 = -1.*t49768*t51371;
  t51461 = t51459 + t51460;
  t51456 = t49874*t50548;
  t51457 = -1.*t49768*t50574;
  t51458 = t51456 + t51457;
  t51405 = t51367*t51286;
  t51471 = -1.*t50576*t51454;
  t51472 = -1.*t51458*t51461;
  t51473 = t51381 + t51471 + t51472;
  t51388 = -1.*t51353*t51387;
  t51398 = t51387*t51286;
  t51482 = t51152*t49768;
  t51483 = t49874*t51391;
  t51484 = t51482 + t51483;
  t51486 = t49874*t51152;
  t51487 = -1.*t49768*t51391;
  t51488 = t51486 + t51487;
  t51455 = t50576*t51454;
  t51462 = t51458*t51461;
  t51463 = t51368 + t51455 + t51462;
  t51411 = t51353*t51387;
  t51417 = -1.*t51387*t51274;
  t51418 = -1.*t51367*t51296;
  t51492 = t51454*t50298;
  t51493 = t51461*t51279;
  t51430 = -1.*t51367*t51286;
  t51426 = -1.*t51387*t51286;
  t51465 = -1.*t51454*t50298;
  t51466 = -1.*t51461*t51279;
  t51435 = t51387*t51274;
  t51436 = t51367*t51296;
  t51334 = t51276*t51296;
  t51338 = -1.*t51271*t51300;
  t51342 = t51334 + t51338;
  t50479 = -1.*t50475*t36571;
  t50484 = t50467 + t50479;
  t50489 = t21736*t50484;
  t50511 = -1.*t21736*t50510;
  t50513 = t50475*t36571;
  t50517 = t50511 + t50512 + t50513 + t50516;
  t50518 = t21736*t50517;
  t50536 = t50519 + t50520;
  t50537 = -1.*t36571*t50536;
  t50539 = -1.*t50510*t36571;
  t50540 = t50519 + t50538 + t50539 + t50520;
  t50541 = t36571*t50540;
  t50542 = t50489 + t50518 + t50537 + t50541;
  t51317 = t51276*t51286;
  t51324 = -1.*t51271*t51290;
  t51329 = t51317 + t51324;
  t50664 = t50467 + t50642 + t50659;
  t50670 = t39703*t36571*t50664;
  t50675 = -1.*t50671*t21736*t50510;
  t50689 = t50675 + t50683 + t50512 + t50686 + t50688 + t50516;
  t50690 = t39703*t36571*t50689;
  t50704 = t50694 + t50699 + t50520;
  t50717 = t21736*t39703*t50704;
  t50718 = -1.*t50671*t50510*t36571;
  t50720 = t50694 + t50699 + t50538 + t50718 + t50719 + t50520;
  t50721 = -1.*t21736*t39703*t50720;
  t50722 = t50670 + t50690 + t50717 + t50721;
  t51539 = t51276*t51353;
  t51540 = -1.*t51271*t51458;
  t51541 = t51539 + t51540;
  t50724 = 0.1*t36228*t21736;
  t50725 = 0.113*t36571;
  t50729 = t39703*t50728*t36571;
  t50742 = t50512 + t50686 + t50688;
  t50743 = t36228*t50742;
  t50744 = t50724 + t50725 + t50729 + t50743;
  t50746 = -0.1*t36228*t21736;
  t50747 = -0.113*t36571;
  t50751 = t39703*t50750*t36571;
  t50752 = t50671*t21736*t50510;
  t50754 = t50515*t36571;
  t50767 = t50752 + t50753 + t50467 + t50642 + t50659 + t50754;
  t50768 = t36228*t50767;
  t50769 = t50746 + t50747 + t50751 + t50768;
  t50772 = t21736*t39703*t50728;
  t50776 = -1.*t21736*t50515;
  t50777 = t50671*t50510*t36571;
  t50792 = t50774 + t50775 + t50776 + t50777 + t50778 + t50779;
  t50793 = t36228*t50792;
  t50794 = t50771 + t50772 + t50773 + t50793;
  t50796 = -1.*t21736*t39703*t50750;
  t50797 = t50774 + t50775 + t50779;
  t50798 = t36228*t50797;
  t50799 = t50771 + t50796 + t50773 + t50798;
  t50816 = -1.*t50815*t50600;
  t50817 = t50699 + t50810 + t50816;
  t50818 = t50302*t50817;
  t50823 = t50822*t49763;
  t50824 = t50815*t50331;
  t50829 = t50699 + t50719 + t50819 + t50823 + t50824 + t50828;
  t50830 = t50595*t50829;
  t50850 = -1.*t50822*t50600;
  t50855 = t50683 + t50688 + t50837 + t50845 + t50850 + t50854;
  t50859 = t37841*t50855;
  t50870 = t50659 + t50863 + t50867;
  t50878 = t37841*t50870;
  t50879 = t50818 + t50830 + t50859 + t50878;
  t50884 = 0.098*t21736*t39703;
  t50902 = t50901*t37841;
  t50903 = t50688 + t50845 + t50854;
  t50904 = t36443*t39703*t50903;
  t50905 = t50884 + t50902 + t50904;
  t50907 = -0.098*t21736*t39703;
  t50914 = -1.*t4372*t39703*t50822;
  t50916 = t36228*t39703*t50510;
  t50917 = t50914 + t50915 + t50916;
  t50918 = t50917*t50595;
  t50928 = t50927*t37841;
  t50930 = t50822*t50600;
  t50931 = t50753 + t50659 + t50929 + t50863 + t50930 + t50867;
  t50932 = t36443*t39703*t50931;
  t50939 = t50907 + t50918 + t50928 + t50932;
  t50942 = t50901*t50302;
  t50943 = t4372*t39703*t50822;
  t50951 = -1.*t36228*t39703*t50510;
  t50952 = t50943 + t50944 + t50951;
  t50953 = t50952*t37841;
  t50955 = -1.*t50822*t49763;
  t50956 = -1.*t50815*t50331;
  t50958 = t50775 + t50778 + t50954 + t50955 + t50956 + t50957;
  t50959 = t36443*t39703*t50958;
  t50960 = t50941 + t50942 + t50953 + t50959;
  t50962 = t50927*t50595;
  t50964 = t50815*t50600;
  t50965 = t50775 + t50963 + t50964;
  t50966 = t36443*t39703*t50965;
  t50967 = t50941 + t50962 + t50966;
  t50983 = t50867 + t50977 + t50982;
  t50984 = t50260*t50983;
  t50986 = -1.*t50981*t50602;
  t50987 = t50810 + t50985 + t50986;
  t50988 = t50401*t50987;
  t50998 = -1.*t50997*t50602;
  t50999 = t50837 + t50854 + t50989 + t50990 + t50994 + t50998;
  t51000 = t50260*t50999;
  t51002 = t50997*t49765;
  t51017 = t50981*t50342;
  t51022 = t50819 + t50828 + t51001 + t51002 + t51009 + t51017;
  t51026 = t50627*t51022;
  t51027 = t50984 + t50988 + t51000 + t51026;
  t51050 = t51042*t50260;
  t51051 = t48985*t50600;
  t51052 = t50316 + t51051;
  t51056 = 0.1*t51052;
  t51061 = t50854 + t50989 + t50990;
  t51066 = t50572*t51061;
  t51073 = t51050 + t51056 + t51066;
  t51078 = t51077*t50260;
  t51079 = -1.*t50546*t50997;
  t51087 = t50915 + t51079 + t51086;
  t51088 = t51087*t50627;
  t51089 = t48985*t50331;
  t51090 = t50597 + t51089;
  t51091 = 0.1*t51090;
  t51099 = t50997*t50602;
  t51100 = t50929 + t50867 + t50977 + t50982 + t51098 + t51099;
  t51101 = t50572*t51100;
  t51102 = t51078 + t51088 + t51091 + t51101;
  t51104 = t50546*t50997;
  t51106 = t50944 + t51104 + t51105;
  t51107 = t51106*t50260;
  t51112 = t51042*t50401;
  t51114 = -1.*t50997*t49765;
  t51116 = -1.*t50981*t50342;
  t51117 = t50954 + t50957 + t51113 + t51114 + t51115 + t51116;
  t51118 = t50572*t51117;
  t51119 = t51107 + t51111 + t51112 + t51118;
  t51121 = t51077*t50627;
  t51123 = t50981*t50602;
  t51124 = t50963 + t51122 + t51123;
  t51125 = t50572*t51124;
  t51126 = t51111 + t51121 + t51125;
  t51142 = t50977 + t51134 + t51141;
  t51143 = t49767*t51142;
  t51149 = -1.*t51148*t50608;
  t51154 = t50989 + t50994 + t51144 + t51145 + t51149 + t51153;
  t51155 = t49767*t51154;
  t51156 = -1.*t51133*t50608;
  t51158 = t50985 + t51156 + t51157;
  t51159 = t50369*t51158;
  t51160 = t51148*t50222;
  t51162 = t51133*t50397;
  t51177 = t51001 + t51009 + t51160 + t51161 + t51162 + t51169;
  t51182 = t50604*t51177;
  t51186 = t51143 + t51155 + t51159 + t51182;
  t51202 = t51198*t49767;
  t51210 = t50989 + t51144 + t51145;
  t51211 = t50548*t51210;
  t51212 = t51202 + t51211;
  t51234 = t51233*t49767;
  t51235 = -1.*t50568*t51148;
  t51237 = t51235 + t51236 + t51086;
  t51238 = t51237*t50604;
  t51239 = t51148*t50608;
  t51241 = t50977 + t51098 + t51134 + t51141 + t51239 + t51240;
  t51242 = t50548*t51241;
  t51243 = t51234 + t51238 + t51242;
  t51245 = t50568*t51148;
  t51247 = t51245 + t51246 + t51105;
  t51248 = t51247*t49767;
  t51249 = t51198*t50369;
  t51250 = -1.*t51148*t50222;
  t51252 = -1.*t51133*t50397;
  t51254 = t51113 + t51115 + t51250 + t51251 + t51252 + t51253;
  t51255 = t50548*t51254;
  t51256 = t51248 + t51249 + t51255;
  t51258 = t51233*t50604;
  t51259 = t51133*t50608;
  t51261 = t51122 + t51259 + t51260;
  t51262 = t50548*t51261;
  t51263 = t51258 + t51262;
  t51309 = 0.18533*t50631*t51308;
  t51310 = 0.18533*t50429*t51308;
  t51333 = 0.18533*t50298*t51329;
  t51345 = 0.18533*t50298*t51342;
  t51348 = t51309 + t51310 + t51333 + t51345;
  t51287 = t51271*t51286;
  t51291 = t51276*t51290;
  t51292 = t51287 + t51291;
  t51297 = t51271*t51296;
  t51301 = t51276*t51300;
  t51302 = t51297 + t51301;
  t51374 = t51274*t51373;
  t51377 = t51145 + t51375 + t51376;
  t51378 = t51353*t51377;
  t51379 = t51374 + t51378;
  t51384 = t51274*t51383;
  t51392 = -1.*t50574*t51391;
  t51393 = t51236 + t51388 + t51392;
  t51394 = t51286*t51393;
  t51396 = t51391*t50629;
  t51399 = t51141 + t51240 + t51395 + t51396 + t51397 + t51398;
  t51400 = t51353*t51399;
  t51401 = t51384 + t51394 + t51400;
  t51403 = t51286*t51383;
  t51404 = t51371*t50629;
  t51406 = t51260 + t51404 + t51405;
  t51407 = t51353*t51406;
  t51408 = t51403 + t51407;
  t51410 = t51296*t51373;
  t51412 = t50574*t51391;
  t51413 = t51246 + t51411 + t51412;
  t51414 = t51274*t51413;
  t51415 = -1.*t51391*t50287;
  t51416 = -1.*t51371*t50403;
  t51419 = t51251 + t51253 + t51415 + t51416 + t51417 + t51418;
  t51420 = t51353*t51419;
  t51421 = t51410 + t51414 + t51420;
  t51423 = t51141 + t51395 + t51397;
  t51424 = t51274*t51423;
  t51425 = -1.*t51391*t50629;
  t51427 = t51145 + t51153 + t51375 + t51425 + t51376 + t51426;
  t51428 = t51274*t51427;
  t51429 = -1.*t51371*t50629;
  t51431 = t51157 + t51429 + t51430;
  t51432 = t51296*t51431;
  t51433 = t51391*t50287;
  t51434 = t51371*t50403;
  t51437 = t51161 + t51169 + t51433 + t51434 + t51435 + t51436;
  t51438 = t51286*t51437;
  t51439 = t51424 + t51428 + t51432 + t51438;
  t51464 = t50298*t51463;
  t51467 = t51376 + t51465 + t51466;
  t51468 = t50576*t51467;
  t51469 = t51464 + t51468;
  t51474 = t50631*t51473;
  t51475 = t51454*t50631;
  t51476 = t51461*t51290;
  t51477 = t51405 + t51475 + t51476;
  t51478 = t50576*t51477;
  t51479 = t51474 + t51478;
  t51481 = t50298*t51473;
  t51485 = -1.*t50576*t51484;
  t51489 = -1.*t51458*t51488;
  t51490 = t51388 + t51485 + t51489;
  t51491 = t50631*t51490;
  t51494 = t51484*t50631;
  t51495 = t51488*t51290;
  t51496 = t51397 + t51398 + t51492 + t51493 + t51494 + t51495;
  t51497 = t50576*t51496;
  t51498 = t51481 + t51491 + t51497;
  t51500 = t50429*t51463;
  t51501 = t50576*t51484;
  t51502 = t51458*t51488;
  t51503 = t51411 + t51501 + t51502;
  t51504 = t50298*t51503;
  t51505 = -1.*t51484*t50298;
  t51506 = -1.*t51488*t51279;
  t51507 = -1.*t51454*t50429;
  t51508 = -1.*t51461*t51300;
  t51509 = t51417 + t51418 + t51505 + t51506 + t51507 + t51508;
  t51510 = t50576*t51509;
  t51511 = t51500 + t51504 + t51510;
  t51513 = t51397 + t51492 + t51493;
  t51514 = t50298*t51513;
  t51515 = -1.*t51454*t50631;
  t51516 = -1.*t51461*t51290;
  t51517 = t51430 + t51515 + t51516;
  t51518 = t50429*t51517;
  t51519 = -1.*t51484*t50631;
  t51520 = -1.*t51488*t51290;
  t51521 = t51376 + t51426 + t51465 + t51466 + t51519 + t51520;
  t51522 = t50298*t51521;
  t51523 = t51484*t50298;
  t51524 = t51488*t51279;
  t51525 = t51454*t50429;
  t51526 = t51461*t51300;
  t51527 = t51435 + t51436 + t51523 + t51524 + t51525 + t51526;
  t51528 = t50631*t51527;
  t51529 = t51514 + t51518 + t51522 + t51528;
  t51606 = t51271*t51353;
  t51607 = t51276*t51458;
  t51608 = t51606 + t51607;
  t51282 = 0.18533*t50631*t51281;
  t51283 = 0.18533*t50429*t51281;
  t51293 = 0.18533*t50298*t51292;
  t51303 = 0.18533*t50298*t51302;
  t51304 = t51282 + t51283 + t51293 + t51303;
  t51576 = 0.18533*t51308*t51292;
  t51577 = 0.18533*t51281*t51329;
  t51578 = 0.18533*t51308*t51302;
  t51579 = 0.18533*t51281*t51342;
  t51580 = t51576 + t51577 + t51578 + t51579;
  t51664 = 0.000011*t50298;
  t51665 = -3.e-6*t50429;
  t51676 = 4.e-6*t50298;
  t51670 = -3.e-6*t50576;
  t51671 = 0.000133*t50298;
  t51672 = 4.e-6*t50631;
  t51673 = t51670 + t51671 + t51672;
  t51675 = 0.000011*t50576;
  t51677 = 0.000136*t50631;
  t51678 = t51675 + t51676 + t51677;
  t51682 = 0.000136*t50298;
  t51683 = 4.e-6*t50429;
  t51684 = t51682 + t51683;
  t51686 = 0.000133*t50429;
  t51687 = t51676 + t51686;
  t51690 = t50631*t51513;
  t51691 = t50298*t51517;
  t51692 = t51690 + t51691;
  t51680 = t51664 + t51665;
  t51470 = 0.18533*t50298*t51469;
  t51480 = 0.18533*t50429*t51479;
  t51499 = 0.18533*t50298*t51498;
  t51512 = 0.18533*t50631*t51511;
  t51530 = 0.18533*t50576*t51529;
  t51531 = t51470 + t51480 + t51499 + t51512 + t51530;
  t51655 = 0.18533*t51281*t51469;
  t51656 = 0.18533*t51302*t51479;
  t51657 = 0.18533*t51281*t51498;
  t51658 = 0.18533*t51292*t51511;
  t51659 = 0.18533*t51608*t51529;
  t51660 = t51655 + t51656 + t51657 + t51658 + t51659;
  t51593 = 0.18533*t51308*t51469;
  t51594 = 0.18533*t51342*t51479;
  t51595 = 0.18533*t51308*t51498;
  t51596 = 0.18533*t51329*t51511;
  t51597 = 0.18533*t51541*t51529;
  t51598 = t51593 + t51594 + t51595 + t51596 + t51597;
  t51803 = 0.000011*t51274;
  t51804 = -3.e-6*t51296;
  t51815 = 4.e-6*t51274;
  t51785 = t51286*t51423;
  t51786 = t51274*t51431;
  t51787 = t51785 + t51786;
  t51697 = 0.1*t39703;
  t51698 = -1.*t21736*t39703*t50664;
  t51699 = t39703*t36571*t50704;
  t51700 = t51697 + t51698 + t51699;
  t51809 = -3.e-6*t51353;
  t51810 = 0.000133*t51274;
  t51811 = 4.e-6*t51286;
  t51812 = t51809 + t51810 + t51811;
  t51814 = 0.000011*t51353;
  t51816 = 0.000136*t51286;
  t51817 = t51814 + t51815 + t51816;
  t51821 = 0.000136*t51274;
  t51822 = 4.e-6*t51296;
  t51823 = t51821 + t51822;
  t51825 = 0.000133*t51296;
  t51826 = t51815 + t51825;
  t51713 = t36571*t50484;
  t51714 = t21736*t50536;
  t51715 = -0.113 + t51713 + t51714;
  t51819 = t51803 + t51804;
  t51729 = -0.098*t36228;
  t51730 = t37841*t50817;
  t51731 = t50595*t50870;
  t51732 = t51729 + t51730 + t51731;
  t51746 = -1.*t39128*t36228;
  t51747 = t4372*t48985*t39703;
  t51748 = t51746 + t51747;
  t51749 = 0.1*t51748;
  t51750 = t50627*t50983;
  t51751 = t50260*t50987;
  t51752 = t51749 + t51750 + t51751;
  t51766 = t50604*t51142;
  t51767 = t49767*t51158;
  t51768 = t51766 + t51767;
  t51380 = 0.18533*t50298*t51379;
  t51402 = 0.18533*t50298*t51401;
  t51409 = 0.18533*t50429*t51408;
  t51422 = 0.18533*t50631*t51421;
  t51440 = 0.18533*t50576*t51439;
  t51441 = t51380 + t51402 + t51409 + t51422 + t51440;
  t51648 = 0.18533*t51281*t51379;
  t51649 = 0.18533*t51281*t51401;
  t51650 = 0.18533*t51302*t51408;
  t51651 = 0.18533*t51292*t51421;
  t51652 = 0.18533*t51608*t51439;
  t51653 = t51648 + t51649 + t51650 + t51651 + t51652;
  t51586 = 0.18533*t51308*t51379;
  t51587 = 0.18533*t51308*t51401;
  t51588 = 0.18533*t51342*t51408;
  t51589 = 0.18533*t51329*t51421;
  t51590 = 0.18533*t51541*t51439;
  t51591 = t51586 + t51587 + t51588 + t51589 + t51590;
  t51780 = 0.18533*t51421*t51469;
  t51781 = 0.18533*t51439*t51692;
  t51782 = 0.18533*t51401*t51479;
  t51783 = 0.18533*t51408*t51498;
  t51784 = 0.18533*t51379*t51511;
  t51788 = 0.18533*t51787*t51529;
  t51909 = 0.000011*t49767;
  t51910 = -3.e-6*t50369;
  t51921 = 4.e-6*t49767;
  t51915 = -3.e-6*t50548;
  t51916 = 0.000133*t49767;
  t51917 = 4.e-6*t50604;
  t51918 = t51915 + t51916 + t51917;
  t51920 = 0.000011*t50548;
  t51922 = 0.000136*t50604;
  t51923 = t51920 + t51921 + t51922;
  t51927 = 0.000136*t49767;
  t51928 = 4.e-6*t50369;
  t51929 = t51927 + t51928;
  t51931 = 0.000133*t50369;
  t51932 = t51921 + t51931;
  t51925 = t51909 + t51910;
  t51187 = 0.18533*t51186*t50576;
  t51217 = 0.18533*t51212*t50298;
  t51244 = 0.18533*t51243*t50298;
  t51257 = 0.18533*t51256*t50631;
  t51264 = 0.18533*t51263*t50429;
  t51265 = t51187 + t51217 + t51244 + t51257 + t51264;
  t51635 = 0.18533*t51186*t51608;
  t51636 = 0.18533*t51212*t51281;
  t51637 = 0.18533*t51243*t51281;
  t51638 = 0.18533*t51256*t51292;
  t51639 = 0.18533*t51263*t51302;
  t51640 = t51635 + t51636 + t51637 + t51638 + t51639;
  t51568 = 0.18533*t51186*t51541;
  t51569 = 0.18533*t51212*t51308;
  t51570 = 0.18533*t51243*t51308;
  t51571 = 0.18533*t51256*t51329;
  t51572 = 0.18533*t51263*t51342;
  t51573 = t51568 + t51569 + t51570 + t51571 + t51572;
  t51879 = 0.18533*t51256*t51379;
  t51880 = 0.18533*t51263*t51401;
  t51881 = 0.18533*t51186*t51787;
  t51882 = 0.18533*t51243*t51408;
  t51883 = 0.18533*t51212*t51421;
  t51884 = 0.18533*t51768*t51439;
  t51761 = 0.18533*t51256*t51469;
  t51762 = 0.18533*t51186*t51692;
  t51763 = 0.18533*t51243*t51479;
  t51764 = 0.18533*t51263*t51498;
  t51765 = 0.18533*t51212*t51511;
  t51769 = 0.18533*t51768*t51529;
  t52009 = 0.000011*t50260;
  t52010 = -3.e-6*t50401;
  t52021 = 4.e-6*t50260;
  t52015 = -3.e-6*t50572;
  t52016 = 0.000133*t50260;
  t52017 = 4.e-6*t50627;
  t52018 = t52015 + t52016 + t52017;
  t52020 = 0.000011*t50572;
  t52022 = 0.000136*t50627;
  t52023 = t52020 + t52021 + t52022;
  t52027 = 0.000136*t50260;
  t52028 = 4.e-6*t50401;
  t52029 = t52027 + t52028;
  t52031 = 0.000133*t50401;
  t52032 = t52021 + t52031;
  t52025 = t52009 + t52010;
  t51972 = 0.18533*t51119*t51212;
  t51973 = 0.18533*t51126*t51243;
  t51974 = 0.18533*t51027*t51768;
  t51975 = 0.18533*t51102*t51263;
  t51976 = 0.18533*t51073*t51256;
  t51977 = 0.18533*t51752*t51186;
  t51030 = 0.18533*t51027*t50576;
  t51074 = 0.18533*t51073*t50298;
  t51103 = 0.18533*t51102*t50298;
  t51120 = 0.18533*t51119*t50631;
  t51127 = 0.18533*t51126*t50429;
  t51128 = t51030 + t51074 + t51103 + t51120 + t51127;
  t51628 = 0.18533*t51027*t51608;
  t51629 = 0.18533*t51073*t51281;
  t51630 = 0.18533*t51102*t51281;
  t51631 = 0.18533*t51119*t51292;
  t51632 = 0.18533*t51126*t51302;
  t51633 = t51628 + t51629 + t51630 + t51631 + t51632;
  t51561 = 0.18533*t51027*t51541;
  t51562 = 0.18533*t51073*t51308;
  t51563 = 0.18533*t51102*t51308;
  t51564 = 0.18533*t51119*t51329;
  t51565 = 0.18533*t51126*t51342;
  t51566 = t51561 + t51562 + t51563 + t51564 + t51565;
  t51866 = 0.18533*t51119*t51379;
  t51867 = 0.18533*t51126*t51401;
  t51868 = 0.18533*t51027*t51787;
  t51869 = 0.18533*t51102*t51408;
  t51870 = 0.18533*t51073*t51421;
  t51871 = 0.18533*t51752*t51439;
  t51741 = 0.18533*t51119*t51469;
  t51742 = 0.18533*t51027*t51692;
  t51743 = 0.18533*t51102*t51479;
  t51744 = 0.18533*t51126*t51498;
  t51745 = 0.18533*t51073*t51511;
  t51753 = 0.18533*t51752*t51529;
  t52110 = 4.e-6*t37841;
  t52109 = 0.000133*t50302;
  t52111 = t52109 + t52110;
  t52113 = 0.000011*t36443*t39703;
  t52114 = 0.000136*t50595;
  t52115 = t52113 + t52114 + t52110;
  t52103 = -3.e-6*t50302;
  t52104 = 0.000011*t37841;
  t52117 = -3.e-6*t36443*t39703;
  t52118 = 4.e-6*t50595;
  t52119 = 0.000133*t37841;
  t52120 = t52117 + t52118 + t52119;
  t52122 = 4.e-6*t50302;
  t52123 = 0.000136*t37841;
  t52124 = t52122 + t52123;
  t52136 = t52103 + t52104;
  t52059 = 0.18533*t50960*t51073;
  t52060 = 0.18533*t50879*t51752;
  t52061 = 0.18533*t50939*t51126;
  t52062 = 0.18533*t50967*t51102;
  t52063 = 0.18533*t50905*t51119;
  t52064 = 0.18533*t51732*t51027;
  t51959 = 0.18533*t50960*t51212;
  t51960 = 0.18533*t50967*t51243;
  t51961 = 0.18533*t50879*t51768;
  t51962 = 0.18533*t50939*t51263;
  t51963 = 0.18533*t50905*t51256;
  t51964 = 0.18533*t51732*t51186;
  t50880 = 0.18533*t50879*t50576;
  t50906 = 0.18533*t50905*t50298;
  t50940 = 0.18533*t50939*t50298;
  t50961 = 0.18533*t50960*t50631;
  t50968 = 0.18533*t50967*t50429;
  t50969 = t50880 + t50906 + t50940 + t50961 + t50968;
  t51621 = 0.18533*t50879*t51608;
  t51622 = 0.18533*t50905*t51281;
  t51623 = 0.18533*t50939*t51281;
  t51624 = 0.18533*t50960*t51292;
  t51625 = 0.18533*t50967*t51302;
  t51626 = t51621 + t51622 + t51623 + t51624 + t51625;
  t51554 = 0.18533*t50879*t51541;
  t51555 = 0.18533*t50905*t51308;
  t51556 = 0.18533*t50939*t51308;
  t51557 = 0.18533*t50960*t51329;
  t51558 = 0.18533*t50967*t51342;
  t51559 = t51554 + t51555 + t51556 + t51557 + t51558;
  t51853 = 0.18533*t50960*t51379;
  t51854 = 0.18533*t50967*t51401;
  t51855 = 0.18533*t50879*t51787;
  t51856 = 0.18533*t50939*t51408;
  t51857 = 0.18533*t50905*t51421;
  t51858 = 0.18533*t51732*t51439;
  t51724 = 0.18533*t50960*t51469;
  t51725 = 0.18533*t50879*t51692;
  t51726 = 0.18533*t50939*t51479;
  t51727 = 0.18533*t50967*t51498;
  t51728 = 0.18533*t50905*t51511;
  t51733 = 0.18533*t51732*t51529;
  t52199 = 4.e-6*t39703*t36571;
  t52197 = 0.000011*t36228;
  t52198 = -0.000136*t21736*t39703;
  t52200 = t52197 + t52198 + t52199;
  t52202 = 0.000133*t21736*t39703;
  t52203 = t52202 + t52199;
  t52191 = -3.e-6*t21736*t39703;
  t52192 = 0.000011*t39703*t36571;
  t52205 = -3.e-6*t36228;
  t52206 = -4.e-6*t21736*t39703;
  t52207 = 0.000133*t39703*t36571;
  t52208 = t52205 + t52206 + t52207;
  t52210 = 4.e-6*t21736*t39703;
  t52211 = 0.000136*t39703*t36571;
  t52212 = t52210 + t52211;
  t52224 = t52191 + t52192;
  t52140 = 0.18533*t50769*t50967;
  t52141 = 0.18533*t50744*t50960;
  t52142 = 0.18533*t50794*t50905;
  t52143 = 0.18533*t50722*t51732;
  t52144 = 0.18533*t51700*t50879;
  t52145 = 0.18533*t50799*t50939;
  t52034 = 0.18533*t50794*t51073;
  t52035 = 0.18533*t50722*t51752;
  t52036 = 0.18533*t50769*t51126;
  t52037 = 0.18533*t50799*t51102;
  t52038 = 0.18533*t50744*t51119;
  t52039 = 0.18533*t51700*t51027;
  t51934 = 0.18533*t50794*t51212;
  t51935 = 0.18533*t50799*t51243;
  t51936 = 0.18533*t50722*t51768;
  t51937 = 0.18533*t50769*t51263;
  t51938 = 0.18533*t50744*t51256;
  t51939 = 0.18533*t51700*t51186;
  t50723 = 0.18533*t50722*t50576;
  t50745 = 0.18533*t50744*t50298;
  t50770 = 0.18533*t50769*t50298;
  t50795 = 0.18533*t50794*t50631;
  t50800 = 0.18533*t50799*t50429;
  t50801 = t50723 + t50745 + t50770 + t50795 + t50800;
  t51614 = 0.18533*t50722*t51608;
  t51615 = 0.18533*t50744*t51281;
  t51616 = 0.18533*t50769*t51281;
  t51617 = 0.18533*t50794*t51292;
  t51618 = 0.18533*t50799*t51302;
  t51619 = t51614 + t51615 + t51616 + t51617 + t51618;
  t51547 = 0.18533*t50722*t51541;
  t51548 = 0.18533*t50744*t51308;
  t51549 = 0.18533*t50769*t51308;
  t51550 = 0.18533*t50794*t51329;
  t51551 = 0.18533*t50799*t51342;
  t51552 = t51547 + t51548 + t51549 + t51550 + t51551;
  t51828 = 0.18533*t50794*t51379;
  t51829 = 0.18533*t50799*t51401;
  t51830 = 0.18533*t50722*t51787;
  t51831 = 0.18533*t50769*t51408;
  t51832 = 0.18533*t50744*t51421;
  t51833 = 0.18533*t51700*t51439;
  t51689 = 0.18533*t50794*t51469;
  t51693 = 0.18533*t50722*t51692;
  t51694 = 0.18533*t50769*t51479;
  t51695 = 0.18533*t50799*t51498;
  t51696 = 0.18533*t50744*t51511;
  t51701 = 0.18533*t51700*t51529;
  t52277 = 4.e-6*t21736;
  t52284 = 0.000136*t21736;
  t52285 = -4.e-6*t36571;
  t52286 = t52284 + t52285;
  t52288 = 0.000133*t21736;
  t52289 = 4.e-6*t36571;
  t52290 = t52288 + t52289;
  t52278 = -0.000133*t36571;
  t52279 = t52277 + t52278;
  t52281 = 0.000136*t36571;
  t52282 = t52277 + t52281;
  t52214 = -0.0167334457*t36571*t50744;
  t52215 = -0.0167334457*t36571*t50769;
  t52216 = 0.18533*t51700*t50542;
  t52217 = 0.18533*t51715*t50722;
  t52218 = -0.0167334457*t21736*t50799;
  t52219 = 0.0167334457*t21736*t50794;
  t52296 = 0.000011*t21736;
  t52297 = 3.e-6*t36571;
  t52298 = t52296 + t52297;
  t52126 = -0.0167334457*t21736*t50967;
  t52127 = 0.0167334457*t21736*t50960;
  t52128 = -0.0167334457*t36571*t50905;
  t52129 = 0.18533*t50542*t51732;
  t52130 = 0.18533*t51715*t50879;
  t52131 = -0.0167334457*t36571*t50939;
  t52046 = -0.0167334457*t36571*t51073;
  t52047 = 0.18533*t50542*t51752;
  t52048 = -0.0167334457*t21736*t51126;
  t52049 = -0.0167334457*t36571*t51102;
  t52050 = 0.0167334457*t21736*t51119;
  t52051 = 0.18533*t51715*t51027;
  t51946 = -0.0167334457*t36571*t51212;
  t51947 = -0.0167334457*t36571*t51243;
  t51948 = 0.18533*t50542*t51768;
  t51949 = -0.0167334457*t21736*t51263;
  t51950 = 0.0167334457*t21736*t51256;
  t51951 = 0.18533*t51715*t51186;
  t50577 = 0.18533*t50542*t50576;
  t50632 = -0.0167334457*t36571*t50631;
  t50633 = -0.0167334457*t36571*t50429;
  t50634 = t50577 + t50632 + t50633;
  t51609 = 0.18533*t50542*t51608;
  t51610 = -0.0167334457*t36571*t51292;
  t51611 = -0.0167334457*t36571*t51302;
  t51612 = t51609 + t51610 + t51611;
  t51542 = 0.18533*t50542*t51541;
  t51543 = -0.0167334457*t36571*t51329;
  t51544 = -0.0167334457*t36571*t51342;
  t51545 = t51542 + t51543 + t51544;
  t51840 = -0.0167334457*t36571*t51379;
  t51841 = -0.0167334457*t36571*t51401;
  t51842 = 0.18533*t50542*t51787;
  t51843 = -0.0167334457*t21736*t51408;
  t51844 = 0.0167334457*t21736*t51421;
  t51845 = 0.18533*t51715*t51439;
  t51708 = -0.0167334457*t36571*t51469;
  t51709 = 0.18533*t50542*t51692;
  t51710 = -0.0167334457*t21736*t51479;
  t51711 = -0.0167334457*t36571*t51498;
  t51712 = 0.0167334457*t21736*t51511;
  t51716 = 0.18533*t51715*t51529;
  t52273 = -3.725432216e-6*t21736;
  t52274 = 0.000054539012756*t36571;
  t52275 = t52273 + t52274;
  t52193 = 0.0001630904*t50769;
  t52194 = -0.0005708164*t50794;
  t52195 = t52191 + t52192 + t52193 + t52194;
  t52105 = -0.0005708164*t50960;
  t52106 = 0.0001630904*t50939;
  t52107 = t52103 + t52104 + t52105 + t52106;
  t52011 = 0.0001630904*t51102;
  t52012 = -0.0005708164*t51119;
  t52013 = t52009 + t52010 + t52011 + t52012;
  t51911 = 0.0001630904*t51243;
  t51912 = -0.0005708164*t51256;
  t51913 = t51909 + t51910 + t51911 + t51912;
  t50299 = -0.0005708164*t50298;
  t50430 = 0.0001630904*t50429;
  t50431 = t50299 + t50430;
  t51602 = -0.0005708164*t51281;
  t51603 = 0.0001630904*t51302;
  t51604 = t51602 + t51603;
  t51535 = -0.0005708164*t51308;
  t51536 = 0.0001630904*t51342;
  t51537 = t51535 + t51536;
  t51805 = 0.0001630904*t51401;
  t51806 = -0.0005708164*t51421;
  t51807 = t51803 + t51804 + t51805 + t51806;
  t51666 = 0.0001630904*t51498;
  t51667 = -0.0005708164*t51511;
  t51668 = t51664 + t51665 + t51666 + t51667;
  p_output1[0]=var2[17]*(-0.5*(0.37066*t50298*t50429 + 0.37066*t50298*t50631)*var2[0] - 0.5*t51348*var2[1] - 0.5*t51304*var2[2] - 0.5*t51531*var2[3] - 0.5*t51441*var2[4] - 0.5*t51265*var2[5] - 0.5*t51128*var2[13] - 0.5*t50969*var2[14] - 0.5*t50801*var2[15] - 0.5*t50634*var2[16] - 0.5*t50431*var2[17]);
  p_output1[1]=var2[17]*(-0.5*t51348*var2[0] - 0.5*(0.37066*t51308*t51329 + 0.37066*t51308*t51342)*var2[1] - 0.5*t51580*var2[2] - 0.5*t51598*var2[3] - 0.5*t51591*var2[4] - 0.5*t51573*var2[5] - 0.5*t51566*var2[13] - 0.5*t51559*var2[14] - 0.5*t51552*var2[15] - 0.5*t51545*var2[16] - 0.5*t51537*var2[17]);
  p_output1[2]=var2[17]*(-0.5*t51304*var2[0] - 0.5*t51580*var2[1] - 0.5*(0.37066*t51281*t51292 + 0.37066*t51281*t51302)*var2[2] - 0.5*t51660*var2[3] - 0.5*t51653*var2[4] - 0.5*t51640*var2[5] - 0.5*t51633*var2[13] - 0.5*t51626*var2[14] - 0.5*t51619*var2[15] - 0.5*t51612*var2[16] - 0.5*t51604*var2[17]);
  p_output1[3]=var2[17]*(-0.5*t51531*var2[0] - 0.5*t51598*var2[1] - 0.5*t51660*var2[2] - 0.5*(0.37066*t51479*t51498 + 0.37066*t51469*t51511 + t50429*t51673 + t50298*t51678 + t50576*t51680 + t50631*t51684 + t50298*t51687 + 0.37066*t51529*t51692)*var2[3] - 0.5*(t51296*t51673 + t51274*t51678 + t51353*t51680 + t51286*t51684 + t51274*t51687 + t51780 + t51781 + t51782 + t51783 + t51784 + t51788)*var2[4] - 0.5*(t50369*t51673 + t49767*t51678 + t50548*t51680 + t50604*t51684 + t49767*t51687 + t51761 + t51762 + t51763 + t51764 + t51765 + t51769)*var2[5] - 0.5*(t50401*t51673 + t50260*t51678 + t50572*t51680 + t50627*t51684 + t50260*t51687 + t51741 + t51742 + t51743 + t51744 + t51745 + t51753)*var2[13] - 0.5*(t50302*t51673 + t37841*t51678 + t36443*t39703*t51680 + t50595*t51684 + t37841*t51687 + t51724 + t51725 + t51726 + t51727 + t51728 + t51733)*var2[14] - 0.5*(t21736*t39703*t51673 + t36571*t39703*t51678 + t36228*t51680 - 1.*t21736*t39703*t51684 + t36571*t39703*t51687 + t51689 + t51693 + t51694 + t51695 + t51696 + t51701)*var2[15] - 0.5*(-1.*t36571*t51673 + t21736*t51678 + t36571*t51684 + t21736*t51687 + t51708 + t51709 + t51710 + t51711 + t51712 + t51716)*var2[16] - 0.5*t51668*var2[17]);
  p_output1[4]=var2[17]*(-0.5*t51441*var2[0] - 0.5*t51591*var2[1] - 0.5*t51653*var2[2] - 0.5*(t51780 + t51781 + t51782 + t51783 + t51784 + t51788 + t50429*t51812 + t50298*t51817 + t50576*t51819 + t50631*t51823 + t50298*t51826)*var2[3] - 0.5*(0.37066*t51401*t51408 + 0.37066*t51379*t51421 + 0.37066*t51439*t51787 + t51296*t51812 + t51274*t51817 + t51353*t51819 + t51286*t51823 + t51274*t51826)*var2[4] - 0.5*(t50369*t51812 + t49767*t51817 + t50548*t51819 + t50604*t51823 + t49767*t51826 + t51879 + t51880 + t51881 + t51882 + t51883 + t51884)*var2[5] - 0.5*(t50401*t51812 + t50260*t51817 + t50572*t51819 + t50627*t51823 + t50260*t51826 + t51866 + t51867 + t51868 + t51869 + t51870 + t51871)*var2[13] - 0.5*(t50302*t51812 + t37841*t51817 + t36443*t39703*t51819 + t50595*t51823 + t37841*t51826 + t51853 + t51854 + t51855 + t51856 + t51857 + t51858)*var2[14] - 0.5*(t21736*t39703*t51812 + t36571*t39703*t51817 + t36228*t51819 - 1.*t21736*t39703*t51823 + t36571*t39703*t51826 + t51828 + t51829 + t51830 + t51831 + t51832 + t51833)*var2[15] - 0.5*(-1.*t36571*t51812 + t21736*t51817 + t36571*t51823 + t21736*t51826 + t51840 + t51841 + t51842 + t51843 + t51844 + t51845)*var2[16] - 0.5*t51807*var2[17]);
  p_output1[5]=var2[17]*(-0.5*t51265*var2[0] - 0.5*t51573*var2[1] - 0.5*t51640*var2[2] - 0.5*(t51761 + t51762 + t51763 + t51764 + t51765 + t51769 + t50429*t51918 + t50298*t51923 + t50576*t51925 + t50631*t51929 + t50298*t51932)*var2[3] - 0.5*(t51879 + t51880 + t51881 + t51882 + t51883 + t51884 + t51296*t51918 + t51274*t51923 + t51353*t51925 + t51286*t51929 + t51274*t51932)*var2[4] - 0.5*(0.37066*t51212*t51256 + 0.37066*t51243*t51263 + 0.37066*t51186*t51768 + t50369*t51918 + t49767*t51923 + t50548*t51925 + t50604*t51929 + t49767*t51932)*var2[5] - 0.5*(t50401*t51918 + t50260*t51923 + t50572*t51925 + t50627*t51929 + t50260*t51932 + t51972 + t51973 + t51974 + t51975 + t51976 + t51977)*var2[13] - 0.5*(t50302*t51918 + t37841*t51923 + t36443*t39703*t51925 + t50595*t51929 + t37841*t51932 + t51959 + t51960 + t51961 + t51962 + t51963 + t51964)*var2[14] - 0.5*(t21736*t39703*t51918 + t36571*t39703*t51923 + t36228*t51925 - 1.*t21736*t39703*t51929 + t36571*t39703*t51932 + t51934 + t51935 + t51936 + t51937 + t51938 + t51939)*var2[15] - 0.5*(-1.*t36571*t51918 + t21736*t51923 + t36571*t51929 + t21736*t51932 + t51946 + t51947 + t51948 + t51949 + t51950 + t51951)*var2[16] - 0.5*t51913*var2[17]);
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=0;
  p_output1[13]=var2[17]*(-0.5*t51128*var2[0] - 0.5*t51566*var2[1] - 0.5*t51633*var2[2] - 0.5*(t51741 + t51742 + t51743 + t51744 + t51745 + t51753 + t50429*t52018 + t50298*t52023 + t50576*t52025 + t50631*t52029 + t50298*t52032)*var2[3] - 0.5*(t51866 + t51867 + t51868 + t51869 + t51870 + t51871 + t51296*t52018 + t51274*t52023 + t51353*t52025 + t51286*t52029 + t51274*t52032)*var2[4] - 0.5*(t51972 + t51973 + t51974 + t51975 + t51976 + t51977 + t50369*t52018 + t49767*t52023 + t50548*t52025 + t50604*t52029 + t49767*t52032)*var2[5] - 0.5*(0.37066*t51073*t51119 + 0.37066*t51102*t51126 + 0.37066*t51027*t51752 + t50401*t52018 + t50260*t52023 + t50572*t52025 + t50627*t52029 + t50260*t52032)*var2[13] - 0.5*(t50302*t52018 + t37841*t52023 + t36443*t39703*t52025 + t50595*t52029 + t37841*t52032 + t52059 + t52060 + t52061 + t52062 + t52063 + t52064)*var2[14] - 0.5*(t21736*t39703*t52018 + t36571*t39703*t52023 + t36228*t52025 - 1.*t21736*t39703*t52029 + t36571*t39703*t52032 + t52034 + t52035 + t52036 + t52037 + t52038 + t52039)*var2[15] - 0.5*(-1.*t36571*t52018 + t21736*t52023 + t36571*t52029 + t21736*t52032 + t52046 + t52047 + t52048 + t52049 + t52050 + t52051)*var2[16] - 0.5*t52013*var2[17]);
  p_output1[14]=var2[17]*(-0.5*t50969*var2[0] - 0.5*t51559*var2[1] - 0.5*t51626*var2[2] - 0.5*(t51724 + t51725 + t51726 + t51727 + t51728 + t51733 + t50298*t52111 + t50298*t52115 + t50429*t52120 + t50631*t52124 + t50576*t52136)*var2[3] - 0.5*(t51853 + t51854 + t51855 + t51856 + t51857 + t51858 + t51274*t52111 + t51274*t52115 + t51296*t52120 + t51286*t52124 + t51353*t52136)*var2[4] - 0.5*(t51959 + t51960 + t51961 + t51962 + t51963 + t51964 + t49767*t52111 + t49767*t52115 + t50369*t52120 + t50604*t52124 + t50548*t52136)*var2[5] - 0.5*(t52059 + t52060 + t52061 + t52062 + t52063 + t52064 + t50260*t52111 + t50260*t52115 + t50401*t52120 + t50627*t52124 + t50572*t52136)*var2[13] - 0.5*(0.37066*t50905*t50960 + 0.37066*t50939*t50967 + 0.37066*t50879*t51732 + t37841*t52111 + t37841*t52115 + t50302*t52120 + t50595*t52124 + t36443*t39703*t52136)*var2[14] - 0.5*(t36571*t39703*t52111 + t36571*t39703*t52115 + t21736*t39703*t52120 - 1.*t21736*t39703*t52124 + t36228*t52136 + t52140 + t52141 + t52142 + t52143 + t52144 + t52145)*var2[15] - 0.5*(t21736*t52111 + t21736*t52115 - 1.*t36571*t52120 + t36571*t52124 + t52126 + t52127 + t52128 + t52129 + t52130 + t52131)*var2[16] - 0.5*t52107*var2[17]);
  p_output1[15]=var2[17]*(-0.5*t50801*var2[0] - 0.5*t51552*var2[1] - 0.5*t51619*var2[2] - 0.5*(t51689 + t51693 + t51694 + t51695 + t51696 + t51701 + t50298*t52200 + t50298*t52203 + t50429*t52208 + t50631*t52212 + t50576*t52224)*var2[3] - 0.5*(t51828 + t51829 + t51830 + t51831 + t51832 + t51833 + t51274*t52200 + t51274*t52203 + t51296*t52208 + t51286*t52212 + t51353*t52224)*var2[4] - 0.5*(t51934 + t51935 + t51936 + t51937 + t51938 + t51939 + t49767*t52200 + t49767*t52203 + t50369*t52208 + t50604*t52212 + t50548*t52224)*var2[5] - 0.5*(t52034 + t52035 + t52036 + t52037 + t52038 + t52039 + t50260*t52200 + t50260*t52203 + t50401*t52208 + t50627*t52212 + t50572*t52224)*var2[13] - 0.5*(t52140 + t52141 + t52142 + t52143 + t52144 + t52145 + t37841*t52200 + t37841*t52203 + t50302*t52208 + t50595*t52212 + t36443*t39703*t52224)*var2[14] - 0.5*(0.37066*t50744*t50794 + 0.37066*t50769*t50799 + 0.37066*t50722*t51700 + t36571*t39703*t52200 + t36571*t39703*t52203 + t21736*t39703*t52208 - 1.*t21736*t39703*t52212 + t36228*t52224)*var2[15] - 0.5*(t21736*t52200 + t21736*t52203 - 1.*t36571*t52208 + t36571*t52212 + t52214 + t52215 + t52216 + t52217 + t52218 + t52219)*var2[16] - 0.5*t52195*var2[17]);
  p_output1[16]=var2[17]*(-0.5*t50634*var2[0] - 0.5*t51545*var2[1] - 0.5*t51612*var2[2] - 0.5*(t51708 + t51709 + t51710 + t51711 + t51712 + t51716 + t50298*t52279 + t50298*t52282 + t50631*t52286 + t50429*t52290 + t50576*t52298)*var2[3] - 0.5*(t51840 + t51841 + t51842 + t51843 + t51844 + t51845 + t51274*t52279 + t51274*t52282 + t51286*t52286 + t51296*t52290 + t51353*t52298)*var2[4] - 0.5*(t51946 + t51947 + t51948 + t51949 + t51950 + t51951 + t49767*t52279 + t49767*t52282 + t50604*t52286 + t50369*t52290 + t50548*t52298)*var2[5] - 0.5*(t52046 + t52047 + t52048 + t52049 + t52050 + t52051 + t50260*t52279 + t50260*t52282 + t50627*t52286 + t50401*t52290 + t50572*t52298)*var2[13] - 0.5*(t52126 + t52127 + t52128 + t52129 + t52130 + t52131 + t37841*t52279 + t37841*t52282 + t50595*t52286 + t50302*t52290 + t36443*t39703*t52298)*var2[14] - 0.5*(t52214 + t52215 + t52216 + t52217 + t52218 + t52219 + t36571*t39703*t52279 + t36571*t39703*t52282 - 1.*t21736*t39703*t52286 + t21736*t39703*t52290 + t36228*t52298)*var2[15] - 0.5*(0.37066*t50542*t51715 + t21736*t52279 + t21736*t52282 + t36571*t52286 - 1.*t36571*t52290)*var2[16] - 0.5*t52275*var2[17]);
  p_output1[17]=(-0.5*t50431*var2[0] - 0.5*t51537*var2[1] - 0.5*t51604*var2[2] - 0.5*t51668*var2[3] - 0.5*t51807*var2[4] - 0.5*t51913*var2[5] - 0.5*t52013*var2[13] - 0.5*t52107*var2[14] - 0.5*t52195*var2[15] - 0.5*t52275*var2[16])*var2[17];
  p_output1[18]=0;
  p_output1[19]=0;
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=0;
  p_output1[24]=0;
  p_output1[25]=0;
  p_output1[26]=0;
  p_output1[27]=0;
  p_output1[28]=0;
  p_output1[29]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 30 && ncols == 1) && 
      !(mrows == 1 && ncols == 30))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 30 && ncols == 1) && 
      !(mrows == 1 && ncols == 30))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 30, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "Ce2_vec18_NaoH25V50.hh"

namespace SymFunction
{

void Ce2_vec18_NaoH25V50_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
