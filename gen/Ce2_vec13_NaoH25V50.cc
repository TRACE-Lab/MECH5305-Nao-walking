/*
 * Automatically Generated from Mathematica.
 * Tue 10 Jul 2018 11:13:03 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;


#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t44;
  double t48;
  double t62;
  double t73;
  double t67;
  double t72;
  double t74;
  double t79;
  double t128;
  double t113;
  double t126;
  double t226;
  double t474;
  double t1052;
  double t5500;
  double t5508;
  double t333;
  double t364;
  double t386;
  double t8005;
  double t9422;
  double t11402;
  double t9092;
  double t10520;
  double t7583;
  double t10511;
  double t18240;
  double t18243;
  double t7711;
  double t18253;
  double t7432;
  double t19129;
  double t21614;
  double t21705;
  double t21725;
  double t19466;
  double t19760;
  double t21582;
  double t22392;
  double t22407;
  double t20890;
  double t20918;
  double t20958;
  double t22748;
  double t22763;
  double t22789;
  double t22733;
  double t22894;
  double t23018;
  double t22671;
  double t22695;
  double t22719;
  double t21353;
  double t22425;
  double t22427;
  double t22441;
  double t22552;
  double t22557;
  double t22559;
  double t22560;
  double t22567;
  double t22568;
  double t22569;
  double t22573;
  double t22579;
  double t22601;
  double t22605;
  double t24212;
  double t24222;
  double t24225;
  double t24198;
  double t24230;
  double t24235;
  double t24167;
  double t24183;
  double t24191;
  double t99;
  double t24455;
  double t24481;
  double t295;
  double t24545;
  double t24615;
  double t24643;
  double t24692;
  double t24717;
  double t24726;
  double t24749;
  double t24756;
  double t24777;
  double t1811;
  double t24896;
  double t24899;
  double t5653;
  double t24808;
  double t24825;
  double t8675;
  double t18292;
  double t18329;
  double t18410;
  double t19211;
  double t19352;
  double t19418;
  double t19554;
  double t19856;
  double t19886;
  double t20000;
  double t20019;
  double t20115;
  double t20435;
  double t20488;
  double t25008;
  double t25050;
  double t25057;
  double t25079;
  double t25103;
  double t22730;
  double t23198;
  double t23209;
  double t23477;
  double t23996;
  double t23999;
  double t24017;
  double t24025;
  double t24039;
  double t24051;
  double t24091;
  double t24098;
  double t24104;
  double t24107;
  double t24119;
  double t25146;
  double t25148;
  double t25157;
  double t24855;
  double t24881;
  double t24195;
  double t24238;
  double t24251;
  double t24263;
  double t24267;
  double t24273;
  double t24283;
  double t24291;
  double t24301;
  double t24321;
  double t24329;
  double t24335;
  double t24338;
  double t24353;
  double t24409;
  double t25022;
  double t25031;
  double t25033;
  double t24705;
  double t24791;
  double t28122;
  double t28127;
  double t24827;
  double t28194;
  double t28200;
  double t28206;
  double t28214;
  double t28222;
  double t28140;
  double t28151;
  double t28163;
  double t28171;
  double t28182;
  double t24934;
  double t28313;
  double t28324;
  double t28330;
  double t28263;
  double t28268;
  double t28278;
  double t28465;
  double t25192;
  double t28566;
  double t28574;
  double t28589;
  double t28303;
  double t28344;
  double t28477;
  double t28481;
  double t28494;
  double t25346;
  double t28361;
  double t28365;
  double t28189;
  double t28914;
  double t28927;
  double t28934;
  double t28947;
  double t28954;
  double t28964;
  double t28980;
  double t28985;
  double t28997;
  double t29003;
  double t28294;
  double t28390;
  double t28409;
  double t29082;
  double t29089;
  double t29099;
  double t29116;
  double t29126;
  double t29132;
  double t28511;
  double t28618;
  double t29273;
  double t29285;
  double t29290;
  double t29299;
  double t28653;
  double t28687;
  double t29408;
  double t29418;
  double t29428;
  double t29073;
  double t29079;
  double t29303;
  double t29311;
  double t29318;
  double t28804;
  double t28845;
  double t28972;
  double t29012;
  double t29989;
  double t30013;
  double t30022;
  double t30030;
  double t29881;
  double t29888;
  double t29900;
  double t29908;
  double t29941;
  double t29963;
  double t29338;
  double t30327;
  double t30333;
  double t30345;
  double t29633;
  double t29724;
  double t30403;
  double t30414;
  double t30418;
  double t30442;
  double t30454;
  double t30461;
  double t29983;
  double t30075;
  double t30117;
  double t29390;
  double t29446;
  double t29463;
  double t30524;
  double t30535;
  double t29033;
  double t29104;
  double t30168;
  double t30218;
  double t29167;
  double t29190;
  double t31658;
  double t31807;
  double t32354;
  double t32393;
  double t32418;
  double t32451;
  double t32475;
  double t32544;
  double t32549;
  double t32562;
  double t32583;
  double t31676;
  double t31709;
  double t31732;
  double t31827;
  double t31852;
  double t31876;
  double t31996;
  double t32032;
  double t32073;
  double t32126;
  double t32178;
  double t32191;
  double t33127;
  double t33137;
  double t33167;
  double t33423;
  double t33472;
  double t33482;
  double t30368;
  double t33312;
  double t33342;
  double t33377;
  double t33539;
  double t33546;
  double t33565;
  double t33392;
  double t33587;
  double t33620;
  double t30467;
  double t30567;
  double t34296;
  double t34388;
  double t34443;
  double t34466;
  double t34487;
  double t34549;
  double t33858;
  double t33899;
  double t33961;
  double t30738;
  double t30836;
  double t30888;
  double t31081;
  double t31259;
  double t34034;
  double t34047;
  double t34678;
  double t34739;
  double t31429;
  double t31466;
  double t33709;
  double t35817;
  double t35842;
  double t35861;
  double t36036;
  double t36078;
  double t36083;
  double t35950;
  double t35960;
  double t36031;
  double t35895;
  double t36127;
  double t36137;
  double t34576;
  double t34657;
  double t36747;
  double t36779;
  double t36785;
  double t36880;
  double t36951;
  double t36962;
  double t36308;
  double t36354;
  double t36364;
  double t34942;
  double t35058;
  double t35130;
  double t35282;
  double t35348;
  double t36444;
  double t36518;
  double t37142;
  double t37195;
  double t35447;
  double t35540;
  double t246;
  double t284;
  double t287;
  double t460;
  double t1911;
  double t2450;
  double t3136;
  double t5576;
  double t5621;
  double t5665;
  double t6308;
  double t6393;
  double t6584;
  double t32880;
  double t32888;
  double t32930;
  double t33012;
  double t33018;
  double t33061;
  double t24797;
  double t24801;
  double t24818;
  double t24883;
  double t24892;
  double t24908;
  double t24922;
  double t24927;
  double t24939;
  double t24941;
  double t24972;
  double t38228;
  double t38271;
  double t38276;
  double t25040;
  double t25112;
  double t25117;
  double t25123;
  double t25161;
  double t25169;
  double t25172;
  double t25200;
  double t25221;
  double t25228;
  double t25239;
  double t25242;
  double t25256;
  double t25270;
  double t25292;
  double t25302;
  double t25324;
  double t25333;
  double t25337;
  double t25339;
  double t25351;
  double t25354;
  double t25454;
  double t26111;
  double t28231;
  double t28236;
  double t28242;
  double t28339;
  double t28351;
  double t28355;
  double t28372;
  double t28381;
  double t28397;
  double t28402;
  double t28422;
  double t28431;
  double t28444;
  double t28501;
  double t28520;
  double t28536;
  double t28543;
  double t28548;
  double t28603;
  double t28609;
  double t28624;
  double t28639;
  double t28644;
  double t28665;
  double t28678;
  double t28699;
  double t28704;
  double t28716;
  double t28736;
  double t28743;
  double t28751;
  double t28758;
  double t28765;
  double t28787;
  double t28796;
  double t28810;
  double t28821;
  double t28828;
  double t28836;
  double t28851;
  double t28857;
  double t28873;
  double t28876;
  double t29016;
  double t29025;
  double t29043;
  double t29054;
  double t29065;
  double t29141;
  double t29148;
  double t29156;
  double t29173;
  double t29202;
  double t29220;
  double t29237;
  double t29251;
  double t29327;
  double t29347;
  double t29353;
  double t29365;
  double t29369;
  double t29383;
  double t29395;
  double t29406;
  double t29439;
  double t29454;
  double t29470;
  double t29478;
  double t29485;
  double t29500;
  double t29513;
  double t29530;
  double t29549;
  double t29567;
  double t29574;
  double t29586;
  double t29603;
  double t29618;
  double t29623;
  double t29640;
  double t29650;
  double t29671;
  double t29681;
  double t29711;
  double t29736;
  double t29746;
  double t29754;
  double t29774;
  double t32934;
  double t33071;
  double t33209;
  double t33225;
  double t33270;
  double t30973;
  double t31034;
  double t31073;
  double t31129;
  double t31160;
  double t31250;
  double t31274;
  double t31300;
  double t31359;
  double t31396;
  double t31478;
  double t31500;
  double t31518;
  double t30357;
  double t30361;
  double t30377;
  double t30384;
  double t30389;
  double t30678;
  double t30713;
  double t30753;
  double t30762;
  double t30777;
  double t30821;
  double t30896;
  double t30909;
  double t30912;
  double t30161;
  double t30279;
  double t30288;
  double t30302;
  double t30399;
  double t30425;
  double t30492;
  double t30496;
  double t30512;
  double t30576;
  double t30596;
  double t30624;
  double t31770;
  double t31909;
  double t31937;
  double t32100;
  double t32211;
  double t32247;
  double t33654;
  double t33703;
  double t33724;
  double t33750;
  double t33790;
  double t33967;
  double t34143;
  double t34148;
  double t34219;
  double t34287;
  double t34448;
  double t34595;
  double t34627;
  double t34637;
  double t34754;
  double t34813;
  double t34823;
  double t34876;
  double t34901;
  double t34984;
  double t34995;
  double t35014;
  double t35119;
  double t35181;
  double t35189;
  double t35226;
  double t35276;
  double t35312;
  double t35316;
  double t35344;
  double t35353;
  double t35377;
  double t35397;
  double t35410;
  double t35435;
  double t35533;
  double t35564;
  double t35598;
  double t35647;
  double t36176;
  double t36181;
  double t36215;
  double t36220;
  double t36262;
  double t36266;
  double t36433;
  double t36523;
  double t36584;
  double t36676;
  double t36733;
  double t36869;
  double t37030;
  double t37036;
  double t37078;
  double t37088;
  double t37128;
  double t37204;
  double t37236;
  double t37260;
  double t37325;
  double t37332;
  double t37368;
  double t37381;
  double t37427;
  double t37433;
  double t37467;
  double t37472;
  double t37512;
  double t37565;
  double t37571;
  double t37607;
  double t37646;
  double t37654;
  double t37704;
  double t37714;
  double t37753;
  double t37757;
  double t37805;
  double t37814;
  double t37867;
  double t37872;
  double t37906;
  double t37912;
  double t37952;
  double t37960;
  double t38008;
  double t38015;
  double t38059;
  double t39595;
  double t39604;
  double t39621;
  double t31971;
  double t32344;
  double t32652;
  double t32692;
  double t32711;
  double t39114;
  double t39140;
  double t39145;
  double t39176;
  double t39181;
  double t41696;
  double t41695;
  double t41701;
  double t41706;
  double t41707;
  double t41711;
  double t41714;
  double t41727;
  double t41728;
  double t41731;
  double t41733;
  double t41734;
  double t41740;
  double t41741;
  double t41745;
  double t36298;
  double t36691;
  double t37268;
  double t37615;
  double t38066;
  double t38110;
  double t41650;
  double t41656;
  double t41660;
  double t41661;
  double t41663;
  double t41665;
  double t39354;
  double t39369;
  double t39423;
  double t39431;
  double t39454;
  double t39468;
  double t42105;
  double t42061;
  double t42063;
  double t42064;
  double t41751;
  double t41757;
  double t41764;
  double t41775;
  double t42104;
  double t42106;
  double t42109;
  double t42110;
  double t42112;
  double t42113;
  double t42114;
  double t42115;
  double t42117;
  double t42118;
  double t42123;
  double t41793;
  double t41806;
  double t41809;
  double t41839;
  double t41840;
  double t41843;
  double t41844;
  double t41866;
  double t41879;
  double t41887;
  double t41893;
  double t41898;
  double t41903;
  double t41910;
  double t33836;
  double t34228;
  double t34836;
  double t35234;
  double t35662;
  double t35714;
  double t41993;
  double t42002;
  double t42006;
  double t41364;
  double t41391;
  double t41627;
  double t41630;
  double t41638;
  double t41641;
  double t39276;
  double t39283;
  double t39285;
  double t39312;
  double t39329;
  double t39334;
  double t42052;
  double t42053;
  double t42056;
  double t42057;
  double t42060;
  double t42065;
  double t42368;
  double t42343;
  double t42352;
  double t42356;
  double t42361;
  double t42370;
  double t42371;
  double t42375;
  double t42376;
  double t42377;
  double t42385;
  double t42388;
  double t30310;
  double t30394;
  double t30654;
  double t30932;
  double t31541;
  double t31570;
  double t40888;
  double t40918;
  double t40968;
  double t40969;
  double t40970;
  double t40971;
  double t38995;
  double t39002;
  double t39030;
  double t39034;
  double t39071;
  double t39079;
  double t42257;
  double t42265;
  double t42271;
  double t42276;
  double t42277;
  double t42278;
  double t41978;
  double t41981;
  double t41982;
  double t41988;
  double t41991;
  double t42012;
  double t42542;
  double t42537;
  double t42538;
  double t42539;
  double t42540;
  double t42543;
  double t42544;
  double t42555;
  double t42561;
  double t42565;
  double t42567;
  double t42568;
  double t29265;
  double t29377;
  double t29505;
  double t29611;
  double t29794;
  double t29809;
  double t42467;
  double t42469;
  double t42470;
  double t42471;
  double t42472;
  double t42473;
  double t40787;
  double t40808;
  double t40838;
  double t40842;
  double t40846;
  double t40851;
  double t38828;
  double t38837;
  double t38876;
  double t38881;
  double t38920;
  double t38927;
  double t42197;
  double t42198;
  double t42199;
  double t42204;
  double t42209;
  double t42213;
  double t41858;
  double t41860;
  double t41861;
  double t41863;
  double t41865;
  double t41914;
  double t42681;
  double t42680;
  double t42684;
  double t42694;
  double t42698;
  double t42709;
  double t42710;
  double t42712;
  double t42713;
  double t42716;
  double t42717;
  double t42718;
  double t42618;
  double t42619;
  double t42620;
  double t42623;
  double t42624;
  double t42625;
  double t28454;
  double t28555;
  double t28723;
  double t28772;
  double t28885;
  double t28889;
  double t42442;
  double t42444;
  double t42446;
  double t42447;
  double t42448;
  double t42449;
  double t40683;
  double t40695;
  double t40712;
  double t40755;
  double t40759;
  double t40766;
  double t38660;
  double t38699;
  double t38703;
  double t38734;
  double t38739;
  double t38776;
  double t42182;
  double t42184;
  double t42185;
  double t42187;
  double t42188;
  double t42189;
  double t41829;
  double t41835;
  double t41836;
  double t41837;
  double t41838;
  double t41845;
  double t42842;
  double t42809;
  double t42841;
  double t42846;
  double t42852;
  double t42853;
  double t42857;
  double t42858;
  double t42859;
  double t42862;
  double t42863;
  double t42864;
  double t42720;
  double t42721;
  double t42722;
  double t42724;
  double t42725;
  double t42726;
  double t42572;
  double t42573;
  double t42574;
  double t42575;
  double t42577;
  double t42578;
  double t24994;
  double t25129;
  double t25231;
  double t25321;
  double t27389;
  double t27642;
  double t42394;
  double t42399;
  double t42400;
  double t42402;
  double t42406;
  double t42408;
  double t40594;
  double t40596;
  double t40607;
  double t40617;
  double t40638;
  double t40666;
  double t38524;
  double t38540;
  double t38561;
  double t38585;
  double t38603;
  double t38616;
  double t42125;
  double t42126;
  double t42127;
  double t42128;
  double t42129;
  double t42131;
  double t41736;
  double t41738;
  double t41746;
  double t41747;
  double t41750;
  double t41777;
  double t42997;
  double t43004;
  double t43011;
  double t43019;
  double t43029;
  double t43030;
  double t43032;
  double t42998;
  double t42999;
  double t43001;
  double t43002;
  double t42866;
  double t42867;
  double t42869;
  double t42872;
  double t42873;
  double t42875;
  double t42734;
  double t42735;
  double t42736;
  double t42737;
  double t42738;
  double t42739;
  double t42604;
  double t42605;
  double t42606;
  double t42608;
  double t42609;
  double t42610;
  double t20551;
  double t22646;
  double t24122;
  double t24141;
  double t42421;
  double t42422;
  double t42423;
  double t42424;
  double t42425;
  double t42430;
  double t39632;
  double t39651;
  double t39682;
  double t39709;
  double t38319;
  double t38329;
  double t38372;
  double t38378;
  double t42142;
  double t42143;
  double t42144;
  double t42145;
  double t42146;
  double t42147;
  double t41787;
  double t41789;
  double t41790;
  double t41791;
  double t41792;
  double t41815;
  double t42993;
  double t42994;
  double t42995;
  double t42815;
  double t42822;
  double t42828;
  double t42673;
  double t42674;
  double t42676;
  double t42677;
  double t42528;
  double t42529;
  double t42530;
  double t42533;
  double t24159;
  double t24424;
  double t24432;
  double t42329;
  double t42330;
  double t42335;
  double t42336;
  double t40053;
  double t40258;
  double t40375;
  double t38433;
  double t38471;
  double t38488;
  double t42095;
  double t42096;
  double t42097;
  double t42099;
  double t41681;
  double t41686;
  double t41690;
  double t41691;
  t44 = Cos(var1[12]);
  t48 = -1.*t44;
  t62 = 1. + t48;
  t73 = Sin(var1[12]);
  t67 = 0.1*t62;
  t72 = 0.10308*t44;
  t74 = -0.00088*t73;
  t79 = t67 + t72 + t74;
  t128 = -0.00308*t73;
  t113 = 0.113*t62;
  t126 = 0.11212*t44;
  t226 = t113 + t126 + t128;
  t474 = -0.00088*t44;
  t1052 = t474 + t128;
  t5500 = -1.*t44*t226;
  t5508 = -1.*t79*t73;
  t333 = -0.00308*t44;
  t364 = 0.00088*t73;
  t386 = t333 + t364;
  t8005 = Sin(var1[11]);
  t9422 = Cos(var1[11]);
  t11402 = Sin(var1[9]);
  t9092 = Cos(var1[9]);
  t10520 = Cos(var1[10]);
  t7583 = Cos(var1[8]);
  t10511 = t9092*t9422;
  t18240 = -1.*t10520*t11402*t8005;
  t18243 = t10511 + t18240;
  t7711 = Sin(var1[10]);
  t18253 = Sin(var1[8]);
  t7432 = Sin(var1[4]);
  t19129 = Cos(var1[4]);
  t21614 = -1.*t10520*t9422*t44;
  t21705 = t7711*t73;
  t21725 = t21614 + t21705;
  t19466 = Sin(var1[5]);
  t19760 = Cos(var1[5]);
  t21582 = t9092*t44*t8005;
  t22392 = -1.*t11402*t21725;
  t22407 = t21582 + t22392;
  t20890 = -1.*t9422*t44*t7711;
  t20918 = -1.*t10520*t73;
  t20958 = t20890 + t20918;
  t22748 = t10520*t9422*t44;
  t22763 = -1.*t7711*t73;
  t22789 = t22748 + t22763;
  t22733 = -1.*t9092*t44*t8005;
  t22894 = -1.*t11402*t22789;
  t23018 = t22733 + t22894;
  t22671 = t9422*t44*t7711;
  t22695 = t10520*t73;
  t22719 = t22671 + t22695;
  t21353 = t7583*t20958;
  t22425 = -1.*t22407*t18253;
  t22427 = t21353 + t22425;
  t22441 = t7432*t22427;
  t22552 = t44*t11402*t8005;
  t22557 = t9092*t21725;
  t22559 = t22552 + t22557;
  t22560 = -1.*t22559*t19466;
  t22567 = t7583*t22407;
  t22568 = t20958*t18253;
  t22569 = t22567 + t22568;
  t22573 = t19760*t22569;
  t22579 = t22560 + t22573;
  t22601 = t19129*t22579;
  t22605 = t22441 + t22601;
  t24212 = -1.*t44*t7711;
  t24222 = -1.*t10520*t9422*t73;
  t24225 = t24212 + t24222;
  t24198 = t9092*t8005*t73;
  t24230 = -1.*t11402*t24225;
  t24235 = t24198 + t24230;
  t24167 = t10520*t44;
  t24183 = -1.*t9422*t7711*t73;
  t24191 = t24167 + t24183;
  t99 = t44*t79;
  t24455 = -1.*t9422;
  t24481 = 1. + t24455;
  t295 = -1.*t44*t79;
  t24545 = 0.113*t24481;
  t24615 = 0.09029*t8005;
  t24643 = t9422*t226;
  t24692 = t24545 + t24615 + t24643;
  t24717 = 0.105*t24481;
  t24726 = 0.19529*t9422;
  t24749 = 0.113*t8005;
  t24756 = -1.*t8005*t226;
  t24777 = t24717 + t24726 + t24749 + t24756;
  t1811 = -1.*t1052*t73;
  t24896 = -1.*t9422*t44*t24692;
  t24899 = t44*t8005*t24777;
  t5653 = t44*t1052;
  t24808 = Power(t9422,2);
  t24825 = Power(t8005,2);
  t8675 = t7583*t7711*t8005;
  t18292 = -1.*t18243*t18253;
  t18329 = t8675 + t18292;
  t18410 = t7432*t18329;
  t19211 = t9422*t11402;
  t19352 = t9092*t10520*t8005;
  t19418 = t19211 + t19352;
  t19554 = -1.*t19418*t19466;
  t19856 = t7583*t18243;
  t19886 = t7711*t8005*t18253;
  t20000 = t19856 + t19886;
  t20019 = t19760*t20000;
  t20115 = t19554 + t20019;
  t20435 = t19129*t20115;
  t20488 = t18410 + t20435;
  t25008 = -0.113*t44;
  t25050 = -0.1*t9422*t73;
  t25057 = t9422*t44*t24692;
  t25079 = -1.*t44*t8005*t24777;
  t25103 = t79*t73;
  t22730 = t7583*t22719;
  t23198 = -1.*t23018*t18253;
  t23209 = t22730 + t23198;
  t23477 = t7432*t23209;
  t23996 = -1.*t44*t11402*t8005;
  t23999 = t9092*t22789;
  t24017 = t23996 + t23999;
  t24025 = -1.*t24017*t19466;
  t24039 = t7583*t23018;
  t24051 = t22719*t18253;
  t24091 = t24039 + t24051;
  t24098 = t19760*t24091;
  t24104 = t24025 + t24098;
  t24107 = t19129*t24104;
  t24119 = t23477 + t24107;
  t25146 = t8005*t24692;
  t25148 = t9422*t24777;
  t25157 = t25146 + t25148;
  t24855 = t9422*t24692*t73;
  t24881 = -1.*t8005*t24777*t73;
  t24195 = t7583*t24191;
  t24238 = -1.*t24235*t18253;
  t24251 = t24195 + t24238;
  t24263 = t7432*t24251;
  t24267 = t11402*t8005*t73;
  t24273 = t9092*t24225;
  t24283 = t24267 + t24273;
  t24291 = -1.*t24283*t19466;
  t24301 = t7583*t24235;
  t24321 = t24191*t18253;
  t24329 = t24301 + t24321;
  t24335 = t19760*t24329;
  t24338 = t24291 + t24335;
  t24353 = t19129*t24338;
  t24409 = t24263 + t24353;
  t25022 = -1.*t8005*t24692;
  t25031 = -1.*t9422*t24777;
  t25033 = t25022 + t25031;
  t24705 = -1.*t9422*t24692*t73;
  t24791 = t8005*t24777*t73;
  t28122 = -1.*t10520;
  t28127 = 1. + t28122;
  t24827 = -1.*t44*t24825*t386;
  t28194 = 0.113*t28127;
  t28200 = 0.1*t7711;
  t28206 = t10520*t24692;
  t28214 = -1.*t7711*t79;
  t28222 = t28194 + t28200 + t28206 + t28214;
  t28140 = 0.1*t28127;
  t28151 = -0.113*t7711;
  t28163 = t7711*t24692;
  t28171 = t10520*t79;
  t28182 = t28140 + t28151 + t28163 + t28171;
  t24934 = -1.*t24825*t386*t73;
  t28313 = -1.*t7711*t1052;
  t28324 = t10520*t9422*t386;
  t28330 = t28313 + t28324;
  t28263 = t10520*t1052;
  t28268 = t9422*t7711*t386;
  t28278 = t28263 + t28268;
  t28465 = 0.098*t8005*t73;
  t25192 = t24825*t386*t73;
  t28566 = t7711*t8005*t28182;
  t28574 = t10520*t8005*t28222;
  t28589 = t25148 + t28566 + t28574;
  t28303 = -1.*t28222*t24225;
  t28344 = -1.*t28182*t24191;
  t28477 = -1.*t7711*t8005*t28182;
  t28481 = -1.*t10520*t8005*t28222;
  t28494 = t25031 + t28477 + t28481;
  t25346 = t44*t24825*t386;
  t28361 = t28222*t24225;
  t28365 = t28182*t24191;
  t28189 = -1.*t28182*t22719;
  t28914 = -1.*t9092;
  t28927 = 1. + t28914;
  t28934 = 0.098*t28927;
  t28947 = t11402*t24777;
  t28954 = t9092*t28222;
  t28964 = t28934 + t28947 + t28954;
  t28980 = 0.098*t11402;
  t28985 = t9092*t24777;
  t28997 = -1.*t11402*t28222;
  t29003 = t28980 + t28985 + t28997;
  t28294 = -1.*t28278*t22719;
  t28390 = t28182*t20958;
  t28409 = t28278*t24191;
  t29082 = t9092*t28330;
  t29089 = -1.*t11402*t8005*t386;
  t29099 = t29082 + t29089;
  t29116 = -1.*t11402*t28330;
  t29126 = -1.*t9092*t8005*t386;
  t29132 = t29116 + t29126;
  t28511 = t28182*t22719;
  t28618 = t7711*t8005*t28278;
  t29273 = -1.*t9092*t8005*t73;
  t29285 = t11402*t24225;
  t29290 = t29273 + t29285;
  t29299 = 0.1*t29290;
  t28653 = -1.*t28182*t20958;
  t28687 = -1.*t28278*t24191;
  t29408 = t19418*t28964;
  t29418 = t18243*t29003;
  t29428 = t29408 + t29418 + t28566;
  t29073 = -1.*t28964*t24283;
  t29079 = -1.*t29003*t24235;
  t29303 = -1.*t19418*t28964;
  t29311 = -1.*t18243*t29003;
  t29318 = t29303 + t29311 + t28477;
  t28804 = -1.*t7711*t8005*t28278;
  t28845 = t28278*t22719;
  t28972 = t28964*t24283;
  t29012 = t29003*t24235;
  t29989 = t7583*t29003;
  t30013 = -0.1*t18253;
  t30022 = t28182*t18253;
  t30030 = t29989 + t30013 + t30022;
  t29881 = -1.*t7583;
  t29888 = 1. + t29881;
  t29900 = 0.1*t29888;
  t29908 = t7583*t28182;
  t29941 = -1.*t29003*t18253;
  t29963 = t29900 + t29908 + t29941;
  t29338 = t28964*t24017;
  t30327 = -1.*t18329*t29963;
  t30333 = -1.*t20000*t30030;
  t30345 = t29303 + t30327 + t30333;
  t29633 = -1.*t19418*t29099;
  t29724 = t29099*t24017;
  t30403 = t7583*t29132;
  t30414 = t28278*t18253;
  t30418 = t30403 + t30414;
  t30442 = t7583*t28278;
  t30454 = -1.*t29132*t18253;
  t30461 = t30442 + t30454;
  t29983 = t18329*t29963;
  t30075 = t20000*t30030;
  t30117 = t29408 + t29983 + t30075;
  t29390 = t19418*t29099;
  t29446 = -1.*t29099*t24283;
  t29463 = -1.*t28964*t22559;
  t30524 = t30030*t24329;
  t30535 = t29963*t24251;
  t29033 = -1.*t28964*t24017;
  t29104 = -1.*t29099*t24017;
  t30168 = -1.*t30030*t24329;
  t30218 = -1.*t29963*t24251;
  t29167 = t29099*t24283;
  t29190 = t28964*t22559;
  t31658 = Sin(var1[3]);
  t31807 = Cos(var1[3]);
  t32354 = t19760*t24283;
  t32393 = t19466*t24329;
  t32418 = t32354 + t32393;
  t32451 = t31658*t32418;
  t32475 = t19129*t24251;
  t32544 = -1.*t7432*t24338;
  t32549 = t32475 + t32544;
  t32562 = t31807*t32549;
  t32583 = t32451 + t32562;
  t31676 = t19760*t22559;
  t31709 = t19466*t22569;
  t31732 = t31676 + t31709;
  t31827 = t19129*t22427;
  t31852 = -1.*t7432*t22579;
  t31876 = t31827 + t31852;
  t31996 = t19760*t24017;
  t32032 = t19466*t24091;
  t32073 = t31996 + t32032;
  t32126 = t19129*t23209;
  t32178 = -1.*t7432*t24104;
  t32191 = t32126 + t32178;
  t33127 = t31807*t32418;
  t33137 = -1.*t31658*t32549;
  t33167 = t33127 + t33137;
  t33423 = t19760*t19418;
  t33472 = t19466*t20000;
  t33482 = t33423 + t33472;
  t30368 = t29963*t23209;
  t33312 = -1.*t28964*t19466;
  t33342 = t19760*t30030;
  t33377 = t33312 + t33342;
  t33539 = t19760*t28964;
  t33546 = t19466*t30030;
  t33565 = t33539 + t33546;
  t33392 = -1.*t20115*t33377;
  t33587 = -1.*t33482*t33565;
  t33620 = t30327 + t33392 + t33587;
  t30467 = -1.*t18329*t30461;
  t30567 = t30461*t23209;
  t34296 = -1.*t29099*t19466;
  t34388 = t19760*t30418;
  t34443 = t34296 + t34388;
  t34466 = t19760*t29099;
  t34487 = t19466*t30418;
  t34549 = t34466 + t34487;
  t33858 = t20115*t33377;
  t33899 = t33482*t33565;
  t33961 = t29983 + t33858 + t33899;
  t30738 = t18329*t30461;
  t30836 = -1.*t30461*t24251;
  t30888 = -1.*t29963*t22427;
  t31081 = -1.*t29963*t23209;
  t31259 = -1.*t30461*t23209;
  t34034 = -1.*t33377*t24338;
  t34047 = -1.*t33565*t32418;
  t34678 = t33377*t24338;
  t34739 = t33565*t32418;
  t31429 = t30461*t24251;
  t31466 = t29963*t22427;
  t33709 = t33565*t32073;
  t35817 = t7432*t29963;
  t35842 = t19129*t33377;
  t35861 = t35817 + t35842;
  t36036 = t19129*t29963;
  t36078 = -1.*t7432*t33377;
  t36083 = t36036 + t36078;
  t35950 = t19129*t18329;
  t35960 = -1.*t7432*t20115;
  t36031 = t35950 + t35960;
  t35895 = -1.*t20488*t35861;
  t36127 = -1.*t36031*t36083;
  t36137 = t33587 + t35895 + t36127;
  t34576 = -1.*t33482*t34549;
  t34657 = t34549*t32073;
  t36747 = t7432*t30461;
  t36779 = t19129*t34443;
  t36785 = t36747 + t36779;
  t36880 = t19129*t30461;
  t36951 = -1.*t7432*t34443;
  t36962 = t36880 + t36951;
  t36308 = t20488*t35861;
  t36354 = t36031*t36083;
  t36364 = t33899 + t36308 + t36354;
  t34942 = t33482*t34549;
  t35058 = -1.*t33565*t31732;
  t35130 = -1.*t34549*t32418;
  t35282 = -1.*t33565*t32073;
  t35348 = -1.*t34549*t32073;
  t36444 = -1.*t35861*t24409;
  t36518 = -1.*t36083*t32549;
  t37142 = t35861*t24409;
  t37195 = t36083*t32549;
  t35447 = t33565*t31732;
  t35540 = t34549*t32418;
  t246 = -1.*t226*t73;
  t284 = t99 + t246;
  t287 = t44*t284;
  t460 = -1.*t44*t386;
  t1911 = t226*t73;
  t2450 = t295 + t460 + t1811 + t1911;
  t3136 = t44*t2450;
  t5576 = t5500 + t5508;
  t5621 = -1.*t73*t5576;
  t5665 = -1.*t386*t73;
  t6308 = t5653 + t5500 + t5508 + t5665;
  t6393 = t73*t6308;
  t6584 = t287 + t3136 + t5621 + t6393;
  t32880 = t31807*t31732;
  t32888 = -1.*t31658*t31876;
  t32930 = t32880 + t32888;
  t33012 = t31807*t32073;
  t33018 = -1.*t31658*t32191;
  t33061 = t33012 + t33018;
  t24797 = t99 + t24705 + t24791;
  t24801 = t8005*t73*t24797;
  t24818 = -1.*t24808*t44*t386;
  t24883 = t295 + t24818 + t24827 + t24855 + t24881 + t1811;
  t24892 = t8005*t73*t24883;
  t24908 = t24896 + t24899 + t5508;
  t24922 = t44*t8005*t24908;
  t24927 = -1.*t24808*t386*t73;
  t24939 = t24896 + t24899 + t5653 + t5508 + t24927 + t24934;
  t24941 = -1.*t44*t8005*t24939;
  t24972 = t24801 + t24892 + t24922 + t24941;
  t38228 = t31807*t33482;
  t38271 = -1.*t31658*t36031;
  t38276 = t38228 + t38271;
  t25040 = -1.*t44*t8005*t25033;
  t25112 = t25057 + t25079 + t25103;
  t25117 = t9422*t25112;
  t25123 = t25008 + t25040 + t25050 + t25117;
  t25161 = t44*t8005*t25157;
  t25169 = -1.*t44*t1052;
  t25172 = t24808*t386*t73;
  t25200 = t25057 + t25079 + t25169 + t25103 + t25172 + t25192;
  t25221 = t9422*t25200;
  t25228 = t25008 + t25161 + t25050 + t25221;
  t25239 = 0.1*t9422*t44;
  t25242 = -0.113*t73;
  t25256 = t8005*t25157*t73;
  t25270 = t295 + t24855 + t24881;
  t25292 = t9422*t25270;
  t25302 = t25239 + t25242 + t25256 + t25292;
  t25324 = -0.1*t9422*t44;
  t25333 = 0.113*t73;
  t25337 = t8005*t25033*t73;
  t25339 = t24808*t44*t386;
  t25351 = t1052*t73;
  t25354 = t99 + t25339 + t25346 + t24705 + t24791 + t25351;
  t25454 = t9422*t25354;
  t26111 = t25324 + t25333 + t25337 + t25454;
  t28231 = -1.*t28222*t22789;
  t28236 = t24899 + t28189 + t28231;
  t28242 = t20958*t28236;
  t28339 = -1.*t28330*t22789;
  t28351 = t24827 + t24881 + t28294 + t28303 + t28339 + t28344;
  t28355 = t24191*t28351;
  t28372 = t24791 + t28361 + t28365;
  t28381 = t24191*t28372;
  t28397 = t28330*t24225;
  t28402 = t28222*t21725;
  t28422 = t24899 + t24934 + t28390 + t28397 + t28402 + t28409;
  t28431 = t22719*t28422;
  t28444 = t28242 + t28355 + t28381 + t28431;
  t28501 = t28494*t22719;
  t28520 = t28222*t22789;
  t28536 = t25079 + t28511 + t28520;
  t28543 = t7711*t8005*t28536;
  t28548 = t28465 + t28501 + t28543;
  t28603 = t28589*t20958;
  t28609 = t10520*t8005*t28330;
  t28624 = -1.*t9422*t8005*t386;
  t28639 = t28609 + t28618 + t28624;
  t28644 = t28639*t24191;
  t28665 = -1.*t28330*t24225;
  t28678 = -1.*t28222*t21725;
  t28699 = t25079 + t25192 + t28653 + t28665 + t28678 + t28687;
  t28704 = t7711*t8005*t28699;
  t28716 = t28465 + t28603 + t28644 + t28704;
  t28736 = -0.098*t44*t8005;
  t28743 = t28589*t24191;
  t28751 = t24881 + t28303 + t28344;
  t28758 = t7711*t8005*t28751;
  t28765 = t28736 + t28743 + t28758;
  t28787 = 0.098*t44*t8005;
  t28796 = -1.*t10520*t8005*t28330;
  t28810 = t9422*t8005*t386;
  t28821 = t28796 + t28804 + t28810;
  t28828 = t28821*t22719;
  t28836 = t28494*t24191;
  t28851 = t28330*t22789;
  t28857 = t25346 + t24791 + t28845 + t28361 + t28851 + t28365;
  t28873 = t7711*t8005*t28857;
  t28876 = t28787 + t28828 + t28836 + t28873;
  t29016 = t28365 + t28972 + t29012;
  t29025 = t24283*t29016;
  t29043 = -1.*t29003*t23018;
  t29054 = t28189 + t29033 + t29043;
  t29065 = t22559*t29054;
  t29141 = -1.*t29132*t23018;
  t29148 = t28294 + t28344 + t29073 + t29079 + t29104 + t29141;
  t29156 = t24283*t29148;
  t29173 = t29132*t24235;
  t29202 = t29003*t22407;
  t29220 = t28390 + t28409 + t29167 + t29173 + t29190 + t29202;
  t29237 = t24017*t29220;
  t29251 = t29025 + t29065 + t29156 + t29237;
  t29327 = t29318*t24017;
  t29347 = t29003*t23018;
  t29353 = t28511 + t29338 + t29347;
  t29365 = t19418*t29353;
  t29369 = t29299 + t29327 + t29365;
  t29383 = t18243*t29132;
  t29395 = t28618 + t29383 + t29390;
  t29406 = t29395*t24283;
  t29439 = t29428*t22559;
  t29454 = -1.*t29132*t24235;
  t29470 = -1.*t29003*t22407;
  t29478 = t28653 + t28687 + t29446 + t29454 + t29463 + t29470;
  t29485 = t19418*t29478;
  t29500 = t29406 + t29299 + t29439 + t29485;
  t29513 = t29428*t24283;
  t29530 = t11402*t22789;
  t29549 = t21582 + t29530;
  t29567 = 0.1*t29549;
  t29574 = t28344 + t29073 + t29079;
  t29586 = t19418*t29574;
  t29603 = t29513 + t29567 + t29586;
  t29618 = t29318*t24283;
  t29623 = -1.*t18243*t29132;
  t29640 = t28804 + t29623 + t29633;
  t29650 = t29640*t24017;
  t29671 = t11402*t21725;
  t29681 = t22733 + t29671;
  t29711 = 0.1*t29681;
  t29736 = t29132*t23018;
  t29746 = t28845 + t28365 + t28972 + t29012 + t29724 + t29736;
  t29754 = t19418*t29746;
  t29774 = t29618 + t29650 + t29711 + t29754;
  t32934 = 0.18533*t24409*t32930;
  t33071 = 0.18533*t24409*t33061;
  t33209 = 0.18533*t22605*t33167;
  t33225 = 0.18533*t24119*t33167;
  t33270 = t32934 + t33071 + t33209 + t33225;
  t30973 = t28972 + t30524 + t30535;
  t31034 = t24251*t30973;
  t31073 = -1.*t30030*t24091;
  t31129 = t29033 + t31073 + t31081;
  t31160 = t22427*t31129;
  t31250 = -1.*t30418*t24091;
  t31274 = t29073 + t29104 + t31250 + t30168 + t30218 + t31259;
  t31300 = t24251*t31274;
  t31359 = t30030*t22569;
  t31396 = t30418*t24329;
  t31478 = t29167 + t29190 + t31359 + t31396 + t31429 + t31466;
  t31500 = t23209*t31478;
  t31518 = t31034 + t31160 + t31300 + t31500;
  t30357 = t23209*t30345;
  t30361 = t30030*t24091;
  t30377 = t29338 + t30361 + t30368;
  t30384 = t18329*t30377;
  t30389 = t30357 + t30384;
  t30678 = t22427*t30117;
  t30713 = t20000*t30418;
  t30753 = t29390 + t30713 + t30738;
  t30762 = t24251*t30753;
  t30777 = -1.*t30030*t22569;
  t30821 = -1.*t30418*t24329;
  t30896 = t29446 + t29463 + t30777 + t30821 + t30836 + t30888;
  t30909 = t18329*t30896;
  t30912 = t30678 + t30762 + t30909;
  t30161 = t24251*t30117;
  t30279 = t29073 + t30168 + t30218;
  t30288 = t18329*t30279;
  t30302 = t30161 + t30288;
  t30399 = t24251*t30345;
  t30425 = -1.*t20000*t30418;
  t30492 = t29633 + t30425 + t30467;
  t30496 = t23209*t30492;
  t30512 = t30418*t24091;
  t30576 = t28972 + t29724 + t30512 + t30524 + t30535 + t30567;
  t30596 = t18329*t30576;
  t30624 = t30399 + t30496 + t30596;
  t31770 = t31658*t31732;
  t31909 = t31807*t31876;
  t31937 = t31770 + t31909;
  t32100 = t31658*t32073;
  t32211 = t31807*t32191;
  t32247 = t32100 + t32211;
  t33654 = t32073*t33620;
  t33703 = t33377*t24104;
  t33724 = t30368 + t33703 + t33709;
  t33750 = t33482*t33724;
  t33790 = t33654 + t33750;
  t33967 = t32418*t33961;
  t34143 = t30218 + t34034 + t34047;
  t34148 = t33482*t34143;
  t34219 = t33967 + t34148;
  t34287 = t32418*t33620;
  t34448 = -1.*t20115*t34443;
  t34595 = t30467 + t34448 + t34576;
  t34627 = t32073*t34595;
  t34637 = t34443*t24104;
  t34754 = t30535 + t30567 + t34637 + t34657 + t34678 + t34739;
  t34813 = t33482*t34754;
  t34823 = t34287 + t34627 + t34813;
  t34876 = t31732*t33961;
  t34901 = t20115*t34443;
  t34984 = t30738 + t34901 + t34942;
  t34995 = t32418*t34984;
  t35014 = -1.*t33377*t22579;
  t35119 = -1.*t34443*t24338;
  t35181 = t30836 + t30888 + t35014 + t35058 + t35119 + t35130;
  t35189 = t33482*t35181;
  t35226 = t34876 + t34995 + t35189;
  t35276 = -1.*t33377*t24104;
  t35312 = t31081 + t35276 + t35282;
  t35316 = t31732*t35312;
  t35344 = -1.*t34443*t24104;
  t35353 = t30218 + t31259 + t35344 + t35348 + t34034 + t34047;
  t35377 = t32418*t35353;
  t35397 = t30535 + t34678 + t34739;
  t35410 = t32418*t35397;
  t35435 = t33377*t22579;
  t35533 = t34443*t24338;
  t35564 = t31429 + t31466 + t35435 + t35447 + t35533 + t35540;
  t35598 = t32073*t35564;
  t35647 = t35316 + t35377 + t35410 + t35598;
  t36176 = t24119*t36137;
  t36181 = t35861*t24119;
  t36215 = t36083*t32191;
  t36220 = t33709 + t36181 + t36215;
  t36262 = t20488*t36220;
  t36266 = t36176 + t36262;
  t36433 = t24409*t36364;
  t36523 = t34047 + t36444 + t36518;
  t36584 = t20488*t36523;
  t36676 = t36433 + t36584;
  t36733 = t24409*t36137;
  t36869 = -1.*t20488*t36785;
  t37030 = -1.*t36031*t36962;
  t37036 = t34576 + t36869 + t37030;
  t37078 = t24119*t37036;
  t37088 = t36785*t24119;
  t37128 = t36962*t32191;
  t37204 = t34657 + t34739 + t37088 + t37128 + t37142 + t37195;
  t37236 = t20488*t37204;
  t37260 = t36733 + t37078 + t37236;
  t37325 = t22605*t36364;
  t37332 = t20488*t36785;
  t37368 = t36031*t36962;
  t37381 = t34942 + t37332 + t37368;
  t37427 = t24409*t37381;
  t37433 = -1.*t35861*t22605;
  t37467 = -1.*t36083*t31876;
  t37472 = -1.*t36785*t24409;
  t37512 = -1.*t36962*t32549;
  t37565 = t35058 + t35130 + t37433 + t37467 + t37472 + t37512;
  t37571 = t20488*t37565;
  t37607 = t37325 + t37427 + t37571;
  t37646 = -1.*t35861*t24119;
  t37654 = -1.*t36083*t32191;
  t37704 = t35282 + t37646 + t37654;
  t37714 = t22605*t37704;
  t37753 = -1.*t36785*t24119;
  t37757 = -1.*t36962*t32191;
  t37805 = t35348 + t34047 + t37753 + t37757 + t36444 + t36518;
  t37814 = t24409*t37805;
  t37867 = t34739 + t37142 + t37195;
  t37872 = t24409*t37867;
  t37906 = t35861*t22605;
  t37912 = t36083*t31876;
  t37952 = t36785*t24409;
  t37960 = t36962*t32549;
  t38008 = t35447 + t35540 + t37906 + t37912 + t37952 + t37960;
  t38015 = t24119*t38008;
  t38059 = t37714 + t37814 + t37872 + t38015;
  t39595 = t31658*t33482;
  t39604 = t31807*t36031;
  t39621 = t39595 + t39604;
  t31971 = 0.18533*t24409*t31937;
  t32344 = 0.18533*t24409*t32247;
  t32652 = 0.18533*t22605*t32583;
  t32692 = 0.18533*t24119*t32583;
  t32711 = t31971 + t32344 + t32652 + t32692;
  t39114 = 0.18533*t32930*t32583;
  t39140 = 0.18533*t33061*t32583;
  t39145 = 0.18533*t31937*t33167;
  t39176 = 0.18533*t32247*t33167;
  t39181 = t39114 + t39140 + t39145 + t39176;
  t41696 = 3.e-6*t24409;
  t41695 = 0.000133*t22605;
  t41701 = t41695 + t41696;
  t41706 = 0.000136*t24119;
  t41707 = t41706 + t41696;
  t41711 = -3.e-6*t20488;
  t41714 = 3.e-6*t24119;
  t41727 = 0.000133*t24409;
  t41728 = t41711 + t41714 + t41727;
  t41731 = 3.e-6*t22605;
  t41733 = 0.000136*t24409;
  t41734 = t41731 + t41733;
  t41740 = t24409*t37704;
  t41741 = t24119*t37867;
  t41745 = t41740 + t41741;
  t36298 = 0.18533*t22605*t36266;
  t36691 = 0.18533*t24409*t36676;
  t37268 = 0.18533*t24409*t37260;
  t37615 = 0.18533*t24119*t37607;
  t38066 = 0.18533*t20488*t38059;
  t38110 = t36298 + t36691 + t37268 + t37615 + t38066;
  t41650 = 0.18533*t31937*t36266;
  t41656 = 0.18533*t32583*t36676;
  t41660 = 0.18533*t32583*t37260;
  t41661 = 0.18533*t32247*t37607;
  t41663 = 0.18533*t39621*t38059;
  t41665 = t41650 + t41656 + t41660 + t41661 + t41663;
  t39354 = 0.18533*t32930*t36266;
  t39369 = 0.18533*t33167*t36676;
  t39423 = 0.18533*t33167*t37260;
  t39431 = 0.18533*t33061*t37607;
  t39454 = 0.18533*t38276*t38059;
  t39468 = t39354 + t39369 + t39423 + t39431 + t39454;
  t42105 = 3.e-6*t32418;
  t42061 = t32418*t35312;
  t42063 = t32073*t35397;
  t42064 = t42061 + t42063;
  t41751 = 0.1*t8005;
  t41757 = -1.*t44*t8005*t24797;
  t41764 = t8005*t73*t24908;
  t41775 = t41751 + t41757 + t41764;
  t42104 = 0.000133*t31732;
  t42106 = t42104 + t42105;
  t42109 = 0.000136*t32073;
  t42110 = t42109 + t42105;
  t42112 = -3.e-6*t33482;
  t42113 = 3.e-6*t32073;
  t42114 = 0.000133*t32418;
  t42115 = t42112 + t42113 + t42114;
  t42117 = 3.e-6*t31732;
  t42118 = 0.000136*t32418;
  t42123 = t42117 + t42118;
  t41793 = t73*t284;
  t41806 = t44*t5576;
  t41809 = 0.113 + t41793 + t41806;
  t41839 = 0.098*t9422;
  t41840 = t24191*t28236;
  t41843 = t22719*t28372;
  t41844 = t41839 + t41840 + t41843;
  t41866 = -1.*t9092*t9422;
  t41879 = t10520*t11402*t8005;
  t41887 = t41866 + t41879;
  t41893 = 0.1*t41887;
  t41898 = t24017*t29016;
  t41903 = t24283*t29054;
  t41910 = t41893 + t41898 + t41903;
  t33836 = 0.18533*t22605*t33790;
  t34228 = 0.18533*t24409*t34219;
  t34836 = 0.18533*t24409*t34823;
  t35234 = 0.18533*t24119*t35226;
  t35662 = 0.18533*t20488*t35647;
  t35714 = t33836 + t34228 + t34836 + t35234 + t35662;
  t41993 = t23209*t30973;
  t42002 = t24251*t31129;
  t42006 = t41993 + t42002;
  t41364 = 0.18533*t31937*t33790;
  t41391 = 0.18533*t32583*t34219;
  t41627 = 0.18533*t32583*t34823;
  t41630 = 0.18533*t32247*t35226;
  t41638 = 0.18533*t39621*t35647;
  t41641 = t41364 + t41391 + t41627 + t41630 + t41638;
  t39276 = 0.18533*t32930*t33790;
  t39283 = 0.18533*t33167*t34219;
  t39285 = 0.18533*t33167*t34823;
  t39312 = 0.18533*t33061*t35226;
  t39329 = 0.18533*t38276*t35647;
  t39334 = t39276 + t39283 + t39285 + t39312 + t39329;
  t42052 = 0.18533*t34823*t36266;
  t42053 = 0.18533*t35226*t36676;
  t42056 = 0.18533*t35647*t41745;
  t42057 = 0.18533*t33790*t37260;
  t42060 = 0.18533*t34219*t37607;
  t42065 = 0.18533*t42064*t38059;
  t42368 = 3.e-6*t24251;
  t42343 = -3.e-6*t18329;
  t42352 = 0.000133*t24251;
  t42356 = 3.e-6*t23209;
  t42361 = t42343 + t42352 + t42356;
  t42370 = 0.000136*t23209;
  t42371 = t42368 + t42370;
  t42375 = 0.000136*t24251;
  t42376 = 3.e-6*t22427;
  t42377 = t42375 + t42376;
  t42385 = 0.000133*t22427;
  t42388 = t42368 + t42385;
  t30310 = 0.18533*t24409*t30302;
  t30394 = 0.18533*t22605*t30389;
  t30654 = 0.18533*t24409*t30624;
  t30932 = 0.18533*t24119*t30912;
  t31541 = 0.18533*t20488*t31518;
  t31570 = t30310 + t30394 + t30654 + t30932 + t31541;
  t40888 = 0.18533*t31518*t39621;
  t40918 = 0.18533*t30389*t31937;
  t40968 = 0.18533*t30912*t32247;
  t40969 = 0.18533*t30302*t32583;
  t40970 = 0.18533*t30624*t32583;
  t40971 = t40888 + t40918 + t40968 + t40969 + t40970;
  t38995 = 0.18533*t31518*t38276;
  t39002 = 0.18533*t30389*t32930;
  t39030 = 0.18533*t30912*t33061;
  t39034 = 0.18533*t30302*t33167;
  t39071 = 0.18533*t30624*t33167;
  t39079 = t38995 + t39002 + t39030 + t39034 + t39071;
  t42257 = 0.18533*t30624*t33790;
  t42265 = 0.18533*t30912*t34219;
  t42271 = 0.18533*t31518*t42064;
  t42276 = 0.18533*t30389*t34823;
  t42277 = 0.18533*t30302*t35226;
  t42278 = 0.18533*t42006*t35647;
  t41978 = 0.18533*t30624*t36266;
  t41981 = 0.18533*t30912*t36676;
  t41982 = 0.18533*t31518*t41745;
  t41988 = 0.18533*t30389*t37260;
  t41991 = 0.18533*t30302*t37607;
  t42012 = 0.18533*t42006*t38059;
  t42542 = 3.e-6*t24283;
  t42537 = -3.e-6*t19418;
  t42538 = 0.000133*t24283;
  t42539 = 3.e-6*t24017;
  t42540 = t42537 + t42538 + t42539;
  t42543 = 0.000136*t24017;
  t42544 = t42542 + t42543;
  t42555 = 0.000136*t24283;
  t42561 = 3.e-6*t22559;
  t42565 = t42555 + t42561;
  t42567 = 0.000133*t22559;
  t42568 = t42542 + t42567;
  t29265 = 0.18533*t29251*t20488;
  t29377 = 0.18533*t29369*t22605;
  t29505 = 0.18533*t29500*t24119;
  t29611 = 0.18533*t29603*t24409;
  t29794 = 0.18533*t29774*t24409;
  t29809 = t29265 + t29377 + t29505 + t29611 + t29794;
  t42467 = 0.18533*t29500*t30302;
  t42469 = 0.18533*t29251*t42006;
  t42470 = 0.18533*t29774*t30389;
  t42471 = 0.18533*t29369*t30624;
  t42472 = 0.18533*t29603*t30912;
  t42473 = 0.18533*t41910*t31518;
  t40787 = 0.18533*t29251*t39621;
  t40808 = 0.18533*t29369*t31937;
  t40838 = 0.18533*t29500*t32247;
  t40842 = 0.18533*t29603*t32583;
  t40846 = 0.18533*t29774*t32583;
  t40851 = t40787 + t40808 + t40838 + t40842 + t40846;
  t38828 = 0.18533*t29251*t38276;
  t38837 = 0.18533*t29369*t32930;
  t38876 = 0.18533*t29500*t33061;
  t38881 = 0.18533*t29603*t33167;
  t38920 = 0.18533*t29774*t33167;
  t38927 = t38828 + t38837 + t38876 + t38881 + t38920;
  t42197 = 0.18533*t29774*t33790;
  t42198 = 0.18533*t29500*t34219;
  t42199 = 0.18533*t29251*t42064;
  t42204 = 0.18533*t29369*t34823;
  t42209 = 0.18533*t29603*t35226;
  t42213 = 0.18533*t41910*t35647;
  t41858 = 0.18533*t29774*t36266;
  t41860 = 0.18533*t29500*t36676;
  t41861 = 0.18533*t29251*t41745;
  t41863 = 0.18533*t29369*t37260;
  t41865 = 0.18533*t29603*t37607;
  t41914 = 0.18533*t41910*t38059;
  t42681 = 3.e-6*t24191;
  t42680 = 0.000133*t20958;
  t42684 = t42680 + t42681;
  t42694 = 0.000136*t22719;
  t42698 = t42694 + t42681;
  t42709 = -3.e-6*t7711*t8005;
  t42710 = 3.e-6*t22719;
  t42712 = 0.000133*t24191;
  t42713 = t42709 + t42710 + t42712;
  t42716 = 3.e-6*t20958;
  t42717 = 0.000136*t24191;
  t42718 = t42716 + t42717;
  t42618 = 0.18533*t28716*t29603;
  t42619 = 0.18533*t28444*t41910;
  t42620 = 0.18533*t28876*t29369;
  t42623 = 0.18533*t28548*t29774;
  t42624 = 0.18533*t28765*t29500;
  t42625 = 0.18533*t41844*t29251;
  t28454 = 0.18533*t28444*t20488;
  t28555 = 0.18533*t28548*t22605;
  t28723 = 0.18533*t28716*t24119;
  t28772 = 0.18533*t28765*t24409;
  t28885 = 0.18533*t28876*t24409;
  t28889 = t28454 + t28555 + t28723 + t28772 + t28885;
  t42442 = 0.18533*t28716*t30302;
  t42444 = 0.18533*t28444*t42006;
  t42446 = 0.18533*t28876*t30389;
  t42447 = 0.18533*t28548*t30624;
  t42448 = 0.18533*t28765*t30912;
  t42449 = 0.18533*t41844*t31518;
  t40683 = 0.18533*t28444*t39621;
  t40695 = 0.18533*t28548*t31937;
  t40712 = 0.18533*t28716*t32247;
  t40755 = 0.18533*t28765*t32583;
  t40759 = 0.18533*t28876*t32583;
  t40766 = t40683 + t40695 + t40712 + t40755 + t40759;
  t38660 = 0.18533*t28444*t38276;
  t38699 = 0.18533*t28548*t32930;
  t38703 = 0.18533*t28716*t33061;
  t38734 = 0.18533*t28765*t33167;
  t38739 = 0.18533*t28876*t33167;
  t38776 = t38660 + t38699 + t38703 + t38734 + t38739;
  t42182 = 0.18533*t28876*t33790;
  t42184 = 0.18533*t28716*t34219;
  t42185 = 0.18533*t28444*t42064;
  t42187 = 0.18533*t28548*t34823;
  t42188 = 0.18533*t28765*t35226;
  t42189 = 0.18533*t41844*t35647;
  t41829 = 0.18533*t28876*t36266;
  t41835 = 0.18533*t28716*t36676;
  t41836 = 0.18533*t28444*t41745;
  t41837 = 0.18533*t28548*t37260;
  t41838 = 0.18533*t28765*t37607;
  t41845 = 0.18533*t41844*t38059;
  t42842 = 3.e-6*t8005*t73;
  t42809 = -3.e-6*t44*t8005;
  t42841 = -0.000136*t44*t8005;
  t42846 = t42841 + t42842;
  t42852 = 0.000133*t44*t8005;
  t42853 = t42852 + t42842;
  t42857 = -3.e-6*t9422;
  t42858 = 0.000133*t8005*t73;
  t42859 = t42857 + t42809 + t42858;
  t42862 = 3.e-6*t44*t8005;
  t42863 = 0.000136*t8005*t73;
  t42864 = t42862 + t42863;
  t42720 = 0.18533*t26111*t28548;
  t42721 = 0.18533*t25228*t28765;
  t42722 = 0.18533*t24972*t41844;
  t42724 = 0.18533*t25123*t28876;
  t42725 = 0.18533*t25302*t28716;
  t42726 = 0.18533*t41775*t28444;
  t42572 = 0.18533*t25228*t29603;
  t42573 = 0.18533*t24972*t41910;
  t42574 = 0.18533*t26111*t29369;
  t42575 = 0.18533*t25123*t29774;
  t42577 = 0.18533*t25302*t29500;
  t42578 = 0.18533*t41775*t29251;
  t24994 = 0.18533*t24972*t20488;
  t25129 = 0.18533*t25123*t22605;
  t25231 = 0.18533*t25228*t24119;
  t25321 = 0.18533*t25302*t24409;
  t27389 = 0.18533*t26111*t24409;
  t27642 = t24994 + t25129 + t25231 + t25321 + t27389;
  t42394 = 0.18533*t25228*t30302;
  t42399 = 0.18533*t24972*t42006;
  t42400 = 0.18533*t26111*t30389;
  t42402 = 0.18533*t25123*t30624;
  t42406 = 0.18533*t25302*t30912;
  t42408 = 0.18533*t41775*t31518;
  t40594 = 0.18533*t24972*t39621;
  t40596 = 0.18533*t25123*t31937;
  t40607 = 0.18533*t25228*t32247;
  t40617 = 0.18533*t25302*t32583;
  t40638 = 0.18533*t26111*t32583;
  t40666 = t40594 + t40596 + t40607 + t40617 + t40638;
  t38524 = 0.18533*t24972*t38276;
  t38540 = 0.18533*t25123*t32930;
  t38561 = 0.18533*t25228*t33061;
  t38585 = 0.18533*t25302*t33167;
  t38603 = 0.18533*t26111*t33167;
  t38616 = t38524 + t38540 + t38561 + t38585 + t38603;
  t42125 = 0.18533*t26111*t33790;
  t42126 = 0.18533*t25228*t34219;
  t42127 = 0.18533*t24972*t42064;
  t42128 = 0.18533*t25123*t34823;
  t42129 = 0.18533*t25302*t35226;
  t42131 = 0.18533*t41775*t35647;
  t41736 = 0.18533*t26111*t36266;
  t41738 = 0.18533*t25228*t36676;
  t41746 = 0.18533*t24972*t41745;
  t41747 = 0.18533*t25123*t37260;
  t41750 = 0.18533*t25302*t37607;
  t41777 = 0.18533*t41775*t38059;
  t42997 = 3.e-6*t44;
  t43004 = 0.000136*t44;
  t43011 = -3.e-6*t73;
  t43019 = t43004 + t43011;
  t43029 = 0.000133*t44;
  t43030 = 3.e-6*t73;
  t43032 = t43029 + t43030;
  t42998 = -0.000133*t73;
  t42999 = t42997 + t42998;
  t43001 = 0.000136*t73;
  t43002 = t42997 + t43001;
  t42866 = -0.0167334457*t73*t25302;
  t42867 = -0.0167334457*t73*t26111;
  t42869 = -0.0167334457*t44*t25123;
  t42872 = 0.18533*t41775*t6584;
  t42873 = 0.18533*t41809*t24972;
  t42875 = 0.0167334457*t44*t25228;
  t42734 = -0.0167334457*t44*t28548;
  t42735 = -0.0167334457*t73*t28765;
  t42736 = 0.18533*t6584*t41844;
  t42737 = -0.0167334457*t73*t28876;
  t42738 = 0.0167334457*t44*t28716;
  t42739 = 0.18533*t41809*t28444;
  t42604 = -0.0167334457*t73*t29603;
  t42605 = 0.18533*t6584*t41910;
  t42606 = -0.0167334457*t44*t29369;
  t42608 = -0.0167334457*t73*t29774;
  t42609 = 0.0167334457*t44*t29500;
  t42610 = 0.18533*t41809*t29251;
  t20551 = 0.18533*t6584*t20488;
  t22646 = -0.0167334457*t73*t22605;
  t24122 = -0.0167334457*t73*t24119;
  t24141 = t20551 + t22646 + t24122;
  t42421 = -0.0167334457*t73*t30302;
  t42422 = 0.18533*t6584*t42006;
  t42423 = -0.0167334457*t44*t30389;
  t42424 = -0.0167334457*t73*t30624;
  t42425 = 0.0167334457*t44*t30912;
  t42430 = 0.18533*t41809*t31518;
  t39632 = 0.18533*t6584*t39621;
  t39651 = -0.0167334457*t73*t31937;
  t39682 = -0.0167334457*t73*t32247;
  t39709 = t39632 + t39651 + t39682;
  t38319 = 0.18533*t6584*t38276;
  t38329 = -0.0167334457*t73*t32930;
  t38372 = -0.0167334457*t73*t33061;
  t38378 = t38319 + t38329 + t38372;
  t42142 = -0.0167334457*t44*t33790;
  t42143 = -0.0167334457*t73*t34219;
  t42144 = 0.18533*t6584*t42064;
  t42145 = -0.0167334457*t73*t34823;
  t42146 = 0.0167334457*t44*t35226;
  t42147 = 0.18533*t41809*t35647;
  t41787 = -0.0167334457*t44*t36266;
  t41789 = -0.0167334457*t73*t36676;
  t41790 = 0.18533*t6584*t41745;
  t41791 = -0.0167334457*t73*t37260;
  t41792 = 0.0167334457*t44*t37607;
  t41815 = 0.18533*t41809*t38059;
  t42993 = 0.000014725432216*t44;
  t42994 = 0.000054539012756*t73;
  t42995 = t42993 + t42994;
  t42815 = -0.0001630904*t26111;
  t42822 = -0.0005708164*t25228;
  t42828 = t42809 + t42815 + t42822;
  t42673 = -3.e-6*t20958;
  t42674 = -0.0001630904*t28876;
  t42676 = -0.0005708164*t28716;
  t42677 = t42673 + t42674 + t42676;
  t42528 = -3.e-6*t22559;
  t42529 = -0.0001630904*t29774;
  t42530 = -0.0005708164*t29500;
  t42533 = t42528 + t42529 + t42530;
  t24159 = -0.0001630904*t22605;
  t24424 = -0.0005708164*t24409;
  t24432 = t24159 + t24424;
  t42329 = -3.e-6*t22427;
  t42330 = -0.0001630904*t30624;
  t42335 = -0.0005708164*t30912;
  t42336 = t42329 + t42330 + t42335;
  t40053 = -0.0001630904*t31937;
  t40258 = -0.0005708164*t32583;
  t40375 = t40053 + t40258;
  t38433 = -0.0001630904*t32930;
  t38471 = -0.0005708164*t33167;
  t38488 = t38433 + t38471;
  t42095 = -3.e-6*t31732;
  t42096 = -0.0001630904*t34823;
  t42097 = -0.0005708164*t35226;
  t42099 = t42095 + t42096 + t42097;
  t41681 = -3.e-6*t22605;
  t41686 = -0.0001630904*t37260;
  t41690 = -0.0005708164*t37607;
  t41691 = t41681 + t41686 + t41690;
  p_output1[0]=var2[12]*(-0.5*(0.37066*t22605*t24409 + 0.37066*t24119*t24409)*var2[0] - 0.5*t33270*var2[1] - 0.5*t32711*var2[2] - 0.5*t38110*var2[3] - 0.5*t35714*var2[4] - 0.5*t31570*var2[5] - 0.5*t29809*var2[8] - 0.5*t28889*var2[9] - 0.5*t27642*var2[10] - 0.5*t24141*var2[11] - 0.5*t24432*var2[12]);
  p_output1[1]=var2[12]*(-0.5*t33270*var2[0] - 0.5*(0.37066*t32930*t33167 + 0.37066*t33061*t33167)*var2[1] - 0.5*t39181*var2[2] - 0.5*t39468*var2[3] - 0.5*t39334*var2[4] - 0.5*t39079*var2[5] - 0.5*t38927*var2[8] - 0.5*t38776*var2[9] - 0.5*t38616*var2[10] - 0.5*t38378*var2[11] - 0.5*t38488*var2[12]);
  p_output1[2]=var2[12]*(-0.5*t32711*var2[0] - 0.5*t39181*var2[1] - 0.5*(0.37066*t31937*t32583 + 0.37066*t32247*t32583)*var2[2] - 0.5*t41665*var2[3] - 0.5*t41641*var2[4] - 0.5*t40971*var2[5] - 0.5*t40851*var2[8] - 0.5*t40766*var2[9] - 0.5*t40666*var2[10] - 0.5*t39709*var2[11] - 0.5*t40375*var2[12]);
  p_output1[3]=var2[12]*(-0.5*t38110*var2[0] - 0.5*t39468*var2[1] - 0.5*t41665*var2[2] - 0.5*(-3.e-6*t20488*t22605 + 0.37066*t36266*t37260 + 0.37066*t36676*t37607 + t24409*t41701 + t24409*t41707 + t22605*t41728 + t24119*t41734 + 0.37066*t38059*t41745)*var2[3] - 0.5*(-3.e-6*t22605*t33482 + t32418*t41701 + t32418*t41707 + t31732*t41728 + t32073*t41734 + t42052 + t42053 + t42056 + t42057 + t42060 + t42065)*var2[4] - 0.5*(-3.e-6*t18329*t22605 + t24251*t41701 + t24251*t41707 + t22427*t41728 + t23209*t41734 + t41978 + t41981 + t41982 + t41988 + t41991 + t42012)*var2[5] - 0.5*(-3.e-6*t19418*t22605 + t24283*t41701 + t24283*t41707 + t22559*t41728 + t24017*t41734 + t41858 + t41860 + t41861 + t41863 + t41865 + t41914)*var2[8] - 0.5*(t24191*t41701 + t24191*t41707 + t20958*t41728 + t22719*t41734 + t41829 + t41835 + t41836 + t41837 + t41838 + t41845 - 3.e-6*t22605*t7711*t8005)*var2[9] - 0.5*(t41736 + t41738 + t41746 + t41747 + t41750 + t41777 + t41728*t44*t8005 - 1.*t41734*t44*t8005 + t41701*t73*t8005 + t41707*t73*t8005 - 3.e-6*t22605*t9422)*var2[10] - 0.5*(t41787 + t41789 + t41790 + t41791 + t41792 + t41815 + t41701*t44 + t41707*t44 - 1.*t41728*t73 + t41734*t73)*var2[11] - 0.5*t41691*var2[12]);
  p_output1[4]=var2[12]*(-0.5*t35714*var2[0] - 0.5*t39334*var2[1] - 0.5*t41641*var2[2] - 0.5*(-3.e-6*t20488*t31732 + t42052 + t42053 + t42056 + t42057 + t42060 + t42065 + t24409*t42106 + t24409*t42110 + t22605*t42115 + t24119*t42123)*var2[3] - 0.5*(-3.e-6*t31732*t33482 + 0.37066*t33790*t34823 + 0.37066*t34219*t35226 + 0.37066*t35647*t42064 + t32418*t42106 + t32418*t42110 + t31732*t42115 + t32073*t42123)*var2[4] - 0.5*(-3.e-6*t18329*t31732 + t24251*t42106 + t24251*t42110 + t22427*t42115 + t23209*t42123 + t42257 + t42265 + t42271 + t42276 + t42277 + t42278)*var2[5] - 0.5*(-3.e-6*t19418*t31732 + t24283*t42106 + t24283*t42110 + t22559*t42115 + t24017*t42123 + t42197 + t42198 + t42199 + t42204 + t42209 + t42213)*var2[8] - 0.5*(t24191*t42106 + t24191*t42110 + t20958*t42115 + t22719*t42123 + t42182 + t42184 + t42185 + t42187 + t42188 + t42189 - 3.e-6*t31732*t7711*t8005)*var2[9] - 0.5*(t42125 + t42126 + t42127 + t42128 + t42129 + t42131 + t42115*t44*t8005 - 1.*t42123*t44*t8005 + t42106*t73*t8005 + t42110*t73*t8005 - 3.e-6*t31732*t9422)*var2[10] - 0.5*(t42142 + t42143 + t42144 + t42145 + t42146 + t42147 + t42106*t44 + t42110*t44 - 1.*t42115*t73 + t42123*t73)*var2[11] - 0.5*t42099*var2[12]);
  p_output1[5]=var2[12]*(-0.5*t31570*var2[0] - 0.5*t39079*var2[1] - 0.5*t40971*var2[2] - 0.5*(-3.e-6*t20488*t22427 + t41978 + t41981 + t41982 + t41988 + t41991 + t42012 + t22605*t42361 + t24409*t42371 + t24119*t42377 + t24409*t42388)*var2[3] - 0.5*(-3.e-6*t22427*t33482 + t42257 + t42265 + t42271 + t42276 + t42277 + t42278 + t31732*t42361 + t32418*t42371 + t32073*t42377 + t32418*t42388)*var2[4] - 0.5*(-3.e-6*t18329*t22427 + 0.37066*t30389*t30624 + 0.37066*t30302*t30912 + 0.37066*t31518*t42006 + t22427*t42361 + t24251*t42371 + t23209*t42377 + t24251*t42388)*var2[5] - 0.5*(-3.e-6*t19418*t22427 + t22559*t42361 + t24283*t42371 + t24017*t42377 + t24283*t42388 + t42467 + t42469 + t42470 + t42471 + t42472 + t42473)*var2[8] - 0.5*(t20958*t42361 + t24191*t42371 + t22719*t42377 + t24191*t42388 + t42442 + t42444 + t42446 + t42447 + t42448 + t42449 - 3.e-6*t22427*t7711*t8005)*var2[9] - 0.5*(t42394 + t42399 + t42400 + t42402 + t42406 + t42408 + t42361*t44*t8005 - 1.*t42377*t44*t8005 + t42371*t73*t8005 + t42388*t73*t8005 - 3.e-6*t22427*t9422)*var2[10] - 0.5*(t42421 + t42422 + t42423 + t42424 + t42425 + t42430 + t42371*t44 + t42388*t44 - 1.*t42361*t73 + t42377*t73)*var2[11] - 0.5*t42336*var2[12]);
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=var2[12]*(-0.5*t29809*var2[0] - 0.5*t38927*var2[1] - 0.5*t40851*var2[2] - 0.5*(-3.e-6*t20488*t22559 + t41858 + t41860 + t41861 + t41863 + t41865 + t41914 + t22605*t42540 + t24409*t42544 + t24119*t42565 + t24409*t42568)*var2[3] - 0.5*(-3.e-6*t22559*t33482 + t42197 + t42198 + t42199 + t42204 + t42209 + t42213 + t31732*t42540 + t32418*t42544 + t32073*t42565 + t32418*t42568)*var2[4] - 0.5*(-3.e-6*t18329*t22559 + t42467 + t42469 + t42470 + t42471 + t42472 + t42473 + t22427*t42540 + t24251*t42544 + t23209*t42565 + t24251*t42568)*var2[5] - 0.5*(-3.e-6*t19418*t22559 + 0.37066*t29500*t29603 + 0.37066*t29369*t29774 + 0.37066*t29251*t41910 + t22559*t42540 + t24283*t42544 + t24017*t42565 + t24283*t42568)*var2[8] - 0.5*(t20958*t42540 + t24191*t42544 + t22719*t42565 + t24191*t42568 + t42618 + t42619 + t42620 + t42623 + t42624 + t42625 - 3.e-6*t22559*t7711*t8005)*var2[9] - 0.5*(t42572 + t42573 + t42574 + t42575 + t42577 + t42578 + t42540*t44*t8005 - 1.*t42565*t44*t8005 + t42544*t73*t8005 + t42568*t73*t8005 - 3.e-6*t22559*t9422)*var2[10] - 0.5*(t42604 + t42605 + t42606 + t42608 + t42609 + t42610 + t42544*t44 + t42568*t44 - 1.*t42540*t73 + t42565*t73)*var2[11] - 0.5*t42533*var2[12]);
  p_output1[9]=var2[12]*(-0.5*t28889*var2[0] - 0.5*t38776*var2[1] - 0.5*t40766*var2[2] - 0.5*(-3.e-6*t20488*t20958 + t41829 + t41835 + t41836 + t41837 + t41838 + t41845 + t24409*t42684 + t24409*t42698 + t22605*t42713 + t24119*t42718)*var2[3] - 0.5*(-3.e-6*t20958*t33482 + t42182 + t42184 + t42185 + t42187 + t42188 + t42189 + t32418*t42684 + t32418*t42698 + t31732*t42713 + t32073*t42718)*var2[4] - 0.5*(-3.e-6*t18329*t20958 + t42442 + t42444 + t42446 + t42447 + t42448 + t42449 + t24251*t42684 + t24251*t42698 + t22427*t42713 + t23209*t42718)*var2[5] - 0.5*(-3.e-6*t19418*t20958 + t42618 + t42619 + t42620 + t42623 + t42624 + t42625 + t24283*t42684 + t24283*t42698 + t22559*t42713 + t24017*t42718)*var2[8] - 0.5*(0.37066*t28716*t28765 + 0.37066*t28548*t28876 + 0.37066*t28444*t41844 + t24191*t42684 + t24191*t42698 + t20958*t42713 + t22719*t42718 - 3.e-6*t20958*t7711*t8005)*var2[9] - 0.5*(t42720 + t42721 + t42722 + t42724 + t42725 + t42726 + t42713*t44*t8005 - 1.*t42718*t44*t8005 + t42684*t73*t8005 + t42698*t73*t8005 - 3.e-6*t20958*t9422)*var2[10] - 0.5*(t42734 + t42735 + t42736 + t42737 + t42738 + t42739 + t42684*t44 + t42698*t44 - 1.*t42713*t73 + t42718*t73)*var2[11] - 0.5*t42677*var2[12]);
  p_output1[10]=var2[12]*(-0.5*t27642*var2[0] - 0.5*t38616*var2[1] - 0.5*t40666*var2[2] - 0.5*(t41736 + t41738 + t41746 + t41747 + t41750 + t41777 + t24409*t42846 + t24409*t42853 + t22605*t42859 + t24119*t42864 - 3.e-6*t20488*t44*t8005)*var2[3] - 0.5*(t42125 + t42126 + t42127 + t42128 + t42129 + t42131 + t32418*t42846 + t32418*t42853 + t31732*t42859 + t32073*t42864 - 3.e-6*t33482*t44*t8005)*var2[4] - 0.5*(t42394 + t42399 + t42400 + t42402 + t42406 + t42408 + t24251*t42846 + t24251*t42853 + t22427*t42859 + t23209*t42864 - 3.e-6*t18329*t44*t8005)*var2[5] - 0.5*(t42572 + t42573 + t42574 + t42575 + t42577 + t42578 + t24283*t42846 + t24283*t42853 + t22559*t42859 + t24017*t42864 - 3.e-6*t19418*t44*t8005)*var2[8] - 0.5*(t42720 + t42721 + t42722 + t42724 + t42725 + t42726 + t24191*t42846 + t24191*t42853 + t20958*t42859 + t22719*t42864 - 3.e-6*t24825*t44*t7711)*var2[9] - 0.5*(0.37066*t25228*t25302 + 0.37066*t25123*t26111 + 0.37066*t24972*t41775 + t42859*t44*t8005 - 1.*t42864*t44*t8005 + t42846*t73*t8005 + t42853*t73*t8005 - 3.e-6*t44*t8005*t9422)*var2[10] - 0.5*(t42866 + t42867 + t42869 + t42872 + t42873 + t42875 + t42846*t44 + t42853*t44 - 1.*t42859*t73 + t42864*t73)*var2[11] - 0.5*t42828*var2[12]);
  p_output1[11]=var2[12]*(-0.5*t24141*var2[0] - 0.5*t38378*var2[1] - 0.5*t39709*var2[2] - 0.5*(t41787 + t41789 + t41790 + t41791 + t41792 + t41815 + t24409*t42999 + t24409*t43002 + t24119*t43019 + t22605*t43032 + 3.e-6*t20488*t73)*var2[3] - 0.5*(t42142 + t42143 + t42144 + t42145 + t42146 + t42147 + t32418*t42999 + t32418*t43002 + t32073*t43019 + t31732*t43032 + 3.e-6*t33482*t73)*var2[4] - 0.5*(t42421 + t42422 + t42423 + t42424 + t42425 + t42430 + t24251*t42999 + t24251*t43002 + t23209*t43019 + t22427*t43032 + 3.e-6*t18329*t73)*var2[5] - 0.5*(t42604 + t42605 + t42606 + t42608 + t42609 + t42610 + t24283*t42999 + t24283*t43002 + t24017*t43019 + t22559*t43032 + 3.e-6*t19418*t73)*var2[8] - 0.5*(t42734 + t42735 + t42736 + t42737 + t42738 + t42739 + t24191*t42999 + t24191*t43002 + t22719*t43019 + t20958*t43032 + 3.e-6*t73*t7711*t8005)*var2[9] - 0.5*(t42866 + t42867 + t42869 + t42872 + t42873 + t42875 - 1.*t43019*t44*t8005 + t43032*t44*t8005 + t42999*t73*t8005 + t43002*t73*t8005 + 3.e-6*t73*t9422)*var2[10] - 0.5*(t42999*t44 + t43002*t44 + 0.37066*t41809*t6584 + t43019*t73 - 1.*t43032*t73)*var2[11] - 0.5*t42995*var2[12]);
  p_output1[12]=(-0.5*t24432*var2[0] - 0.5*t38488*var2[1] - 0.5*t40375*var2[2] - 0.5*t41691*var2[3] - 0.5*t42099*var2[4] - 0.5*t42336*var2[5] - 0.5*t42533*var2[8] - 0.5*t42677*var2[9] - 0.5*t42828*var2[10] - 0.5*t42995*var2[11])*var2[12];
  p_output1[13]=0;
  p_output1[14]=0;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
  p_output1[18]=0;
  p_output1[19]=0;
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=0;
  p_output1[24]=0;
  p_output1[25]=0;
  p_output1[26]=0;
  p_output1[27]=0;
  p_output1[28]=0;
  p_output1[29]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 30 && ncols == 1) && 
      !(mrows == 1 && ncols == 30))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 30 && ncols == 1) && 
      !(mrows == 1 && ncols == 30))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 30, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "Ce2_vec13_NaoH25V50.hh"

namespace SymFunction
{

void Ce2_vec13_NaoH25V50_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
